--[[

	@ VPrediction
	@ FIX CN
	@ 4.21
	
	@ B1nk
	@ 2015-01-01
	@ Q:384232347

]]

assert(load(Base64Decode("bG9jYWwgbj0iNC4yMSJsb2NhbCBlPWZhbHNlIGxvY2FsIHI9dHJ1ZSBsb2NhbCB0PSJyYXcuZ2l0aHViLmNvbSJsb2NhbCBlPSIvYjFuay9ib0wvbWFzdGVyL2NvbW1vbi9WUHJlZGljdGlvbi5sdWEiLi4iP3JhbmQ9Ii4ubWF0aC5yYW5kb20oMSwxZTQpbG9jYWwgaT1MSUJfUEFUSC4uInZQcmVkaWN0aW9uLmx1YSJsb2NhbCBhPSJodHRwczovLyIuLnQuLmUgbG9jYWwgZnVuY3Rpb24gZShlKXByaW50KCc8Zm9udCBjb2xvcj0iIzY2OTlmZiI+PGI+VlByZWRpY3Rpb24gQ04gRklYOjwvYj48L2ZvbnQ+IDxmb250IGNvbG9yPSIjRkZGRkZGIj4nLi5lLi4iLjwvZm9udD4iKWVuZCBpZiByIHRoZW4gbG9jYWwgdD1HZXRXZWJSZXN1bHQodCwiL2IxbmsvYm9ML21hc3Rlci92ZXJzaW9uL1ZQcmVkaWN0aW9uLnZlcnNpb24iKWlmIHQgdGhlbiBTZXJ2ZXJWZXJzaW9uPXR5cGUodG9udW1iZXIodCkpPT0ibnVtYmVyImFuZCB0b251bWJlcih0KW9yIG5pbCBpZiBTZXJ2ZXJWZXJzaW9uIHRoZW4gaWYgdG9udW1iZXIobik8U2VydmVyVmVyc2lvbiB0aGVuIGUoIk5ldyB2ZXJzaW9uIGF2YWlsYWJsZSIuLlNlcnZlclZlcnNpb24pZSgiVXBkYXRpbmcsIHBsZWFzZSBkb24ndCBwcmVzcyBGOSIpRGVsYXlBY3Rpb24oZnVuY3Rpb24oKURvd25sb2FkRmlsZShhLGksZnVuY3Rpb24oKWUoIlN1Y2Nlc3NmdWxseSB1cGRhdGVkLiAoIi4ubi4uIiA9PiAiLi5TZXJ2ZXJWZXJzaW9uLi4iKSwgcHJlc3MgRjkgdHdpY2UgdG8gbG9hZCB0aGUgdXBkYXRlZCB2ZXJzaW9uLiIpZW5kKWVuZCwzKWVsc2UgZSgiWW91IGhhdmUgZ290IHRoZSBsYXRlc3QgdmVyc2lvbiAoIi4uU2VydmVyVmVyc2lvbi4uIikiKWVuZCBlbmQgZWxzZSBlKCJFcnJvciBkb3dubG9hZGluZyB2ZXJzaW9uIGluZm8iKWVuZCBlbmQgbG9jYWwgbSxlLGM9MSwyLDMgY2xhc3MnVlByZWRpY3Rpb24nZnVuY3Rpb24gVlByZWRpY3Rpb246X19pbml0KClzZWxmLnZlcnNpb249dG9udW1iZXIobilzZWxmLnNob3dkZXZtb2RlPWZhbHNlIHNlbGYuaGl0Ym94ZXM9e1snQnJhdW0nXT04MCxbJ1JlY0l0ZW1zQ0xBU1NJQyddPTY1LFsnVGVlbW9NdXNocm9vbSddPTUwLFsnVGVzdEN1YmVSZW5kZXInXT02NSxbJ1hlcmF0aCddPTY1LFsnS2Fzc2FkaW4nXT02NSxbJ1JlbmdhciddPTY1LFsnVGhyZXNoJ109NTUsWydSZWNJdGVtc1RVVE9SSUFMJ109NjUsWydaaWdncyddPTU1LFsnWnlyYVBhc3NpdmUnXT0yMCxbJ1p5cmFUaG9yblBsYW50J109MjAsWydLb2dNYXcnXT02NSxbJ0hlaW1lclRCbHVlJ109MzUsWydFbGlzZVNwaWRlciddPTY1LFsnU2thcm5lciddPTgwLFsnQ2hhb3NOZXh1cyddPTY1LFsnS2F0YXJpbmEnXT02NSxbJ1JpdmVuJ109NjUsWydTaWdodFdhcmQnXT0xLFsnSGVpbWVyVFllbGxvdyddPTM1LFsnQXNoZSddPTY1LFsnVmlzaW9uV2FyZCddPTEsWydUVF9OR29sZW0yJ109ODAsWydUaHJlc2hMYW50ZXJuJ109NjUsWydSZWNJdGVtc0NMQVNTSUNNYXAxMCddPTY1LFsnUmVjSXRlbXNPRElOJ109NjUsWydUVF9TcGlkZXJib3NzJ109MjAwLFsnUmVjSXRlbXNBUkFNJ109NjUsWydPcmRlck5leHVzJ109NjUsWydTb3Jha2EnXT02NSxbJ0ppbngnXT02NSxbJ1Rlc3RDdWJlUmVuZGVyd0NvbGxpc2lvbiddPTY1LFsnUmVkX01pbmlvbl9XaXphcmQnXT00OCxbJ0phcnZhbklWJ109NjUsWydCbHVlX01pbmlvbl9XaXphcmQnXT00OCxbJ1RUX0NoYW9zVHVycmV0MiddPTg4LjQsWydUVF9DaGFvc1R1cnJldDMnXT04OC40LFsnVFRfQ2hhb3NUdXJyZXQxJ109ODguNCxbJ0NoYW9zVHVycmV0R2lhbnQnXT04OC40LFsnRHJhZ29uJ109MTAwLFsnTHVsdVNub3dtYW4nXT01MCxbJ1dvcm0nXT0xMDAsWydDaGFvc1R1cnJldFdvcm0nXT04OC40LFsnVFRfQ2hhb3NJbmhpYml0b3InXT02NSxbJ0NoYW9zVHVycmV0Tm9ybWFsJ109ODguNCxbJ0FuY2llbnRHb2xlbSddPTEwMCxbJ1p5cmFHcmFzcGluZ1BsYW50J109MjAsWydIQV9BUF9PcmRlclR1cnJldDMnXT04OC40LFsnSEFfQVBfT3JkZXJUdXJyZXQyJ109ODguNCxbJ1RyeW5kYW1lcmUnXT02NSxbJ09yZGVyVHVycmV0Tm9ybWFsMiddPTg4LjQsWydTaW5nZWQnXT02NSxbJ09yZGVySW5oaWJpdG9yJ109NjUsWydEaWFuYSddPTY1LFsnSEFfRkJfSGVhbHRoUmVsaWMnXT02NSxbJ1RUX09yZGVySW5oaWJpdG9yJ109NjUsWydHcmVhdFdyYWl0aCddPTgwLFsnWWFzdW8nXT02NSxbJ09yZGVyVHVycmV0RHJhZ29uJ109ODguNCxbJ09yZGVyVHVycmV0Tm9ybWFsJ109ODguNCxbJ0xpemFyZEVsZGVyJ109NjUsWydIQV9BUF9DaGFvc1R1cnJldCddPTg4LjQsWydBaHJpJ109NjUsWydMdWx1J109NjUsWydDaGFvc0luaGliaXRvciddPTY1LFsnSEFfQVBfQ2hhb3NUdXJyZXQzJ109ODguNCxbJ0hBX0FQX0NoYW9zVHVycmV0MiddPTg4LjQsWydDaGFvc1R1cnJldFdvcm0yJ109ODguNCxbJ1RUX09yZGVyVHVycmV0MSddPTg4LjQsWydUVF9PcmRlclR1cnJldDInXT04OC40LFsnVFRfT3JkZXJUdXJyZXQzJ109ODguNCxbJ0x1bHVGYWVyaWUnXT02NSxbJ0hBX0FQX09yZGVyVHVycmV0J109ODguNCxbJ09yZGVyVHVycmV0QW5nZWwnXT04OC40LFsnWWVsbG93VHJpbmtldFVwZ3JhZGUnXT0xLFsnTWFzdGVyWWknXT02NSxbJ0xpc3NhbmRyYSddPTY1LFsnQVJBTU9yZGVyVHVycmV0TmV4dXMnXT04OC40LFsnRHJhdmVuJ109NjUsWydGaWRkbGVTdGlja3MnXT02NSxbJ1NtYWxsR29sZW0nXT04MCxbJ0FSQU1PcmRlclR1cnJldEZyb250J109ODguNCxbJ0NoYW9zVHVycmV0VHV0b3JpYWwnXT04OC40LFsnTmFzdXNVbHQnXT04MCxbJ01hb2thaSddPTgwLFsnV3JhaXRoJ109NTAsWydXb2xmJ109NTAsWydTaXZpciddPTY1LFsnQ29ya2knXT02NSxbJ0phbm5hJ109NjUsWydOYXN1cyddPTgwLFsnR29sZW0nXT04MCxbJ0FSQU1DaGFvc1R1cnJldEZyb250J109ODguNCxbJ0FSQU1PcmRlclR1cnJldEluaGliJ109ODguNCxbJ0xlZVNpbiddPTY1LFsnSEFfQVBfQ2hhb3NUdXJyZXRUdXRvcmlhbCddPTg4LjQsWydHaWFudFdvbGYnXT02NSxbJ0hBX0FQX09yZGVyVHVycmV0VHV0b3JpYWwnXT04OC40LFsnWW91bmdMaXphcmQnXT01MCxbJ0pheCddPTY1LFsnTGVzc2VyV3JhaXRoJ109NTAsWydCbGl0emNyYW5rJ109ODAsWydicnVzaF9EX1NSJ109NjUsWydicnVzaF9FX1NSJ109NjUsWydicnVzaF9GX1NSJ109NjUsWydicnVzaF9DX1NSJ109NjUsWydicnVzaF9BX1NSJ109NjUsWydicnVzaF9CX1NSJ109NjUsWydBUkFNQ2hhb3NUdXJyZXRJbmhpYiddPTg4LjQsWydTaGVuJ109NjUsWydOb2N0dXJuZSddPTY1LFsnU29uYSddPTY1LFsnQVJBTUNoYW9zVHVycmV0TmV4dXMnXT04OC40LFsnWWVsbG93VHJpbmtldCddPTEsWydPcmRlclR1cnJldFR1dG9yaWFsJ109ODguNCxbJ0NhaXRseW4nXT02NSxbJ1RydW5kbGUnXT02NSxbJ01hbHBoaXRlJ109ODAsWydNb3JkZWthaXNlciddPTgwLFsnWnlyYVNlZWQnXT02NSxbJ1ZpJ109NTAsWydUdXRvcmlhbF9SZWRfTWluaW9uX1dpemFyZCddPTQ4LFsnUmVuZWt0b24nXT04MCxbJ0FuaXZpYSddPTY1LFsnRml6eiddPTY1LFsnSGVpbWVyZGluZ2VyJ109NTUsWydFdmVseW5uJ109NjUsWydSdW1ibGUnXT04MCxbJ0xlYmxhbmMnXT02NSxbJ0Rhcml1cyddPTgwLFsnT2xhZkF4ZSddPTUwLFsnVmlrdG9yJ109NjUsWydYaW5aaGFvJ109NjUsWydPcmlhbm5hJ109NjUsWydWbGFkaW1pciddPTY1LFsnTmlkYWxlZSddPTY1LFsnVHV0b3JpYWxfUmVkX01pbmlvbl9CYXNpYyddPTQ4LFsnWmVkU2hhZG93J109NjUsWydTeW5kcmEnXT02NSxbJ1phYyddPTgwLFsnT2xhZiddPTY1LFsnVmVpZ2FyJ109NTUsWydUd2l0Y2gnXT02NSxbJ0FsaXN0YXInXT04MCxbJ0FrYWxpJ109NjUsWydVcmdvdCddPTgwLFsnTGVvbmEnXT02NSxbJ1RhbG9uJ109NjUsWydLYXJtYSddPTY1LFsnSmF5Y2UnXT02NSxbJ0dhbGlvJ109ODAsWydTaGFjbyddPTY1LFsnVGFyaWMnXT02NSxbJ1R3aXN0ZWRGYXRlJ109NjUsWydWYXJ1cyddPTY1LFsnR2FyZW4nXT02NSxbJ1N3YWluJ109NjUsWydWYXluZSddPTY1LFsnRmlvcmEnXT02NSxbJ1F1aW5uJ109NjUsWydLYXlsZSddPTY1LFsnQmx1ZV9NaW5pb25fQmFzaWMnXT00OCxbJ0JyYW5kJ109NjUsWydUZWVtbyddPTU1LFsnQW11bXUnXT01NSxbJ0FubmllJ109NTUsWydPZGluX0JsdWVfTWluaW9uX2Nhc3RlciddPTQ4LFsnRWxpc2UnXT02NSxbJ05hbWknXT02NSxbJ1BvcHB5J109NTUsWydBbml2aWFFZ2cnXT02NSxbJ1RyaXN0YW5hJ109NTUsWydHcmF2ZXMnXT02NSxbJ01vcmdhbmEnXT02NSxbJ0dyYWdhcyddPTgwLFsnTWlzc0ZvcnR1bmUnXT02NSxbJ1dhcndpY2snXT02NSxbJ0Nhc3Npb3BlaWEnXT02NSxbJ1R1dG9yaWFsX0JsdWVfTWluaW9uX1dpemFyZCddPTQ4LFsnRHJNdW5kbyddPTgwLFsnVm9saWJlYXInXT04MCxbJ0lyZWxpYSddPTY1LFsnT2Rpbl9SZWRfTWluaW9uX0Nhc3RlciddPTQ4LFsnTHVjaWFuJ109NjUsWydZb3JpY2snXT04MCxbJ1JhbW11c1BCJ109NjUsWydSZWRfTWluaW9uX0Jhc2ljJ109NDgsWydVZHlyJ109NjUsWydNb25rZXlLaW5nJ109NjUsWydUdXRvcmlhbF9CbHVlX01pbmlvbl9CYXNpYyddPTQ4LFsnS2VubmVuJ109NTUsWydOdW51J109NjUsWydSeXplJ109NjUsWydaZWQnXT02NSxbJ05hdXRpbHVzJ109ODAsWydHYW5ncGxhbmsnXT02NSxbJ3Nob3Bldm8nXT02NSxbJ0x1eCddPTY1LFsnU2VqdWFuaSddPTgwLFsnRXpyZWFsJ109NjUsWydPZGluTmV1dHJhbEd1YXJkaWFuJ109NjUsWydLaGF6aXgnXT02NSxbJ1Npb24nXT04MCxbJ0FhdHJveCddPTY1LFsnSGVjYXJpbSddPTgwLFsnUGFudGhlb24nXT02NSxbJ1NoeXZhbmEnXT01MCxbJ1p5cmEnXT02NSxbJ0thcnRodXMnXT02NSxbJ1JhbW11cyddPTY1LFsnWmlsZWFuJ109NjUsWydDaG9nYXRoJ109ODAsWydNYWx6YWhhciddPTY1LFsnWW9yaWNrUmF2ZW5vdXNHaG91bCddPTEsWydZb3JpY2tTcGVjdHJhbEdob3VsJ109MSxbJ0ppbnhNaW5lJ109NjUsWydZb3JpY2tEZWNheWVkR2hvdWwnXT0xLFsnWGVyYXRoQXJjYW5lQmFycmFnZUxhdW5jaGVyJ109NjUsWydPZGluX1NPR19PcmRlcl9DcnlzdGFsJ109NjUsWydUZXN0Q3ViZSddPTY1LFsnU2h5dmFuYURyYWdvbiddPTgwLFsnRml6ekJhaXQnXT02NSxbJ1Nob3BLZWVwZXInXT02NSxbJ0JsdWVfTWluaW9uX01lY2hNZWxlZSddPTY1LFsnT2RpblF1ZXN0QnVmZiddPTY1LFsnVFRfQnVmZnBsYXRfTCddPTY1LFsnVFRfQnVmZnBsYXRfUiddPTY1LFsnS29nTWF3RGVhZCddPTY1LFsnVGVtcE1vdmFibGVDaGFyJ109NDgsWydMaXphcmQnXT01MCxbJ0dvbGVtT2RpbiddPTgwLFsnT2Rpbk9wZW5pbmdCYXJyaWVyJ109NjUsWydUVF9DaGFvc1R1cnJldDQnXT04OC40LFsnVFRfRmx5dHJhcF9BJ109NjUsWydUVF9DaGFpbnNfT3JkZXJfUGVyaXBoJ109NjUsWydUVF9OV29sZiddPTY1LFsnU2hvcE1hbGUnXT02NSxbJ09kaW5TaGllbGRSZWxpYyddPTY1LFsnVFRfQ2hhaW5zX1hhb3NfQmFzZSddPTY1LFsnTHVsdVNxdWlsbCddPTUwLFsnVFRfU2hvcGtlZXBlciddPTY1LFsncmVkRHJhZ29uJ109MTAwLFsnTW9ua2V5S2luZ0Nsb25lJ109NjUsWydPZGluX3NrZWxldG9uJ109NjUsWydPZGluQ2hhb3NUdXJyZXRTaHJpbmUnXT04OC40LFsnQ2Fzc2lvcGVpYV9EZWF0aCddPTY1LFsnT2RpbkNlbnRlclJlbGljJ109NDgsWydFenJlYWxfY3liZXJfMSddPTY1LFsnRXpyZWFsX2N5YmVyXzMnXT02NSxbJ0V6cmVhbF9jeWJlcl8yJ109NjUsWydPZGluUmVkU3VwZXJtaW5pb24nXT01NSxbJ1RUX1NwZWVkc2hyaW5lX0dlYXJzJ109NjUsWydKYXJ2YW5JVldhbGwnXT02NSxbJ0Rlc3Ryb3llZE5leHVzJ109NjUsWydBUkFNT3JkZXJOZXh1cyddPTY1LFsnUmVkX01pbmlvbl9NZWNoQ2Fubm9uJ109NjUsWydPZGluQmx1ZVN1cGVybWluaW9uJ109NTUsWydTeW5kcmFPcmJzJ109NjUsWydMdWx1S2l0dHknXT01MCxbJ1N3YWluTm9CaXJkJ109NjUsWydMdWx1TGFkeWJ1ZyddPTUwLFsnQ2FpdGx5blRyYXAnXT02NSxbJ1RUX1Nocm9vbV9BJ109NjUsWydBUkFNQ2hhb3NUdXJyZXRTaHJpbmUnXT04OC40LFsnT2Rpbl9XaW5kbWlsbF9Qcm9wZWxsZXJzJ109NjUsWydEZXN0cm95ZWRJbmhpYml0b3InXT02NSxbJ1RUX05Xb2xmMiddPTUwLFsnT2Rpbk1pbmlvbkdyYXZleWFyZFBvcnRhbCddPTEsWydTd2FpbkJlYW0nXT02NSxbJ1N1bW1vbmVyX1JpZGVyX09yZGVyJ109NjUsWydUVF9SZWxpYyddPTY1LFsnb2Rpbl9saWZ0c19jcnlzdGFsJ109NjUsWydPZGluT3JkZXJUdXJyZXRTaHJpbmUnXT04OC40LFsnU3BlbGxCb29rMSddPTY1LFsnQmx1ZV9NaW5pb25fTWVjaENhbm5vbiddPTY1LFsnVFRfQ2hhb3NJbmhpYml0b3JfRCddPTY1LFsnT2Rpbl9Tb0dfQ2hhb3MnXT02NSxbJ1RydW5kbGVXYWxsJ109NjUsWydIQV9BUF9IZWFsdGhSZWxpYyddPTY1LFsnT3JkZXJUdXJyZXRTaHJpbmUnXT04OC40LFsnT3JpYW5uYUJhbGwnXT00OCxbJ0NoYW9zVHVycmV0U2hyaW5lJ109ODguNCxbJ0x1bHVDdXBjYWtlJ109NTAsWydIQV9BUF9DaGFvc1R1cnJldFNocmluZSddPTg4LjQsWydUVF9DaGFpbnNfQm90X0xhbmUnXT02NSxbJ1RUX05XcmFpdGgyJ109NTAsWydUVF9UcmVlX0EnXT02NSxbJ1N1bW1vbmVyQmVhY29uJ109NjUsWydPZGluX0RyaWxsJ109NjUsWydUVF9OR29sZW0nXT04MCxbJ1Nob3AnXT02NSxbJ0FyYW1TcGVlZFNocmluZSddPTY1LFsnRGVzdHJveWVkVG93ZXInXT02NSxbJ09yaWFubmFOb0JhbGwnXT02NSxbJ09kaW5fTWluZWNhcnQnXT02NSxbJ1N1bW1vbmVyX1JpZGVyX0NoYW9zJ109NjUsWydPZGluU3BlZWRTaHJpbmUnXT02NSxbJ1RUX0JyYXppZXInXT02NSxbJ1RUX1NwZWVkU2hyaW5lJ109NjUsWydvZGluX2xpZnRzX2J1Y2tldHMnXT02NSxbJ09kaW5Sb2NrU2F3J109NjUsWydPZGluTWluaW9uU3Bhd25Qb3J0YWwnXT0xLFsnU3luZHJhU3BoZXJlJ109NDgsWydUVF9OZXh1c19HZWFycyddPTY1LFsnUmVkX01pbmlvbl9NZWNoTWVsZWUnXT02NSxbJ1N3YWluUmF2ZW4nXT02NSxbJ2NyeXN0YWxfcGxhdGZvcm0nXT02NSxbJ01hb2thaVNwcm91dGxpbmcnXT00OCxbJ1VyZiddPTY1LFsnVGVzdEN1YmVSZW5kZXIxMFZpc2lvbiddPTY1LFsnTWFsemFoYXJWb2lkbGluZyddPTEwLFsnR2hvc3RXYXJkJ109MSxbJ01vbmtleUtpbmdGbHlpbmcnXT02NSxbJ0x1bHVQaWcnXT01MCxbJ0FuaXZpYUljZUJsb2NrJ109NjUsWydUVF9PcmRlckluaGliaXRvcl9EJ109NjUsWyd5b25rZXknXT02NSxbJ09kaW5fU29HX09yZGVyJ109NjUsWydSYW1tdXNEQkMnXT02NSxbJ0ZpenpTaGFyayddPTY1LFsnTHVsdURyYWdvbiddPTUwLFsnT2RpblRlc3RDdWJlUmVuZGVyJ109NjUsWydPZGluQ3JhbmUnXT02NSxbJ1RUX1RyZWUxJ109NjUsWydBUkFNT3JkZXJUdXJyZXRTaHJpbmUnXT04OC40LFsnVFRfQ2hhaW5zX09yZGVyX0Jhc2UnXT02NSxbJ09kaW5fV2luZG1pbGxfR2VhcnMnXT02NSxbJ0FSQU1DaGFvc05leHVzJ109NjUsWydUVF9OV3JhaXRoJ109NTAsWydUVF9PcmRlclR1cnJldDQnXT04OC40LFsnT2Rpbl9TT0dfQ2hhb3NfQ3J5c3RhbCddPTY1LFsnVFRfU3BpZGVyTGF5ZXJfV2ViJ109NjUsWydPZGluUXVlc3RJbmRpY2F0b3InXT0xLFsnSmFydmFuSVZTdGFuZGFyZCddPTY1LFsnVFRfRHVtbXlQdXNoZXInXT02NSxbJ09kaW5DbGF3J109NjUsWydFbGlzZVNwaWRlcmxpbmcnXT0xLFsnUXVpbm5WYWxvciddPTY1LFsnVWR5clRpZ2VyVWx0J109NjUsWydVZHlyVHVydGxlVWx0J109NjUsWydVZHlyVWx0J109NjUsWydVZHlyUGhvZW5peFVsdCddPTY1LFsnU2hhY29Cb3gnXT0xMCxbJ0hBX0FQX1Bvcm8nXT02NSxbJ0FubmllVGliYmVycyddPTgwLFsnVWR5clBob2VuaXgnXT02NSxbJ1VkeXJUdXJ0bGUnXT02NSxbJ1VkeXJUaWdlciddPTY1LFsnSEFfQVBfT3JkZXJTaHJpbmVUdXJyZXQnXT04OC40LFsnSEFfQVBfT3JkZXJUdXJyZXRSdWJibGUnXT02NSxbJ0hBX0FQX0NoYWluc19Mb25nJ109NjUsWydIQV9BUF9PcmRlckNsb3RoJ109NjUsWydIQV9BUF9QZXJpcGhCcmlkZ2UnXT02NSxbJ0hBX0FQX0JyaWRnZUxhbmVTdGF0dWUnXT02NSxbJ0hBX0FQX0NoYW9zVHVycmV0UnViYmxlJ109ODguNCxbJ0hBX0FQX0Jhbm5lck1pZEJyaWRnZSddPTY1LFsnSEFfQVBfUG9yb1NwYXduZXInXT01MCxbJ0hBX0FQX0N1dGF3YXknXT02NSxbJ0hBX0FQX0NoYWlucyddPTY1LFsnSEFfQVBfU2hwU291dGgnXT02NSxbJ0hBX0FQX0hlcm9Ub3dlciddPTY1LFsnSEFfQVBfU2hwTm9ydGgnXT02NSxbJ0NoYW9zSW5oaWJpdG9yX0QnXT02NSxbJ1phY1JlYmlydGhCbG9ibGV0J109NjUsWydPcmRlckluaGliaXRvcl9EJ109NjUsWydOaWRhbGVlX1NwZWFyJ109NjUsWydOaWRhbGVlX0NvdWdhciddPTY1LFsnVFRfQnVmZnBsYXRfQ2hhaW4nXT02NSxbJ1dyaWdnbGVMYW50ZXJuJ109MSxbJ1R3aXN0ZWRMaXphcmRFbGRlciddPTY1LFsnUmFiaWRXb2xmJ109NjUsWydIZWltZXJUR3JlZW4nXT01MCxbJ0hlaW1lclRSZWQnXT01MCxbJ1Zpa3RvckZGJ109NjUsWydUd2lzdGVkR29sZW0nXT04MCxbJ1R3aXN0ZWRTbWFsbFdvbGYnXT01MCxbJ1R3aXN0ZWRHaWFudFdvbGYnXT02NSxbJ1R3aXN0ZWRUaW55V3JhaXRoJ109NTAsWydUd2lzdGVkQmx1ZVdyYWl0aCddPTUwLFsnVHdpc3RlZFlvdW5nTGl6YXJkJ109NTAsWydSZWRfTWluaW9uX01lbGVlJ109NDgsWydCbHVlX01pbmlvbl9NZWxlZSddPTQ4LFsnQmx1ZV9NaW5pb25fSGVhbGVyJ109NDgsWydHaGFzdCddPTYwLFsnYmx1ZURyYWdvbiddPTEwMCxbJ1JlZF9NaW5pb25fTWVjaFJhbmdlJ109NjUsWydUZXN0X0N1YmVTcGhlcmUnXT02NSx9c2VsZi5wcm9qZWN0aWxlc3BlZWRzPXtbIlZlbGtveiJdPTJlMyxbIlRlZW1vTXVzaHJvb20iXT1tYXRoLmh1Z2UsWyJUZXN0Q3ViZVJlbmRlciJdPW1hdGguaHVnZSxbIlhlcmF0aCJdPTJlMyxbIkthc3NhZGluIl09bWF0aC5odWdlLFsiUmVuZ2FyIl09bWF0aC5odWdlLFsiVGhyZXNoIl09MWUzLFsiWmlnZ3MiXT0xNTAwLFsiWnlyYVBhc3NpdmUiXT0xNTAwLFsiWnlyYVRob3JuUGxhbnQiXT0xNTAwLFsiS29nTWF3Il09MTgwMCxbIkhlaW1lclRCbHVlIl09MTU5OS4zOTk5LFsiRWxpc2VTcGlkZXIiXT01MDAsWyJTa2FybmVyIl09NTAwLFsiQ2hhb3NOZXh1cyJdPTUwMCxbIkthdGFyaW5hIl09NDY3LFsiUml2ZW4iXT0zNDcuNzk5OTksWyJTaWdodFdhcmQiXT0zNDcuNzk5OTksWyJIZWltZXJUWWVsbG93Il09MTU5OS4zOTk5LFsiQXNoZSJdPTJlMyxbIlZpc2lvbldhcmQiXT0yZTMsWyJUVF9OR29sZW0yIl09bWF0aC5odWdlLFsiVGhyZXNoTGFudGVybiJdPW1hdGguaHVnZSxbIlRUX1NwaWRlcmJvc3MiXT1tYXRoLmh1Z2UsWyJPcmRlck5leHVzIl09bWF0aC5odWdlLFsiU29yYWthIl09MWUzLFsiSmlueCJdPTI3NTAsWyJUZXN0Q3ViZVJlbmRlcndDb2xsaXNpb24iXT0yNzUwLFsiUmVkX01pbmlvbl9XaXphcmQiXT02NTAsWyJKYXJ2YW5JViJdPTIwLFsiQmx1ZV9NaW5pb25fV2l6YXJkIl09NjUwLFsiVFRfQ2hhb3NUdXJyZXQyIl09MTIwMCxbIlRUX0NoYW9zVHVycmV0MyJdPTEyMDAsWyJUVF9DaGFvc1R1cnJldDEiXT0xMjAwLFsiQ2hhb3NUdXJyZXRHaWFudCJdPTEyMDAsWyJEcmFnb24iXT0xMjAwLFsiTHVsdVNub3dtYW4iXT0xMjAwLFsiV29ybSJdPTEyMDAsWyJDaGFvc1R1cnJldFdvcm0iXT0xMjAwLFsiVFRfQ2hhb3NJbmhpYml0b3IiXT0xMjAwLFsiQ2hhb3NUdXJyZXROb3JtYWwiXT0xMjAwLFsiQW5jaWVudEdvbGVtIl09NTAwLFsiWnlyYUdyYXNwaW5nUGxhbnQiXT01MDAsWyJIQV9BUF9PcmRlclR1cnJldDMiXT0xMjAwLFsiSEFfQVBfT3JkZXJUdXJyZXQyIl09MTIwMCxbIlRyeW5kYW1lcmUiXT0zNDcuNzk5OTksWyJPcmRlclR1cnJldE5vcm1hbDIiXT0xMjAwLFsiU2luZ2VkIl09NzAwLFsiT3JkZXJJbmhpYml0b3IiXT03MDAsWyJEaWFuYSJdPTM0Ny43OTk5OSxbIkhBX0ZCX0hlYWx0aFJlbGljIl09MzQ3Ljc5OTk5LFsiVFRfT3JkZXJJbmhpYml0b3IiXT0zNDcuNzk5OTksWyJHcmVhdFdyYWl0aCJdPTc1MCxbIllhc3VvIl09MzQ3Ljc5OTk5LFsiT3JkZXJUdXJyZXREcmFnb24iXT0xMjAwLFsiT3JkZXJUdXJyZXROb3JtYWwiXT0xMjAwLFsiTGl6YXJkRWxkZXIiXT01MDAsWyJIQV9BUF9DaGFvc1R1cnJldCJdPTEyMDAsWyJBaHJpIl09MTc1MCxbIkx1bHUiXT0xNDUwLFsiQ2hhb3NJbmhpYml0b3IiXT0xNDUwLFsiSEFfQVBfQ2hhb3NUdXJyZXQzIl09MTIwMCxbIkhBX0FQX0NoYW9zVHVycmV0MiJdPTEyMDAsWyJDaGFvc1R1cnJldFdvcm0yIl09MTIwMCxbIlRUX09yZGVyVHVycmV0MSJdPTEyMDAsWyJUVF9PcmRlclR1cnJldDIiXT0xMjAwLFsiVFRfT3JkZXJUdXJyZXQzIl09MTIwMCxbIkx1bHVGYWVyaWUiXT0xMjAwLFsiSEFfQVBfT3JkZXJUdXJyZXQiXT0xMjAwLFsiT3JkZXJUdXJyZXRBbmdlbCJdPTEyMDAsWyJZZWxsb3dUcmlua2V0VXBncmFkZSJdPTEyMDAsWyJNYXN0ZXJZaSJdPW1hdGguaHVnZSxbIkxpc3NhbmRyYSJdPTJlMyxbIkFSQU1PcmRlclR1cnJldE5leHVzIl09MTIwMCxbIkRyYXZlbiJdPTE3MDAsWyJGaWRkbGVTdGlja3MiXT0xNzUwLFsiU21hbGxHb2xlbSJdPW1hdGguaHVnZSxbIkFSQU1PcmRlclR1cnJldEZyb250Il09MTIwMCxbIkNoYW9zVHVycmV0VHV0b3JpYWwiXT0xMjAwLFsiTmFzdXNVbHQiXT0xMjAwLFsiTWFva2FpIl09bWF0aC5odWdlLFsiV3JhaXRoIl09NzUwLFsiV29sZiJdPW1hdGguaHVnZSxbIlNpdmlyIl09MTc1MCxbIkNvcmtpIl09MmUzLFsiSmFubmEiXT0xMjAwLFsiTmFzdXMiXT1tYXRoLmh1Z2UsWyJHb2xlbSJdPW1hdGguaHVnZSxbIkFSQU1DaGFvc1R1cnJldEZyb250Il09MTIwMCxbIkFSQU1PcmRlclR1cnJldEluaGliIl09MTIwMCxbIkxlZVNpbiJdPW1hdGguaHVnZSxbIkhBX0FQX0NoYW9zVHVycmV0VHV0b3JpYWwiXT0xMjAwLFsiR2lhbnRXb2xmIl09bWF0aC5odWdlLFsiSEFfQVBfT3JkZXJUdXJyZXRUdXRvcmlhbCJdPTEyMDAsWyJZb3VuZ0xpemFyZCJdPTc1MCxbIkpheCJdPTQwMCxbIkxlc3NlcldyYWl0aCJdPW1hdGguaHVnZSxbIkJsaXR6Y3JhbmsiXT1tYXRoLmh1Z2UsWyJBUkFNQ2hhb3NUdXJyZXRJbmhpYiJdPTEyMDAsWyJTaGVuIl09NDAwLFsiTm9jdHVybmUiXT1tYXRoLmh1Z2UsWyJTb25hIl09MTUwMCxbIkFSQU1DaGFvc1R1cnJldE5leHVzIl09MTIwMCxbIlllbGxvd1RyaW5rZXQiXT0xMjAwLFsiT3JkZXJUdXJyZXRUdXRvcmlhbCJdPTEyMDAsWyJDYWl0bHluIl09MjUwMCxbIlRydW5kbGUiXT0zNDcuNzk5OTksWyJNYWxwaGl0ZSJdPTFlMyxbIk1vcmRla2Fpc2VyIl09bWF0aC5odWdlLFsiWnlyYVNlZWQiXT1tYXRoLmh1Z2UsWyJWaSJdPTFlMyxbIlR1dG9yaWFsX1JlZF9NaW5pb25fV2l6YXJkIl09NjUwLFsiUmVuZWt0b24iXT1tYXRoLmh1Z2UsWyJBbml2aWEiXT0xNDAwLFsiRml6eiJdPW1hdGguaHVnZSxbIkhlaW1lcmRpbmdlciJdPTE1MDAsWyJFdmVseW5uIl09NDY3LFsiUnVtYmxlIl09MzQ3Ljc5OTk5LFsiTGVibGFuYyJdPTE3MDAsWyJEYXJpdXMiXT1tYXRoLmh1Z2UsWyJPbGFmQXhlIl09bWF0aC5odWdlLFsiVmlrdG9yIl09MjMwMCxbIlhpblpoYW8iXT0yMCxbIk9yaWFubmEiXT0xNDUwLFsiVmxhZGltaXIiXT0xNDAwLFsiTmlkYWxlZSJdPTE3NTAsWyJUdXRvcmlhbF9SZWRfTWluaW9uX0Jhc2ljIl09bWF0aC5odWdlLFsiWmVkU2hhZG93Il09NDY3LFsiU3luZHJhIl09MTgwMCxbIlphYyJdPTFlMyxbIk9sYWYiXT0zNDcuNzk5OTksWyJWZWlnYXIiXT0xMTAwLFsiVHdpdGNoIl09MjUwMCxbIkFsaXN0YXIiXT1tYXRoLmh1Z2UsWyJBa2FsaSJdPTQ2NyxbIlVyZ290Il09MTMwMCxbIkxlb25hIl09MzQ3Ljc5OTk5LFsiVGFsb24iXT1tYXRoLmh1Z2UsWyJLYXJtYSJdPTE1MDAsWyJKYXljZSJdPTM0Ny43OTk5OSxbIkdhbGlvIl09MWUzLFsiU2hhY28iXT1tYXRoLmh1Z2UsWyJUYXJpYyJdPW1hdGguaHVnZSxbIlR3aXN0ZWRGYXRlIl09MTUwMCxbIlZhcnVzIl09MmUzLFsiR2FyZW4iXT0zNDcuNzk5OTksWyJTd2FpbiJdPTE2MDAsWyJWYXluZSJdPTJlMyxbIkZpb3JhIl09NDY3LFsiUXVpbm4iXT0yZTMsWyJLYXlsZSJdPW1hdGguaHVnZSxbIkJsdWVfTWluaW9uX0Jhc2ljIl09bWF0aC5odWdlLFsiQnJhbmQiXT0yZTMsWyJUZWVtbyJdPTEzMDAsWyJBbXVtdSJdPTUwMCxbIkFubmllIl09MTIwMCxbIk9kaW5fQmx1ZV9NaW5pb25fY2FzdGVyIl09MTIwMCxbIkVsaXNlIl09MTYwMCxbIk5hbWkiXT0xNTAwLFsiUG9wcHkiXT01MDAsWyJBbml2aWFFZ2ciXT01MDAsWyJUcmlzdGFuYSJdPTIyNTAsWyJHcmF2ZXMiXT0zZTMsWyJNb3JnYW5hIl09MTYwMCxbIkdyYWdhcyJdPW1hdGguaHVnZSxbIk1pc3NGb3J0dW5lIl09MmUzLFsiV2Fyd2ljayJdPW1hdGguaHVnZSxbIkNhc3Npb3BlaWEiXT0xMjAwLFsiVHV0b3JpYWxfQmx1ZV9NaW5pb25fV2l6YXJkIl09NjUwLFsiRHJNdW5kbyJdPW1hdGguaHVnZSxbIlZvbGliZWFyIl09NDY3LFsiSXJlbGlhIl09NDY3LFsiT2Rpbl9SZWRfTWluaW9uX0Nhc3RlciJdPTY1MCxbIkx1Y2lhbiJdPTI4MDAsWyJZb3JpY2siXT1tYXRoLmh1Z2UsWyJSYW1tdXNQQiJdPW1hdGguaHVnZSxbIlJlZF9NaW5pb25fQmFzaWMiXT1tYXRoLmh1Z2UsWyJVZHlyIl09NDY3LFsiTW9ua2V5S2luZyJdPTIwLFsiVHV0b3JpYWxfQmx1ZV9NaW5pb25fQmFzaWMiXT1tYXRoLmh1Z2UsWyJLZW5uZW4iXT0xNjAwLFsiTnVudSJdPTUwMCxbIlJ5emUiXT0yNDAwLFsiWmVkIl09NDY3LFsiTmF1dGlsdXMiXT0xZTMsWyJHYW5ncGxhbmsiXT0xZTMsWyJMdXgiXT0xNjAwLFsiU2VqdWFuaSJdPTUwMCxbIkV6cmVhbCJdPTJlMyxbIk9kaW5OZXV0cmFsR3VhcmRpYW4iXT0xODAwLFsiS2hheml4Il09NTAwLFsiU2lvbiJdPW1hdGguaHVnZSxbIkFhdHJveCJdPTM0Ny43OTk5OSxbIkhlY2FyaW0iXT01MDAsWyJQYW50aGVvbiJdPTIwLFsiU2h5dmFuYSJdPTQ2NyxbIlp5cmEiXT0xNzAwLFsiS2FydGh1cyJdPTEyMDAsWyJSYW1tdXMiXT1tYXRoLmh1Z2UsWyJaaWxlYW4iXT0xMjAwLFsiQ2hvZ2F0aCJdPTUwMCxbIk1hbHphaGFyIl09MmUzLFsiWW9yaWNrUmF2ZW5vdXNHaG91bCJdPTM0Ny43OTk5OSxbIllvcmlja1NwZWN0cmFsR2hvdWwiXT0zNDcuNzk5OTksWyJKaW54TWluZSJdPTM0Ny43OTk5OSxbIllvcmlja0RlY2F5ZWRHaG91bCJdPTM0Ny43OTk5OSxbIlhlcmF0aEFyY2FuZUJhcnJhZ2VMYXVuY2hlciJdPTM0Ny43OTk5OSxbIk9kaW5fU09HX09yZGVyX0NyeXN0YWwiXT0zNDcuNzk5OTksWyJUZXN0Q3ViZSJdPTM0Ny43OTk5OSxbIlNoeXZhbmFEcmFnb24iXT1tYXRoLmh1Z2UsWyJGaXp6QmFpdCJdPW1hdGguaHVnZSxbIkJsdWVfTWluaW9uX01lY2hNZWxlZSJdPW1hdGguaHVnZSxbIk9kaW5RdWVzdEJ1ZmYiXT1tYXRoLmh1Z2UsWyJUVF9CdWZmcGxhdF9MIl09bWF0aC5odWdlLFsiVFRfQnVmZnBsYXRfUiJdPW1hdGguaHVnZSxbIktvZ01hd0RlYWQiXT1tYXRoLmh1Z2UsWyJUZW1wTW92YWJsZUNoYXIiXT1tYXRoLmh1Z2UsWyJMaXphcmQiXT01MDAsWyJHb2xlbU9kaW4iXT1tYXRoLmh1Z2UsWyJPZGluT3BlbmluZ0JhcnJpZXIiXT1tYXRoLmh1Z2UsWyJUVF9DaGFvc1R1cnJldDQiXT01MDAsWyJUVF9GbHl0cmFwX0EiXT01MDAsWyJUVF9OV29sZiJdPW1hdGguaHVnZSxbIk9kaW5TaGllbGRSZWxpYyJdPW1hdGguaHVnZSxbIkx1bHVTcXVpbGwiXT1tYXRoLmh1Z2UsWyJyZWREcmFnb24iXT1tYXRoLmh1Z2UsWyJNb25rZXlLaW5nQ2xvbmUiXT1tYXRoLmh1Z2UsWyJPZGluX3NrZWxldG9uIl09bWF0aC5odWdlLFsiT2RpbkNoYW9zVHVycmV0U2hyaW5lIl09NTAwLFsiQ2Fzc2lvcGVpYV9EZWF0aCJdPTUwMCxbIk9kaW5DZW50ZXJSZWxpYyJdPTUwMCxbIk9kaW5SZWRTdXBlcm1pbmlvbiJdPW1hdGguaHVnZSxbIkphcnZhbklWV2FsbCJdPW1hdGguaHVnZSxbIkFSQU1PcmRlck5leHVzIl09bWF0aC5odWdlLFsiUmVkX01pbmlvbl9NZWNoQ2Fubm9uIl09MTIwMCxbIk9kaW5CbHVlU3VwZXJtaW5pb24iXT1tYXRoLmh1Z2UsWyJTeW5kcmFPcmJzIl09bWF0aC5odWdlLFsiTHVsdUtpdHR5Il09bWF0aC5odWdlLFsiU3dhaW5Ob0JpcmQiXT1tYXRoLmh1Z2UsWyJMdWx1TGFkeWJ1ZyJdPW1hdGguaHVnZSxbIkNhaXRseW5UcmFwIl09bWF0aC5odWdlLFsiVFRfU2hyb29tX0EiXT1tYXRoLmh1Z2UsWyJBUkFNQ2hhb3NUdXJyZXRTaHJpbmUiXT01MDAsWyJPZGluX1dpbmRtaWxsX1Byb3BlbGxlcnMiXT01MDAsWyJUVF9OV29sZjIiXT1tYXRoLmh1Z2UsWyJPZGluTWluaW9uR3JhdmV5YXJkUG9ydGFsIl09bWF0aC5odWdlLFsiU3dhaW5CZWFtIl09bWF0aC5odWdlLFsiU3VtbW9uZXJfUmlkZXJfT3JkZXIiXT1tYXRoLmh1Z2UsWyJUVF9SZWxpYyJdPW1hdGguaHVnZSxbIm9kaW5fbGlmdHNfY3J5c3RhbCJdPW1hdGguaHVnZSxbIk9kaW5PcmRlclR1cnJldFNocmluZSJdPTUwMCxbIlNwZWxsQm9vazEiXT01MDAsWyJCbHVlX01pbmlvbl9NZWNoQ2Fubm9uIl09MTIwMCxbIlRUX0NoYW9zSW5oaWJpdG9yX0QiXT0xMjAwLFsiT2Rpbl9Tb0dfQ2hhb3MiXT0xMjAwLFsiVHJ1bmRsZVdhbGwiXT0xMjAwLFsiSEFfQVBfSGVhbHRoUmVsaWMiXT0xMjAwLFsiT3JkZXJUdXJyZXRTaHJpbmUiXT01MDAsWyJPcmlhbm5hQmFsbCJdPTUwMCxbIkNoYW9zVHVycmV0U2hyaW5lIl09NTAwLFsiTHVsdUN1cGNha2UiXT01MDAsWyJIQV9BUF9DaGFvc1R1cnJldFNocmluZSJdPTUwMCxbIlRUX05XcmFpdGgyIl09NzUwLFsiVFRfVHJlZV9BIl09NzUwLFsiU3VtbW9uZXJCZWFjb24iXT03NTAsWyJPZGluX0RyaWxsIl09NzUwLFsiVFRfTkdvbGVtIl09bWF0aC5odWdlLFsiQXJhbVNwZWVkU2hyaW5lIl09bWF0aC5odWdlLFsiT3JpYW5uYU5vQmFsbCJdPW1hdGguaHVnZSxbIk9kaW5fTWluZWNhcnQiXT1tYXRoLmh1Z2UsWyJTdW1tb25lcl9SaWRlcl9DaGFvcyJdPW1hdGguaHVnZSxbIk9kaW5TcGVlZFNocmluZSJdPW1hdGguaHVnZSxbIlRUX1NwZWVkU2hyaW5lIl09bWF0aC5odWdlLFsib2Rpbl9saWZ0c19idWNrZXRzIl09bWF0aC5odWdlLFsiT2RpblJvY2tTYXciXT1tYXRoLmh1Z2UsWyJPZGluTWluaW9uU3Bhd25Qb3J0YWwiXT1tYXRoLmh1Z2UsWyJTeW5kcmFTcGhlcmUiXT1tYXRoLmh1Z2UsWyJSZWRfTWluaW9uX01lY2hNZWxlZSJdPW1hdGguaHVnZSxbIlN3YWluUmF2ZW4iXT1tYXRoLmh1Z2UsWyJjcnlzdGFsX3BsYXRmb3JtIl09bWF0aC5odWdlLFsiTWFva2FpU3Byb3V0bGluZyJdPW1hdGguaHVnZSxbIlVyZiJdPW1hdGguaHVnZSxbIlRlc3RDdWJlUmVuZGVyMTBWaXNpb24iXT1tYXRoLmh1Z2UsWyJNYWx6YWhhclZvaWRsaW5nIl09NTAwLFsiR2hvc3RXYXJkIl09NTAwLFsiTW9ua2V5S2luZ0ZseWluZyJdPTUwMCxbIkx1bHVQaWciXT01MDAsWyJBbml2aWFJY2VCbG9jayJdPTUwMCxbIlRUX09yZGVySW5oaWJpdG9yX0QiXT01MDAsWyJPZGluX1NvR19PcmRlciJdPTUwMCxbIlJhbW11c0RCQyJdPTUwMCxbIkZpenpTaGFyayJdPTUwMCxbIkx1bHVEcmFnb24iXT01MDAsWyJPZGluVGVzdEN1YmVSZW5kZXIiXT01MDAsWyJUVF9UcmVlMSJdPTUwMCxbIkFSQU1PcmRlclR1cnJldFNocmluZSJdPTUwMCxbIk9kaW5fV2luZG1pbGxfR2VhcnMiXT01MDAsWyJBUkFNQ2hhb3NOZXh1cyJdPTUwMCxbIlRUX05XcmFpdGgiXT03NTAsWyJUVF9PcmRlclR1cnJldDQiXT01MDAsWyJPZGluX1NPR19DaGFvc19DcnlzdGFsIl09NTAwLFsiT2RpblF1ZXN0SW5kaWNhdG9yIl09NTAwLFsiSmFydmFuSVZTdGFuZGFyZCJdPTUwMCxbIlRUX0R1bW15UHVzaGVyIl09NTAwLFsiT2RpbkNsYXciXT01MDAsWyJFbGlzZVNwaWRlcmxpbmciXT0yZTMsWyJRdWlublZhbG9yIl09bWF0aC5odWdlLFsiVWR5clRpZ2VyVWx0Il09bWF0aC5odWdlLFsiVWR5clR1cnRsZVVsdCJdPW1hdGguaHVnZSxbIlVkeXJVbHQiXT1tYXRoLmh1Z2UsWyJVZHlyUGhvZW5peFVsdCJdPW1hdGguaHVnZSxbIlNoYWNvQm94Il09MTUwMCxbIkhBX0FQX1Bvcm8iXT0xNTAwLFsiQW5uaWVUaWJiZXJzIl09bWF0aC5odWdlLFsiVWR5clBob2VuaXgiXT1tYXRoLmh1Z2UsWyJVZHlyVHVydGxlIl09bWF0aC5odWdlLFsiVWR5clRpZ2VyIl09bWF0aC5odWdlLFsiSEFfQVBfT3JkZXJTaHJpbmVUdXJyZXQiXT01MDAsWyJIQV9BUF9DaGFpbnNfTG9uZyJdPTUwMCxbIkhBX0FQX0JyaWRnZUxhbmVTdGF0dWUiXT01MDAsWyJIQV9BUF9DaGFvc1R1cnJldFJ1YmJsZSJdPTUwMCxbIkhBX0FQX1Bvcm9TcGF3bmVyIl09NTAwLFsiSEFfQVBfQ3V0YXdheSJdPTUwMCxbIkhBX0FQX0NoYWlucyJdPTUwMCxbIkNoYW9zSW5oaWJpdG9yX0QiXT01MDAsWyJaYWNSZWJpcnRoQmxvYmxldCJdPTUwMCxbIk9yZGVySW5oaWJpdG9yX0QiXT01MDAsWyJOaWRhbGVlX1NwZWFyIl09NTAwLFsiTmlkYWxlZV9Db3VnYXIiXT01MDAsWyJUVF9CdWZmcGxhdF9DaGFpbiJdPTUwMCxbIldyaWdnbGVMYW50ZXJuIl09NTAwLFsiVHdpc3RlZExpemFyZEVsZGVyIl09NTAwLFsiUmFiaWRXb2xmIl09bWF0aC5odWdlLFsiSGVpbWVyVEdyZWVuIl09MTU5OS4zOTk5LFsiSGVpbWVyVFJlZCJdPTE1OTkuMzk5OSxbIlZpa3RvckZGIl09MTU5OS4zOTk5LFsiVHdpc3RlZEdvbGVtIl09bWF0aC5odWdlLFsiVHdpc3RlZFNtYWxsV29sZiJdPW1hdGguaHVnZSxbIlR3aXN0ZWRHaWFudFdvbGYiXT1tYXRoLmh1Z2UsWyJUd2lzdGVkVGlueVdyYWl0aCJdPTc1MCxbIlR3aXN0ZWRCbHVlV3JhaXRoIl09NzUwLFsiVHdpc3RlZFlvdW5nTGl6YXJkIl09NzUwLFsiUmVkX01pbmlvbl9NZWxlZSJdPW1hdGguaHVnZSxbIkJsdWVfTWluaW9uX01lbGVlIl09bWF0aC5odWdlLFsiQmx1ZV9NaW5pb25fSGVhbGVyIl09MWUzLFsiR2hhc3QiXT03NTAsWyJibHVlRHJhZ29uIl09ODAwLFsiUmVkX01pbmlvbl9NZWNoUmFuZ2UiXT0zZTMsfXNlbGYuQWN0aXZlQXR0YWNrcz17fXNlbGYuTWluaW9uc0F0dGFja3M9e31pZiBub3QgX0cuVlByZWRpY3Rpb25NZW51IHRoZW4gX0cuVlByZWRpY3Rpb25NZW51PXNjcmlwdENvbmZpZygiWyBWUNSkxdC6uruvsOYgXWJ5IEIxbmsiLCJWUHJlZGljdGlvbiIpX0cuVlByZWRpY3Rpb25NZW51OmFkZFBhcmFtKCJNb2RlIiwiIKmmICDKzbfFxKPKvSAgqaYgIixTQ1JJUFRfUEFSQU1fTElTVCwxLHsiv+wiLCLW0CIsIsL9In0pX0cuVlByZWRpY3Rpb25NZW51OmFkZFN1Yk1lbnUoIiCh7qHuqaWppamlqaWppahyICIsInNlcCIpX0cuVlByZWRpY3Rpb25NZW51OmFkZFN1Yk1lbnUoIiCppiAgxfbXstGhz+4gIKmmICIsIkNvbGxpc2lvbiIpX0cuVlByZWRpY3Rpb25NZW51LkNvbGxpc2lvbjphZGRQYXJhbSgiQnVmZmVyIiwiLS0+IKmmxfbXsru6s+UgIixTQ1JJUFRfUEFSQU1fU0xJQ0UsMzAsMCwxMDApX0cuVlByZWRpY3Rpb25NZW51LkNvbGxpc2lvbjphZGRQYXJhbSgiTWluaW9ucyIsIi0tPiCpptX9s6PQobH4ICIsU0NSSVBUX1BBUkFNX09OT0ZGLHRydWUpX0cuVlByZWRpY3Rpb25NZW51LkNvbGxpc2lvbjphZGRQYXJhbSgiTW9icyIsIi0tPiCpptKwx/jQobH4ICIsU0NSSVBUX1BBUkFNX09OT0ZGLHRydWUpX0cuVlByZWRpY3Rpb25NZW51LkNvbGxpc2lvbjphZGRQYXJhbSgiT3RoZXJzIiwiLS0+IKmmxuTL+yAiLFNDUklQVF9QQVJBTV9PTk9GRix0cnVlKV9HLlZQcmVkaWN0aW9uTWVudS5Db2xsaXNpb246YWRkUGFyYW0oIkNIZWFsdGgiLCItLT4gqaa87LLivLS9q8vAyKW1xNChsfggKLLiytQpICIsU0NSSVBUX1BBUkFNX09OT0ZGLHRydWUpX0cuVlByZWRpY3Rpb25NZW51LkNvbGxpc2lvbjphZGRQYXJhbSgiaW5mbyIsIi0tPiCppiAgICAgICAgICAgILvhtbzWwkZwc8/CvbUgIixTQ1JJUFRfUEFSQU1fSU5GTywiIilfRy5WUHJlZGljdGlvbk1lbnUuQ29sbGlzaW9uOmFkZFBhcmFtKCJVbml0UG9zIiwiLS0+IKmmvOyy6bWlzrvF9teyICIsU0NSSVBUX1BBUkFNX09OT0ZGLHRydWUpX0cuVlByZWRpY3Rpb25NZW51LkNvbGxpc2lvbjphZGRQYXJhbSgiQ2FzdFBvcyIsIi0tPiCpprzssunKzbfFxfbXsiAiLFNDUklQVF9QQVJBTV9PTk9GRix0cnVlKV9HLlZQcmVkaWN0aW9uTWVudS5Db2xsaXNpb246YWRkUGFyYW0oIlByZWRpY3RQb3MiLCItLT4gqaa87LLp1KTF0MX217IgIixTQ1JJUFRfUEFSQU1fT05PRkYsZmFsc2UpX0cuVlByZWRpY3Rpb25NZW51OmFkZFN1Yk1lbnUoIiCppiAgxuTL+9Ghz+4gIKmmICIsIkRldmVsb3BlcnMiKV9HLlZQcmVkaWN0aW9uTWVudS5EZXZlbG9wZXJzOmFkZFBhcmFtKCJEZWJ1ZyIsIi0tPiCppsb008O198rUICIsU0NSSVBUX1BBUkFNX09OT0ZGLGZhbHNlKV9HLlZQcmVkaWN0aW9uTWVudS5EZXZlbG9wZXJzOmFkZFBhcmFtKCJTQyIsIi0tPiCppsX217K198rUICIsU0NSSVBUX1BBUkFNX09OT0ZGLGZhbHNlKV9HLlZQcmVkaWN0aW9uTWVudTphZGRQYXJhbSgiVmVyc2lvbiIsIiCppiAgvcWxvtDFz6IgIKmmICIsU0NSSVBUX1BBUkFNX0lORk8sdG9zdHJpbmcoc2VsZi52ZXJzaW9uKSlfRy5WUHJlZGljdGlvbk1lbnU6YWRkUGFyYW0oInNlcCIsIiCppiAgvcWxvrq6u68gIKHuICIsU0NSSVBUX1BBUkFNX0lORk8sIiIpX0cuVlByZWRpY3Rpb25NZW51OmFkZFBhcmFtKCJzZXAiLCIgqHSppamlqaWppamloe6h7iAiLFNDUklQVF9QQVJBTV9JTkZPLCIiKWVuZCBzZWxmLldheXBvaW50c1RpbWU9MTAgc2VsZi5FbmVteU1pbmlvbnM9bWluaW9uTWFuYWdlcihNSU5JT05fRU5FTVksMmUzLG15SGVybyxNSU5JT05fU09SVF9IRUFMVEhfQVNDKXNlbGYuSnVuZ2xlTWluaW9ucz1taW5pb25NYW5hZ2VyKE1JTklPTl9KVU5HTEUsMmUzLG15SGVybyxNSU5JT05fU09SVF9IRUFMVEhfQVNDKXNlbGYuT3RoZXJNaW5pb25zPW1pbmlvbk1hbmFnZXIoTUlOSU9OX09USEVSLDJlMyxteUhlcm8sTUlOSU9OX1NPUlRfSEVBTFRIX0FTQylzZWxmLlRhcmdldHNWaXNpYmxlPXt9c2VsZi5UYXJnZXRzV2F5cG9pbnRzPXt9c2VsZi5UYXJnZXRzSW1tb2JpbGU9e31zZWxmLlRhcmdldHNEYXNoaW5nPXt9c2VsZi5UYXJnZXRzU2xvd2VkPXt9c2VsZi5Eb250U2hvb3Q9e31zZWxmLkRvbnRTaG9vdDI9e31zZWxmLkRvbnRTaG9vdFVudGlsTmV3V2F5cG9pbnRzPXt9aWYgVklQX1VTRVIgdGhlbiBXYXlQb2ludE1hbmFnZXIuQWRkQ2FsbGJhY2soZnVuY3Rpb24oZSlzZWxmOk9uTmV3V2F5UG9pbnRzKGUpZW5kKUFkdmFuY2VkQ2FsbGJhY2s6YmluZCgiT25HYWluVmlzaW9uIixmdW5jdGlvbihlKXNlbGY6T25HYWluVmlzaW9uKGUpZW5kKUFkdmFuY2VkQ2FsbGJhY2s6YmluZCgiT25HYWluQnVmZiIsZnVuY3Rpb24oZSxuKXNlbGY6T25HYWluQnVmZihlLG4pZW5kKUFkdmFuY2VkQ2FsbGJhY2s6YmluZCgiT25EYXNoIixmdW5jdGlvbihlLG4pc2VsZjpPbkRhc2goZSxuKWVuZCllbmQgQWRkUHJvY2Vzc1NwZWxsQ2FsbGJhY2soZnVuY3Rpb24oZSxuKXNlbGY6T25Qcm9jZXNzU3BlbGwoZSxuKWVuZClBZGRUaWNrQ2FsbGJhY2soZnVuY3Rpb24oKXNlbGY6T25UaWNrKCllbmQpQWRkRHJhd0NhbGxiYWNrKGZ1bmN0aW9uKClzZWxmOk9uRHJhdygpZW5kKUFkZFByb2Nlc3NTcGVsbENhbGxiYWNrKGZ1bmN0aW9uKGUsbilzZWxmOkNvbGxpc2lvblByb2Nlc3NTcGVsbChlLG4pZW5kKXNlbGYuQmxhY2tMaXN0PXt7bmFtZT0iYWF0cm94cSIsZHVyYXRpb249Ljc1fSx9c2VsZi5kYXNoQWJvdXRUb0hhcHBlbmQ9e3tuYW1lPSJhaHJpdHVtYmxlIixkdXJhdGlvbj0uMjV9LHtuYW1lPSJha2FsaXNoYWRvd2RhbmNlIixkdXJhdGlvbj0uMjV9LHtuYW1lPSJoZWFkYnV0dCIsZHVyYXRpb249LjI1fSx7bmFtZT0iY2FpdGx5bmVudHJhcG1lbnQiLGR1cmF0aW9uPS4yNX0se25hbWU9ImNhcnBldGJvbWIiLGR1cmF0aW9uPS4yNX0se25hbWU9ImRpYW5hdGVsZXBvcnQiLGR1cmF0aW9uPS4yNX0se25hbWU9ImZpenpwaWVyY2luZ3N0cmlrZSIsZHVyYXRpb249LjI1fSx7bmFtZT0iZml6emp1bXAiLGR1cmF0aW9uPS4yNX0se25hbWU9ImdyYWdhc2JvZHlzbGFtIixkdXJhdGlvbj0uMjV9LHtuYW1lPSJncmF2ZXNtb3ZlIixkdXJhdGlvbj0uMjV9LHtuYW1lPSJpcmVsaWFnYXRvdHN1IixkdXJhdGlvbj0uMjV9LHtuYW1lPSJqYXJ2YW5pdmRyYWdvbnN0cmlrZSIsZHVyYXRpb249LjI1fSx7bmFtZT0iamF4bGVhcHN0cmlrZSIsZHVyYXRpb249LjI1fSx7bmFtZT0ia2hheml4ZSIsZHVyYXRpb249LjI1fSx7bmFtZT0ibGVibGFuY3NsaWRlIixkdXJhdGlvbj0uMjV9LHtuYW1lPSJsZWJsYW5jc2xpZGVtIixkdXJhdGlvbj0uMjV9LHtuYW1lPSJibGluZG1vbmtxdHdvIixkdXJhdGlvbj0uMjV9LHtuYW1lPSJibGluZG1vbmt3b25lIixkdXJhdGlvbj0uMjV9LHtuYW1lPSJsdWNpYW5lIixkdXJhdGlvbj0uMjV9LHtuYW1lPSJtYW9rYWl1bnN0YWJsZWdyb3d0aCIsZHVyYXRpb249LjI1fSx7bmFtZT0ibm9jdHVybmVwYXJhbm9pYTIiLGR1cmF0aW9uPS4yNX0se25hbWU9InBhbnRoZW9uX2xlYXBiYXNoIixkdXJhdGlvbj0uMjV9LHtuYW1lPSJyZW5la3RvbnNsaWNlYW5kZGljZSIsZHVyYXRpb249LjI1fSx7bmFtZT0icml2ZW50cmljbGVhdmUiLGR1cmF0aW9uPS4yNX0se25hbWU9InJpdmVuZmVpbnQiLGR1cmF0aW9uPS4yNX0se25hbWU9InNlanVhbmlhcmN0aWNhc3NhdWx0IixkdXJhdGlvbj0uMjV9LHtuYW1lPSJzaGVuc2hhZG93ZGFzaCIsZHVyYXRpb249LjI1fSx7bmFtZT0ic2h5dmFuYXRyYW5zZm9ybWNhc3QiLGR1cmF0aW9uPS4yNX0se25hbWU9InJvY2tldGp1bXAiLGR1cmF0aW9uPS4yNX0se25hbWU9InNsYXNoY2FzdCIsZHVyYXRpb249LjI1fSx7bmFtZT0idmF5bmV0dW1ibGUiLGR1cmF0aW9uPS4yNX0se25hbWU9InZpcSIsZHVyYXRpb249LjI1fSx7bmFtZT0ibW9ua2V5a2luZ25pbWJ1cyIsZHVyYXRpb249LjI1fSx7bmFtZT0ieGVuemhhb3N3ZWVwIixkdXJhdGlvbj0uMjV9LHtuYW1lPSJ5YXN1b2Rhc2h3cmFwcGVyIixkdXJhdGlvbj0uMjV9LH1zZWxmLnNwZWxscz17e25hbWU9ImthdGFyaW5hciIsZHVyYXRpb249MX0se25hbWU9ImRyYWluIixkdXJhdGlvbj0xfSx7bmFtZT0iY3Jvd3N0b3JtIixkdXJhdGlvbj0xfSx7bmFtZT0iY29uc3VtZSIsZHVyYXRpb249LjV9LHtuYW1lPSJhYnNvbHV0ZXplcm8iLGR1cmF0aW9uPTF9LHtuYW1lPSJyb2NrZXRncmFiIixkdXJhdGlvbj0uNX0se25hbWU9InN0YXRpY2ZpZWxkIixkdXJhdGlvbj0uNX0se25hbWU9ImNhc3Npb3BlaWFwZXRyaWZ5aW5nZ2F6ZSIsZHVyYXRpb249LjV9LHtuYW1lPSJlenJlYWx0cnVlc2hvdGJhcnJhZ2UiLGR1cmF0aW9uPTF9LHtuYW1lPSJnYWxpb2lkb2xvZmR1cmFuZCIsZHVyYXRpb249MX0se25hbWU9Imx1eG1hbGljZWNhbm5vbiIsZHVyYXRpb249MX0se25hbWU9InJlYXB0aGV3aGlybHdpbmQiLGR1cmF0aW9uPTF9LHtuYW1lPSJqaW54dyIsZHVyYXRpb249LjZ9LHtuYW1lPSJqaW54ciIsZHVyYXRpb249LjZ9LHtuYW1lPSJtaXNzZm9ydHVuZWJ1bGxldHRpbWUiLGR1cmF0aW9uPTF9LHtuYW1lPSJzaGVuc3RhbmR1bml0ZWQiLGR1cmF0aW9uPTF9LHtuYW1lPSJ0aHJlc2hlIixkdXJhdGlvbj0uNH0se25hbWU9InRocmVzaHJwZW50YSIsZHVyYXRpb249Ljc1fSx7bmFtZT0iaW5maW5pdGVkdXJlc3MiLGR1cmF0aW9uPTF9LHtuYW1lPSJtZWRpdGF0ZSIsZHVyYXRpb249MX19c2VsZi5ibGlua3M9e3tuYW1lPSJlenJlYWxhcmNhbmVzaGlmdCIscmFuZ2U9NDc1LGRlbGF5PS4yNSxkZWxheTI9Ljh9LHtuYW1lPSJkZWNlaXZlIixyYW5nZT00MDAsZGVsYXk9LjI1LGRlbGF5Mj0uOH0se25hbWU9InJpZnR3YWxrIixyYW5nZT03MDAsZGVsYXk9LjI1LGRlbGF5Mj0uOH0se25hbWU9ImdhdGUiLHJhbmdlPTU1MDAsZGVsYXk9MS41LGRlbGF5Mj0xLjV9LHtuYW1lPSJrYXRhcmluYWUiLHJhbmdlPW1hdGguaHVnZSxkZWxheT0uMjUsZGVsYXkyPS44fSx7bmFtZT0iZWxpc2VzcGlkZXJlZGVzY2VudCIscmFuZ2U9bWF0aC5odWdlLGRlbGF5PS4yNSxkZWxheTI9Ljh9LHtuYW1lPSJlbGlzZXNwaWRlcmUiLHJhbmdlPW1hdGguaHVnZSxkZWxheT0uMjUsZGVsYXkyPS44fSx9cmV0dXJuIHNlbGYgZW5kIGZ1bmN0aW9uIFZQcmVkaWN0aW9uOkdldFRpbWUoKXJldHVybiBvcy5jbG9jaygpZW5kIGZ1bmN0aW9uIFZQcmVkaWN0aW9uOkdldFZlcnNpb24oKXJldHVybiBzZWxmLnZlcnNpb24gZW5kIGZ1bmN0aW9uIFZQcmVkaWN0aW9uOk9uR2FpblZpc2lvbihlKWlmIGUudHlwZT09bXlIZXJvLnR5cGUgdGhlbiBzZWxmLlRhcmdldHNWaXNpYmxlW2UubmV0d29ya0lEXT1zZWxmOkdldFRpbWUoKWVuZCBlbmQgZnVuY3Rpb24gVlByZWRpY3Rpb246T25Mb3NlVmlzaW9uKGUpaWYgZS50eXBlPT1teUhlcm8udHlwZSB0aGVuIHNlbGYuVGFyZ2V0c1Zpc2libGVbZS5uZXR3b3JrSURdPW1hdGguaHVnZSBlbmQgZW5kIGZ1bmN0aW9uIFZQcmVkaWN0aW9uOk9uR2FpbkJ1ZmYobixlKWlmIG4udHlwZT09bXlIZXJvLnR5cGUgYW5kKGUudHlwZT09QlVGRl9TVFVOIG9yIGUudHlwZT09QlVGRl9ST09UIG9yIGUudHlwZT09QlVGRl9LTk9DS1VQIG9yIGUudHlwZT09QlVGRl9TVVBQUkVTUyl0aGVuIHNlbGYuVGFyZ2V0c0ltbW9iaWxlW24ubmV0d29ya0lEXT1zZWxmOkdldFRpbWUoKStlLmR1cmF0aW9uIGVsc2VpZiBuLnR5cGU9PW15SGVyby50eXBlIGFuZChlLnR5cGU9PUJVRkZfU0xPVyBvciBlLnR5cGU9PUJVRkZfQ0hBUk0gb3IgZS50eXBlPT1CVUZGX0ZFQVIgb3IgZS50eXBlPT1CVUZGX1RBVU5UKXRoZW4gc2VsZi5UYXJnZXRzU2xvd2VkW24ubmV0d29ya0lEXT1zZWxmOkdldFRpbWUoKStlLmR1cmF0aW9uIGVuZCBpZiBuLnR5cGU9PW15SGVyby50eXBlIGFuZChlLnR5cGU9PUJVRkZfS05PQ0tCQUNLKXRoZW4gc2VsZi5Eb250U2hvb3Rbbi5uZXR3b3JrSURdPXNlbGY6R2V0VGltZSgpKzEgZW5kIGVuZCBmdW5jdGlvbiBWUHJlZGljdGlvbjpPbkRhc2gobixlKWlmIG4udHlwZT09bXlIZXJvLnR5cGUgdGhlbiBlLmVuZFBvcz1lLnRhcmdldCBhbmQgZS50YXJnZXQgb3IgZS5lbmRQb3MgZS5zdGFydFQ9c2VsZjpHZXRUaW1lKCktR2V0TGF0ZW5jeSgpLzJlMyBlLmVuZFQ9ZS5zdGFydFQrZS5kdXJhdGlvbiBzZWxmLlRhcmdldHNEYXNoaW5nW24ubmV0d29ya0lEXT1lIHNlbGYuRG9udFNob290VW50aWxOZXdXYXlwb2ludHNbbi5uZXR3b3JrSURdPXRydWUgZW5kIGVuZCBmdW5jdGlvbiBWUHJlZGljdGlvbjpPblByb2Nlc3NTcGVsbChuLGUpaWYgbiBhbmQgbi50eXBlPT1teUhlcm8udHlwZSB0aGVuIGZvciBhLHQgaW4gaXBhaXJzKHNlbGYuc3BlbGxzKWRvIGlmIGUubmFtZTpsb3dlcigpPT10Lm5hbWUgdGhlbiBzZWxmLlRhcmdldHNJbW1vYmlsZVtuLm5ldHdvcmtJRF09c2VsZjpHZXRUaW1lKCkrdC5kdXJhdGlvbiByZXR1cm4gZW5kIGVuZCBmb3IgYSx0IGluIGlwYWlycyhzZWxmLmJsaW5rcylkbyBsb2NhbCBhPUdldERpc3RhbmNlKG4sVmVjdG9yKGUuZW5kUG9zKSk8dC5yYW5nZSBhbmQgVmVjdG9yKGUuZW5kUG9zKW9yIFZlY3RvcihuKSt0LnJhbmdlKihWZWN0b3IoZS5lbmRQb3MpLVZlY3RvcihuKSk6bm9ybWFsaXplZCgpaWYgZS5uYW1lOmxvd2VyKCk9PXQubmFtZSBhbmQgbm90IElzV2FsbChEM0RYVkVDVE9SMyhlLmVuZFBvcy54LGUuZW5kUG9zLnksZS5lbmRQb3MueikpdGhlbiBzZWxmLlRhcmdldHNEYXNoaW5nW24ubmV0d29ya0lEXT17aXNibGluaz10cnVlLGR1cmF0aW9uPXQuZGVsYXksZW5kVD1zZWxmOkdldFRpbWUoKSt0LmRlbGF5LGVuZFQyPXNlbGY6R2V0VGltZSgpK3QuZGVsYXkyLHN0YXJ0UG9zPVZlY3RvcihuKSxlbmRQb3M9YX1yZXR1cm4gZW5kIGVuZCBmb3IgYSx0IGluIGlwYWlycyhzZWxmLkJsYWNrTGlzdClkbyBpZiBlLm5hbWU6bG93ZXIoKT09dC5uYW1lIHRoZW4gc2VsZi5Eb250U2hvb3Rbbi5uZXR3b3JrSURdPXNlbGY6R2V0VGltZSgpK3QuZHVyYXRpb24gcmV0dXJuIGVuZCBlbmQgZm9yIGEsdCBpbiBpcGFpcnMoc2VsZi5kYXNoQWJvdXRUb0hhcHBlbmQpZG8gaWYgZS5uYW1lOmxvd2VyKCk9PXQubmFtZSB0aGVuIHNlbGYuRG9udFNob290MltuLm5ldHdvcmtJRF09c2VsZjpHZXRUaW1lKCkrdC5kdXJhdGlvbiByZXR1cm4gZW5kIGVuZCBlbmQgZW5kIGZ1bmN0aW9uIFZQcmVkaWN0aW9uOk9uTmV3V2F5UG9pbnRzKHQpbG9jYWwgbj1vYmpNYW5hZ2VyOkdldE9iamVjdEJ5TmV0d29ya0lkKHQpaWYgbiBhbmQgbi52YWxpZCBhbmQgbi5uZXR3b3JrSUQgYW5kIG4udHlwZT09bXlIZXJvLnR5cGUgdGhlbiBzZWxmLkRvbnRTaG9vdFVudGlsTmV3V2F5cG9pbnRzW3RdPWZhbHNlIGlmIHNlbGYuVGFyZ2V0c1dheXBvaW50c1t0XT09bmlsIHRoZW4gc2VsZi5UYXJnZXRzV2F5cG9pbnRzW3RdPXt9ZW5kIGxvY2FsIGU9V2F5UG9pbnRNYW5hZ2VyOkdldFdheVBvaW50cyhuKWlmIGUgYW5kI2U+PTEgdGhlbiB0YWJsZS5pbnNlcnQoc2VsZi5UYXJnZXRzV2F5cG9pbnRzW3RdLHt1bml0cG9zPVZlY3RvcihuKSx3YXlwb2ludD1lWyNlXSx0aW1lPXNlbGY6R2V0VGltZSgpLG49I2V9KWVuZCBlbHNlaWYgbiBhbmQgbi52YWxpZCBhbmQgbi50eXBlfj1teUhlcm8udHlwZSB0aGVuIGxvY2FsIGU9MSB3aGlsZSBlPD0jc2VsZi5BY3RpdmVBdHRhY2tzIGRvIGlmKHNlbGYuQWN0aXZlQXR0YWNrc1tlXS5BdHRhY2tlciBhbmQgc2VsZi5BY3RpdmVBdHRhY2tzW2VdLkF0dGFja2VyLnZhbGlkIGFuZCBzZWxmLkFjdGl2ZUF0dGFja3NbZV0uQXR0YWNrZXIubmV0d29ya0lEPT10IGFuZChzZWxmLkFjdGl2ZUF0dGFja3NbZV0uc3RhcnR0aW1lK3NlbGYuQWN0aXZlQXR0YWNrc1tlXS53aW5kVXBUaW1lLUdldExhdGVuY3koKS8yZTMpPnNlbGY6R2V0VGltZSgpKXRoZW4gbG9jYWwgbj1XYXlQb2ludE1hbmFnZXI6R2V0V2F5UG9pbnRzKG4paWYjbj4xIHRoZW4gdGFibGUucmVtb3ZlKHNlbGYuQWN0aXZlQXR0YWNrcyxlKWVsc2UgZT1lKzEgZW5kIGVsc2UgZT1lKzEgZW5kIGVuZCBlbmQgZW5kIGZ1bmN0aW9uIFZQcmVkaWN0aW9uOklzSW1tb2JpbGUoZSxyLGEsbix0LGkpaWYgc2VsZi5UYXJnZXRzSW1tb2JpbGVbZS5uZXR3b3JrSURddGhlbiBsb2NhbCBuPW49PW1hdGguaHVnZSBhbmQgMCBvcihHZXREaXN0YW5jZSh0LGUpL24paWYoc2VsZi5UYXJnZXRzSW1tb2JpbGVbZS5uZXR3b3JrSURdPihzZWxmOkdldFRpbWUoKStyK24pYW5kIGk9PSJjaXJjdWxhciIpdGhlbiByZXR1cm4gdHJ1ZSxWZWN0b3IoZSksVmVjdG9yKGUpKyhhLzMpKihWZWN0b3IodCktVmVjdG9yKGUpKTpub3JtYWxpemVkKCllbHNlaWYoc2VsZi5UYXJnZXRzSW1tb2JpbGVbZS5uZXR3b3JrSURdKyhhL2UubXMpKT4oc2VsZjpHZXRUaW1lKCkrcituKXRoZW4gcmV0dXJuIHRydWUsVmVjdG9yKGUpLFZlY3RvcihlKWVuZCBlbmQgcmV0dXJuIGZhbHNlLFZlY3RvcihlKSxWZWN0b3IoZSllbmQgZnVuY3Rpb24gVlByZWRpY3Rpb246aXNTbG93ZWQoZSx0LGEsbilpZiBzZWxmLlRhcmdldHNTbG93ZWRbZS5uZXR3b3JrSURddGhlbiBpZiBzZWxmLlRhcmdldHNTbG93ZWRbZS5uZXR3b3JrSURdPihzZWxmOkdldFRpbWUoKSt0K0dldERpc3RhbmNlKGUsbikvYSl0aGVuIHJldHVybiB0cnVlIGVuZCBlbmQgcmV0dXJuIGZhbHNlIGVuZCBmdW5jdGlvbiBWUHJlZGljdGlvbjpJc0Rhc2hpbmcobCxhLGgsbyxkKWxvY2FsIHU9ZmFsc2UgbG9jYWwgcj1mYWxzZSBsb2NhbCBpIGlmIHNlbGYuVGFyZ2V0c0Rhc2hpbmdbbC5uZXR3b3JrSURddGhlbiBsb2NhbCBlPXNlbGYuVGFyZ2V0c0Rhc2hpbmdbbC5uZXR3b3JrSURdaWYgZS5lbmRUPj1zZWxmOkdldFRpbWUoKXRoZW4gdT10cnVlIGlmIGUuaXNibGluayB0aGVuIGlmKGUuZW5kVC1zZWxmOkdldFRpbWUoKSk8PShhK0dldERpc3RhbmNlKGQsZS5lbmRQb3MpL28pdGhlbiBpPVZlY3RvcihlLmVuZFBvcy54LDAsZS5lbmRQb3MueilyPShsLm1zKihhK0dldERpc3RhbmNlKGQsZS5lbmRQb3MpL28tKGUuZW5kVDItc2VsZjpHZXRUaW1lKCkpKSk8aCBlbmQgaWYoKGUuZW5kVC1zZWxmOkdldFRpbWUoKSk+PShhK0dldERpc3RhbmNlKGQsZS5zdGFydFBvcykvbykpYW5kIG5vdCByIHRoZW4gaT1WZWN0b3IoZS5zdGFydFBvcy54LDAsZS5zdGFydFBvcy56KXI9dHJ1ZSBlbmQgZWxzZSBsb2NhbCBuLGMsdCxzLHU9VmVjdG9yTW92ZW1lbnRDb2xsaXNpb24oZS5zdGFydFBvcyxlLmVuZFBvcyxlLnNwZWVkLGQsbywoc2VsZjpHZXRUaW1lKCktZS5zdGFydFQpK2Epbix0PShuIGFuZCAwPD1uIGFuZCBuPD0oZS5lbmRULXNlbGY6R2V0VGltZSgpLWEpKWFuZCBuIG9yIG5pbCwodCBhbmQgMDw9dCBhbmQgdDw9KGUuZW5kVC1zZWxmOkdldFRpbWUoKS1hKSlhbmQgdCBvciBuaWwgbG9jYWwgdD1uIGFuZCB0IGFuZCBtYXRoLm1pbihuLHQpb3IgbiBvciB0IGlmIHQgdGhlbiBpPXQ9PW4gYW5kIFZlY3RvcihjLngsMCxjLnkpb3IgVmVjdG9yKHMueCwwLHMueSlyPXRydWUgZWxzZSBpPVZlY3RvcihlLmVuZFBvcy54LDAsZS5lbmRQb3MueilyPShsLm1zKihhK0dldERpc3RhbmNlKGQsaSkvby0oZS5lbmRULXNlbGY6R2V0VGltZSgpKSkpPGggZW5kIGVuZCBlbmQgZW5kIHJldHVybiB1LHIsaSBlbmQgZnVuY3Rpb24gVlByZWRpY3Rpb246R2V0V2F5cG9pbnRzKHQsYSxlKWxvY2FsIG49e31lPWUgYW5kIGUgb3Igc2VsZjpHZXRUaW1lKClpZiBzZWxmLlRhcmdldHNXYXlwb2ludHNbdF10aGVuIGZvciByLHQgaW4gaXBhaXJzKHNlbGYuVGFyZ2V0c1dheXBvaW50c1t0XSlkbyBpZiBhPD10LnRpbWUgYW5kIGU+PXQudGltZSB0aGVuIHRhYmxlLmluc2VydChuLHQpZW5kIGVuZCBlbmQgcmV0dXJuIG4sI24gZW5kIGZ1bmN0aW9uIFZQcmVkaWN0aW9uOkNvdW50V2F5cG9pbnRzKG4sdCxlKWxvY2FsIG4sZT1zZWxmOkdldFdheXBvaW50cyhuLHQsZSlyZXR1cm4gZSBlbmQgZnVuY3Rpb24gVlByZWRpY3Rpb246R2V0V2F5cG9pbnRzTGVuZ3RoKG4pbG9jYWwgZT0wIGZvciB0PTEsI24tMSBkbyBlPWUrR2V0RGlzdGFuY2Uoblt0XSxuW3QrMV0pZW5kIHJldHVybiBlIGVuZCBmdW5jdGlvbiBWUHJlZGljdGlvbjpDdXRXYXlwb2ludHMoZSxyKWxvY2FsIHQ9e31sb2NhbCBuPXIgaWYgcj4wIHRoZW4gZm9yIGE9MSwjZS0xIGRvIGxvY2FsIHIsaT1lW2FdLGVbYSsxXWxvY2FsIG89R2V0RGlzdGFuY2UocixpKWlmIG8+PW4gdGhlbiB0WzFdPVZlY3RvcihyKStuKihWZWN0b3IoaSktVmVjdG9yKHIpKTpub3JtYWxpemVkKClmb3Igcj1hKzEsI2UgZG8gdFtyLWErMV09ZVtyXWVuZCBuPTAgYnJlYWsgZWxzZSBuPW4tbyBlbmQgZW5kIGVsc2UgbG9jYWwgbixhPWVbMV0sZVsyXXQ9ZSB0WzFdPVZlY3RvcihuKS1yKihWZWN0b3IoYSktVmVjdG9yKG4pKTpub3JtYWxpemVkKCllbmQgcmV0dXJuIHQgZW5kIGZ1bmN0aW9uIFZQcmVkaWN0aW9uOkdldEN1cnJlbnRXYXlQb2ludHMoZSlsb2NhbCBuPXt9aWYgbm90IFZJUF9VU0VSIHRoZW4gaWYgZS5oYXNNb3ZlUGF0aCB0aGVuIHRhYmxlLmluc2VydChuLFZlY3RvcihlLngsZS56KSlmb3IgdD1lLnBhdGhJbmRleCxlLnBhdGhDb3VudCBkbyBwYXRoPWU6R2V0UGF0aCh0KXRhYmxlLmluc2VydChuLFZlY3RvcihwYXRoLngscGF0aC56KSllbmQgZWxzZSB0YWJsZS5pbnNlcnQobixlIGFuZCBWZWN0b3IoZS54LGUueilvciBWZWN0b3IoZS54LGUueikpZW5kIHJldHVybiBuIGVsc2UgbG9jYWwgbixpLHIsYT1XYXlQb2ludE1hbmFnZXI6R2V0UmF3V2F5UG9pbnRzKGUpLDAsbWF0aC5odWdlLG5pbCBpZiBub3QgbiBhbmQgbm90IGUgdGhlbiByZXR1cm57e3g9ZS54LHk9ZS56fX1lbHNlaWYgbm90IG4gYW5kIGUgdGhlbiByZXR1cm57e3g9ZS54LHk9ZS56fX1lbmQgZm9yIHQ9MSwjbi0xIGRvIGxvY2FsIG4sbyxvPVZlY3RvclBvaW50UHJvamVjdGlvbk9uTGluZVNlZ21lbnQoblt0XSxuW3QrMV0sVmVjdG9yKGUpKWxvY2FsIGU9R2V0RGlzdGFuY2VTcXIobixlKWlmIGU8PXIgdGhlbiBhPW4gaT10IHI9ZSBlbHNlIGJyZWFrIGVuZCBlbmQgbG9jYWwgZT17YSBvcnt4PWUueCx5PWUuen19Zm9yIHQ9aSsxLCNuIGRvIGVbI2UrMV09blt0XWVuZCBpZiNlPT0yIGFuZCBHZXREaXN0YW5jZVNxcihlWzFdLGVbMl0pPDQwMCB0aGVuIGVbMl09bmlsIGVuZCByZXR1cm4gZSBlbmQgZW5kIGZ1bmN0aW9uIFZQcmVkaWN0aW9uOkNhbGN1bGF0ZVRhcmdldFBvc2l0aW9uKGUscixuLGEsbixuKWlmIFZhbGlkVGFyZ2V0KGUpYW5kIGUuZW5kUGF0aCBvciBlPT1teUhlcm8gdGhlbiBpZiBlLnBhdGhDb3VudDwzIHRoZW4gbG9jYWwgbj0oZS5tcyooKEdldERpc3RhbmNlKG15SGVyby5wb3MsZS5wb3MpL2EpK3IpKWxvY2FsIG49VmVjdG9yKGUpKyhWZWN0b3IoZS5lbmRQYXRoKS1WZWN0b3IoZSkpOm5vcm1hbGl6ZWQoKSoobilpZiBHZXREaXN0YW5jZShlLG4pPjEgdGhlbiBpZiBHZXREaXN0YW5jZShlLmVuZFBhdGgsZSk+R2V0RGlzdGFuY2UoZSxuKXRoZW4gcmV0dXJuIG4sMixuIGVsc2UgcmV0dXJuIG4sMCxuIGVuZCBlbmQgZWxzZSBsb2NhbCBuPShlLm1zKigoR2V0RGlzdGFuY2UobXlIZXJvLnBvcyxlLnBvcykvYSkrcikpZm9yIHQ9MSxlLnBhdGhDb3VudCBkbyBsb2NhbCBhPWU6R2V0UGF0aCh0KWlmIGEgdGhlbiBpZiBlOkdldFBhdGgodC0xKXRoZW4gbG9jYWwgYT1HZXREaXN0YW5jZShlOkdldFBhdGgodC0xKSxhKWlmIG4+YSB0aGVuIG49bi1hIGVsc2UgbG9jYWwgZT1WZWN0b3IoZTpHZXRQYXRoKHQtMSkpKyhWZWN0b3IoZTpHZXRQYXRoKHQpKS1WZWN0b3IoZTpHZXRQYXRoKHQtMSkpKTpub3JtYWxpemVkKCkqbiByZXR1cm4gZSwyLGUgZW5kIGVuZCBlbmQgZW5kIG49KGUubXMqKChHZXREaXN0YW5jZShteUhlcm8ucG9zLGUucG9zKS9hKStyKSlsb2NhbCBlPVZlY3RvcihlKSsoVmVjdG9yKGUuZW5kUGF0aCktVmVjdG9yKGUpKTpub3JtYWxpemVkKCkqKG4pcmV0dXJuIGUsMCxlIGVuZCBlbmQgcmV0dXJuIFZlY3RvcihlKSwyLFZlY3RvcihlKWVuZCBmdW5jdGlvbiBWUHJlZGljdGlvbjpNYXhBbmdsZSh0LGUsbilsb2NhbCBhLG49c2VsZjpHZXRXYXlwb2ludHModC5uZXR3b3JrSUQsbilsb2NhbCBuPTAgbG9jYWwgdD0oVmVjdG9yKGUueCwwLGUueSktVmVjdG9yKHQpKWZvciBhLGUgaW4gaXBhaXJzKGEpZG8gbG9jYWwgZT1WZWN0b3IoMCwwLDApOmFuZ2xlQmV0d2Vlbih0LFZlY3RvcihlLndheXBvaW50LngsMCxlLndheXBvaW50LnkpLVZlY3RvcihlLnVuaXRwb3MueCwwLGUudW5pdHBvcy55KSlpZiBlPm4gdGhlbiBuPWUgZW5kIGVuZCByZXR1cm4gbiBlbmQgZnVuY3Rpb24gVlByZWRpY3Rpb246V2F5UG9pbnRBbmFseXNpcyhlLG8sbCxuLGQsaSxoKWxvY2FsIGEsdCxuIGxvY2FsIF89c2VsZi5UYXJnZXRzV2F5cG9pbnRzW2UubmV0d29ya0lEXWFuZCBzZWxmLlRhcmdldHNXYXlwb2ludHNbZS5uZXR3b3JrSURdb3J7fWxvY2FsIHI9c2VsZjpHZXRDdXJyZW50V2F5UG9pbnRzKGUpbG9jYWwgdT1zZWxmLlRhcmdldHNWaXNpYmxlW2UubmV0d29ya0lEXWFuZCBzZWxmLlRhcmdldHNWaXNpYmxlW2UubmV0d29ya0lEXW9yIHNlbGY6R2V0VGltZSgpbj0xIGEsdD1zZWxmOkNhbGN1bGF0ZVRhcmdldFBvc2l0aW9uKGUsbyxsLGQsaSxoKWlmIHNlbGY6Q291bnRXYXlwb2ludHMoZS5uZXR3b3JrSUQsc2VsZjpHZXRUaW1lKCktLjEpPj0xIG9yIHNlbGY6Q291bnRXYXlwb2ludHMoZS5uZXR3b3JrSUQsc2VsZjpHZXRUaW1lKCktMSk9PTEgdGhlbiBuPTIgZW5kIGxvY2FsIHM9KF9HLlZQcmVkaWN0aW9uTWVudS5Nb2RlPT1jKWFuZCAzIG9yIDIgbG9jYWwgVD0oX0cuVlByZWRpY3Rpb25NZW51Lk1vZGU9PWMpYW5kIDEgb3IgLjUgaWYgc2VsZjpDb3VudFdheXBvaW50cyhlLm5ldHdvcmtJRCxzZWxmOkdldFRpbWUoKS0uNzUpPj1zIHRoZW4gbG9jYWwgdD1zZWxmOk1heEFuZ2xlKGUsclsjcl0sc2VsZjpHZXRUaW1lKCktVClpZiB0PjkwIHRoZW4gbj0xIGVsc2VpZiB0PDMwIGFuZCBzZWxmOkNvdW50V2F5cG9pbnRzKGUubmV0d29ya0lELHNlbGY6R2V0VGltZSgpLS4xKT49MSB0aGVuIG49MiBlbmQgZW5kIHM9KF9HLlZQcmVkaWN0aW9uTWVudS5Nb2RlPT1jKWFuZCAyIG9yIDEgaWYgc2VsZjpDb3VudFdheXBvaW50cyhlLm5ldHdvcmtJRCxzZWxmOkdldFRpbWUoKS1zKT09MCB0aGVuIG49MiBlbmQgaWYgX0cuVlByZWRpY3Rpb25NZW51Lk1vZGU9PW0gdGhlbiBuPTIgZW5kIGlmI3I8PTEgYW5kIHNlbGY6R2V0VGltZSgpLXU+MSB0aGVuIG49MiBlbmQgaWYgc2VsZjppc1Nsb3dlZChlLG8sZCxpKXRoZW4gbj0yIGVuZCBpZiBhIGFuZCB0IGFuZCgobC9lLm1zPj1vK0dldERpc3RhbmNlKGksdCkvZClvcihsL2UubXM+PW8rR2V0RGlzdGFuY2UoaSxhKS9kKSl0aGVuIG49MyBlbmQgaWYgVmVjdG9yKGkpOmFuZ2xlQmV0d2VlbihWZWN0b3IoZSksVmVjdG9yKHQpKT42MCB0aGVuIG49MSBlbmQgaWYgbm90IGEgb3Igbm90IHQgdGhlbiBuPTAgdD1WZWN0b3Ioclsjcl0ueCwwLHJbI3JdLnkpYT10IGVuZCBpZiBHZXREaXN0YW5jZShteUhlcm8sZSk8MjUwIHRoZW4gbj0yIGEsdD1zZWxmOkNhbGN1bGF0ZVRhcmdldFBvc2l0aW9uKGUsbyouNSxsLGQqMixpLGgpYT10IGVuZCBpZiNfPT0wIGFuZChzZWxmOkdldFRpbWUoKS11KT4zIHRoZW4gbj0yIGVuZCBpZiBzZWxmLkRvbnRTaG9vdFVudGlsTmV3V2F5cG9pbnRzW2UubmV0d29ya0lEXXRoZW4gbj0wIHQ9VmVjdG9yKGUueCwwLGUueilhPXQgZW5kIHJldHVybiB0LG4sYSBlbmQgZnVuY3Rpb24gVlByZWRpY3Rpb246R2V0QmVzdENhc3RQb3NpdGlvbihlLGwscix0LGQsbix1LHMpYXNzZXJ0KGUsIlZQcmVkaWN0aW9uOiBUYXJnZXQgY2FuJ3QgYmUgbmlsIil0PXQgYW5kIHQtNCBvciBtYXRoLmh1Z2Ugcj1yPT0wIGFuZCAxIG9yKHIrc2VsZjpHZXRIaXRCb3goZSkpLTQgZD1kIGFuZCBkIG9yIG1hdGguaHVnZSBuPW4gYW5kIG4gb3IgVmVjdG9yKG15SGVybylpZiBuLm5ldHdvcmtJRCBhbmQgbi5uZXR3b3JrSUQ9PW15SGVyby5uZXR3b3JrSUQgdGhlbiBuPVZlY3RvcihteUhlcm8pZW5kIGxvY2FsIGg9R2V0RGlzdGFuY2VTcXIobixteUhlcm8pPDUwKjUwIGFuZCB0cnVlIG9yIGZhbHNlIGw9bCsoLjA3K0dldExhdGVuY3koKS8yZTMpbG9jYWwgaSxvLGE9VmVjdG9yKGUpLFZlY3RvcihlKSwwIGxvY2FsIGYsZyxjPXNlbGY6SXNEYXNoaW5nKGUsbCxyLGQsbilsb2NhbCBULG0sXz1zZWxmOklzSW1tb2JpbGUoZSxsLHIsZCxuLHMpbG9jYWwgQT1zZWxmLlRhcmdldHNWaXNpYmxlW2UubmV0d29ya0lEXWFuZCBzZWxmLlRhcmdldHNWaXNpYmxlW2UubmV0d29ya0lEXW9yIHNlbGY6R2V0VGltZSgpaWYgZS50eXBlfj1teUhlcm8udHlwZSB0aGVuIGksYSxvPXNlbGY6Q2FsY3VsYXRlVGFyZ2V0UG9zaXRpb24oZSxsLHIsZCxuLHMpZWxzZSBpZiBzZWxmLkRvbnRTaG9vdFtlLm5ldHdvcmtJRF1hbmQgc2VsZi5Eb250U2hvb3RbZS5uZXR3b3JrSURdPnNlbGY6R2V0VGltZSgpdGhlbiBpLG89VmVjdG9yKGUueCxlLnksZS56KSxWZWN0b3IoZS54LGUueSxlLnopYT0wIGVsc2VpZiBmIHRoZW4gaWYgZyB0aGVuIGE9NSBlbHNlIGE9MCBlbmQgaSxvPWMsYyBlbHNlaWYgc2VsZi5Eb250U2hvb3QyW2UubmV0d29ya0lEXWFuZCBzZWxmLkRvbnRTaG9vdDJbZS5uZXR3b3JrSURdPnNlbGY6R2V0VGltZSgpdGhlbiBpLG89VmVjdG9yKGUueCxlLnksZS56KSxWZWN0b3IoZS54LGUueSxlLnopYT03IGVsc2VpZiBUIHRoZW4gaSxvPW0sXyBhPTQgZWxzZWlmIG5vdCBzZWxmLkRvbnRVc2VXYXlQb2ludHMgdGhlbiBvLGEsaT1zZWxmOkNhbGN1bGF0ZVRhcmdldFBvc2l0aW9uKGUsbCxyLGQsbixzKWVuZCBlbmQgaWYgaCB0aGVuIGlmKHM9PSJsaW5lImFuZCBHZXREaXN0YW5jZVNxcihuLGkpPj10KnQpdGhlbiBhPTAgZW5kIGlmKHM9PSJjaXJjdWxhciJhbmQoR2V0RGlzdGFuY2VTcXIobixpKT49KHQrcileMikpdGhlbiBhPTAgZW5kIGlmIHNlbGYuU2hvdEF0TWF4UmFuZ2UgYW5kIGF+PTAgYW5kIHM9PSJjaXJjdWxhciJhbmQoR2V0RGlzdGFuY2VTcXIobixvKT50XjIpdGhlbiBpZiBHZXREaXN0YW5jZVNxcihuLGkpPD0odCtyLzEuNCleMiB0aGVuIGlmIEdldERpc3RhbmNlU3FyKG4saSk8PXQqdCB0aGVuIG89aSBlbHNlIG89VmVjdG9yKG4pK3QqKFZlY3RvcihpKS1WZWN0b3IobikpOm5vcm1hbGl6ZWQoKWVuZCBlbmQgZWxzZWlmKEdldERpc3RhbmNlU3FyKG4sbyk+dF4yKXRoZW4gYT0wIGVuZCBlbmQgcj1yLXNlbGY6R2V0SGl0Qm94KGUpKzQgaWYgdSBhbmQgYT4wIHRoZW4gc2VsZi5FbmVteU1pbmlvbnMucmFuZ2U9dCs1MDAqKGwrdC9kKXNlbGYuSnVuZ2xlTWluaW9ucy5yYW5nZT1zZWxmLkVuZW15TWluaW9ucy5yYW5nZSBzZWxmLk90aGVyTWluaW9ucy5yYW5nZT1zZWxmLkVuZW15TWluaW9ucy5yYW5nZSBzZWxmLkVuZW15TWluaW9uczp1cGRhdGUoKXNlbGYuSnVuZ2xlTWluaW9uczp1cGRhdGUoKXNlbGYuT3RoZXJNaW5pb25zOnVwZGF0ZSgpaWYgdSBhbmQgX0cuVlByZWRpY3Rpb25NZW51LkNvbGxpc2lvbi5Vbml0UG9zIGFuZCBzZWxmOkNoZWNrTWluaW9uQ29sbGlzaW9uKGUsZSxsLHIsdCxkLG4pdGhlbiBhPS0xIGVsc2VpZiBfRy5WUHJlZGljdGlvbk1lbnUuQ29sbGlzaW9uLlByZWRpY3RQb3MgYW5kIHNlbGY6Q2hlY2tNaW5pb25Db2xsaXNpb24oZSxpLGwscix0LGQsbil0aGVuIGE9LTEgZWxzZWlmIF9HLlZQcmVkaWN0aW9uTWVudS5Db2xsaXNpb24uQ2FzdFBvcyBhbmQgc2VsZjpDaGVja01pbmlvbkNvbGxpc2lvbihlLG8sbCxyLHQsZCxuKXRoZW4gYT0tMSBlbmQgZW5kIHJldHVybiBvLGEsaSBlbmQgZnVuY3Rpb24gVlByZWRpY3Rpb246R2V0UHJlZGljdGVkSGVhbHRoKGEsbyxuKWxvY2FsIHI9MCBsb2NhbCBlPTEgbG9jYWwgaT0wIGxvY2FsIHQ9MCBuPW4gYW5kIG4gb3IgLjA3IHdoaWxlIGU8PSNzZWxmLkFjdGl2ZUF0dGFja3MgZG8gaWYgc2VsZi5BY3RpdmVBdHRhY2tzW2VdLkF0dGFja2VyIGFuZCBub3Qgc2VsZi5BY3RpdmVBdHRhY2tzW2VdLkF0dGFja2VyLmRlYWQgYW5kIHNlbGYuQWN0aXZlQXR0YWNrc1tlXS5UYXJnZXQgYW5kIHNlbGYuQWN0aXZlQXR0YWNrc1tlXS5UYXJnZXQubmV0d29ya0lEPT1hLm5ldHdvcmtJRCB0aGVuIGxvY2FsIGE9c2VsZi5BY3RpdmVBdHRhY2tzW2VdLnN0YXJ0dGltZStzZWxmLkFjdGl2ZUF0dGFja3NbZV0ud2luZFVwVGltZSsoR2V0RGlzdGFuY2Uoc2VsZi5BY3RpdmVBdHRhY2tzW2VdLnBvcyxhKSkvc2VsZi5BY3RpdmVBdHRhY2tzW2VdLnByb2plY3RpbGVzcGVlZCtuIGlmIHNlbGY6R2V0VGltZSgpPGEtbiBhbmQgYTxzZWxmOkdldFRpbWUoKStvIHRoZW4gcj1yK3NlbGYuQWN0aXZlQXR0YWNrc1tlXS5kYW1hZ2UgdD10KzEgaWYgc2VsZi5BY3RpdmVBdHRhY2tzW2VdLmRhbWFnZT5pIHRoZW4gaT1zZWxmLkFjdGl2ZUF0dGFja3NbZV0uZGFtYWdlIGVuZCBlbmQgZW5kIGU9ZSsxIGVuZCByZXR1cm4gYS5oZWFsdGgtcixpLHQgZW5kIGZ1bmN0aW9uIFZQcmVkaWN0aW9uOkdldFByZWRpY3RlZEhlYWx0aDIocixpKWxvY2FsIHQ9MCBsb2NhbCBlPTEgd2hpbGUgZTw9I3NlbGYuQWN0aXZlQXR0YWNrcyBkbyBsb2NhbCBhPTAgaWYoc2VsZjpHZXRUaW1lKCktLjEpPD1zZWxmLkFjdGl2ZUF0dGFja3NbZV0uc3RhcnR0aW1lK3NlbGYuQWN0aXZlQXR0YWNrc1tlXS5hbmltYXRpb25UaW1lIGFuZCBzZWxmLkFjdGl2ZUF0dGFja3NbZV0uVGFyZ2V0IGFuZCBzZWxmLkFjdGl2ZUF0dGFja3NbZV0uVGFyZ2V0LnZhbGlkIGFuZCBzZWxmLkFjdGl2ZUF0dGFja3NbZV0uVGFyZ2V0Lm5ldHdvcmtJRD09ci5uZXR3b3JrSUQgYW5kIHNlbGYuQWN0aXZlQXR0YWNrc1tlXS5BdHRhY2tlciBhbmQgc2VsZi5BY3RpdmVBdHRhY2tzW2VdLkF0dGFja2VyLnZhbGlkIGFuZCBub3Qgc2VsZi5BY3RpdmVBdHRhY2tzW2VdLkF0dGFja2VyLmRlYWQgdGhlbiBsb2NhbCBuPXNlbGYuQWN0aXZlQXR0YWNrc1tlXS5zdGFydHRpbWUgbG9jYWwgdD1pK3NlbGY6R2V0VGltZSgpd2hpbGUgbjx0IGRvIGlmIG4+PXNlbGY6R2V0VGltZSgpYW5kKG4rKHNlbGYuQWN0aXZlQXR0YWNrc1tlXS53aW5kVXBUaW1lK0dldERpc3RhbmNlKHIsc2VsZi5BY3RpdmVBdHRhY2tzW2VdLnBvcykvc2VsZi5BY3RpdmVBdHRhY2tzW2VdLnByb2plY3RpbGVzcGVlZCkpPHQgdGhlbiBhPWErMSBlbmQgbj1uK3NlbGYuQWN0aXZlQXR0YWNrc1tlXS5hbmltYXRpb25UaW1lIGVuZCBlbmQgdD10K2Eqc2VsZi5BY3RpdmVBdHRhY2tzW2VdLmRhbWFnZSBlPWUrMSBlbmQgcmV0dXJuIHIuaGVhbHRoLXQgZW5kIGZ1bmN0aW9uIFZQcmVkaWN0aW9uOkNvbGxpc2lvblByb2Nlc3NTcGVsbChuLGUpaWYgbiBhbmQgbi52YWxpZCBhbmQgZS50YXJnZXQgYW5kIG4udHlwZX49bXlIZXJvLnR5cGUgYW5kIGUudGFyZ2V0LnR5cGU9PSdvYmpfQUlfTWluaW9uJ2FuZCBuLnRlYW09PW15SGVyby50ZWFtIGFuZCBlIGFuZCBlLm5hbWUgYW5kKGUubmFtZTpsb3dlcigpOmZpbmQoImF0dGFjayIpb3IoZS5uYW1lPT0iZnJvc3RhcnJvdyIpKWFuZCBlLndpbmRVcFRpbWUgYW5kIGUudGFyZ2V0IHRoZW4gaWYgR2V0RGlzdGFuY2VTcXIobik8NGU2IHRoZW4gbG9jYWwgYT1zZWxmOkdldFRpbWUoKStlLndpbmRVcFRpbWUrR2V0RGlzdGFuY2UoZS50YXJnZXQsbikvc2VsZjpHZXRQcm9qZWN0aWxlU3BlZWQobiktR2V0TGF0ZW5jeSgpLzJlMyBsb2NhbCB0PTEgd2hpbGUgdDw9I3NlbGYuQWN0aXZlQXR0YWNrcyBkbyBpZihzZWxmLkFjdGl2ZUF0dGFja3NbdF0uQXR0YWNrZXIgYW5kIHNlbGYuQWN0aXZlQXR0YWNrc1t0XS5BdHRhY2tlci52YWxpZCBhbmQgc2VsZi5BY3RpdmVBdHRhY2tzW3RdLkF0dGFja2VyLm5ldHdvcmtJRD09bi5uZXR3b3JrSUQpb3IoKHNlbGYuQWN0aXZlQXR0YWNrc1t0XS5oaXR0aW1lKzMpPHNlbGY6R2V0VGltZSgpKXRoZW4gdGFibGUucmVtb3ZlKHNlbGYuQWN0aXZlQXR0YWNrcyx0KWVsc2UgdD10KzEgZW5kIGVuZCB0YWJsZS5pbnNlcnQoc2VsZi5BY3RpdmVBdHRhY2tzLHtBdHRhY2tlcj1uLHBvcz1WZWN0b3IobiksVGFyZ2V0PWUudGFyZ2V0LGFuaW1hdGlvblRpbWU9ZS5hbmltYXRpb25UaW1lLGRhbWFnZT1zZWxmOkNhbGNEYW1hZ2VPZkF0dGFjayhuLGUudGFyZ2V0LGUsMCksaGl0dGltZT1hLHN0YXJ0dGltZT1zZWxmOkdldFRpbWUoKS1HZXRMYXRlbmN5KCkvMmUzLHdpbmRVcFRpbWU9ZS53aW5kVXBUaW1lLHByb2plY3RpbGVzcGVlZD1zZWxmOkdldFByb2plY3RpbGVTcGVlZChuKX0pZW5kIGVuZCBlbmQgZnVuY3Rpb24gVlByZWRpY3Rpb246Q2hlY2tDb2woZCxlLGksdCxyLGEsbyxuLGwpaWYgZC5uZXR3b3JrSUQ9PWUubmV0d29ya0lEIHRoZW4gcmV0dXJuIGZhbHNlIGVuZCBpZiBlLnR5cGV+PW15SGVyby50eXBlIGFuZCBfRy5WUHJlZGljdGlvbk1lbnUuQ29sbGlzaW9uLkNIZWFsdGggYW5kIHNlbGY6R2V0UHJlZGljdGVkSGVhbHRoKGUsdCtHZXREaXN0YW5jZShuLGUpL28tR2V0TGF0ZW5jeSgpLzFlMyk8MCB0aGVuIHJldHVybiBmYWxzZSBlbmQgbG9jYWwgZD1zZWxmOkdldEN1cnJlbnRXYXlQb2ludHMoZSlsb2NhbCB0LG89ZS5wYXRoQ291bnQ9PTEgYW5kIFZlY3RvcihlKW9yIHNlbGY6Q2FsY3VsYXRlVGFyZ2V0UG9zaXRpb24oZSx0LHIsbyxuLCJsaW5lIilpZiBHZXREaXN0YW5jZVNxcihuLHQpPD0oYSleMiBhbmQgR2V0RGlzdGFuY2VTcXIobixlKTw9KGErMTAwKV4yIHRoZW4gbG9jYWwgYT0oZS5wYXRoQ291bnQ+MSlhbmQgX0cuVlByZWRpY3Rpb25NZW51LkNvbGxpc2lvbi5CdWZmZXIgb3IgOCBpZiBlLnR5cGU9PW15SGVyby50eXBlIHRoZW4gYT1hK3NlbGY6R2V0SGl0Qm94KGUpZW5kIGlmIGwgdGhlbiBEcmF3Q2lyY2xlM0QoZS54LG15SGVyby55LGUueixzZWxmOkdldEhpdEJveChlKSthLDEsQVJHQigyNTUsMjU1LDI1NSwyNTUpKURyYXdDaXJjbGUzRCh0LngsbXlIZXJvLnksdC56LHNlbGY6R2V0SGl0Qm94KGUpK2EsMSxBUkdCKDI1NSwyNTUsMjU1LDI1NSkpc2VsZjpETGluZSh0LGUsQ29sb3IpZW5kIGlmIGUucGF0aENvdW50PjEgdGhlbiBsb2NhbCBpLG8sbj1WZWN0b3JQb2ludFByb2plY3Rpb25PbkxpbmVTZWdtZW50KG4saSxWZWN0b3IodCkpaWYgbiBhbmQoR2V0RGlzdGFuY2VTcXIodCxpKTw9KHNlbGY6R2V0SGl0Qm94KGUpK3IrYSleMil0aGVuIHJldHVybiB0cnVlIGVuZCBlbmQgbG9jYWwgdCxpLG49VmVjdG9yUG9pbnRQcm9qZWN0aW9uT25MaW5lU2VnbWVudChuLGksVmVjdG9yKGUpKWlmIG4gYW5kKEdldERpc3RhbmNlU3FyKGUsdCk8PShzZWxmOkdldEhpdEJveChlKStyK2EpXjIpdGhlbiByZXR1cm4gdHJ1ZSBlbmQgZW5kIHJldHVybiBmYWxzZSBlbmQgZnVuY3Rpb24gVlByZWRpY3Rpb246Q2hlY2tNaW5pb25Db2xsaXNpb24obCxuLG8sYSxyLGQsZSx0LGkpbj1WZWN0b3IobillPWUgYW5kIFZlY3RvcihlKW9yIG15SGVybyBpZiBpIHRoZW4gc2VsZi5FbmVteU1pbmlvbnMucmFuZ2U9cis1MDAqKG8rci9kKXNlbGYuSnVuZ2xlTWluaW9ucy5yYW5nZT1zZWxmLkVuZW15TWluaW9ucy5yYW5nZSBzZWxmLk90aGVyTWluaW9ucy5yYW5nZT1zZWxmLkVuZW15TWluaW9ucy5yYW5nZSBzZWxmLkVuZW15TWluaW9uczp1cGRhdGUoKXNlbGYuSnVuZ2xlTWluaW9uczp1cGRhdGUoKXNlbGYuT3RoZXJNaW5pb25zOnVwZGF0ZSgpZW5kIGxvY2FsIGk9ZmFsc2UgaWYgX0cuVlByZWRpY3Rpb25NZW51LkNvbGxpc2lvbi5NaW5pb25zIHRoZW4gZm9yIGMscyBpbiBpcGFpcnMoc2VsZi5FbmVteU1pbmlvbnMub2JqZWN0cylkbyBpZiBzZWxmOkNoZWNrQ29sKGwscyxuLG8sYSxyLGQsZSx0KXRoZW4gaWYgbm90IHQgdGhlbiByZXR1cm4gdHJ1ZSBlbHNlIGk9dHJ1ZSBlbmQgZW5kIGVuZCBlbmQgaWYgX0cuVlByZWRpY3Rpb25NZW51LkNvbGxpc2lvbi5Nb2JzIHRoZW4gZm9yIGMscyBpbiBpcGFpcnMoc2VsZi5KdW5nbGVNaW5pb25zLm9iamVjdHMpZG8gaWYgc2VsZjpDaGVja0NvbChsLHMsbixvLGEscixkLGUsdCl0aGVuIGlmIG5vdCB0IHRoZW4gcmV0dXJuIHRydWUgZWxzZSBpPXRydWUgZW5kIGVuZCBlbmQgZW5kIGlmIF9HLlZQcmVkaWN0aW9uTWVudS5Db2xsaXNpb24uT3RoZXJzIHRoZW4gZm9yIGMscyBpbiBpcGFpcnMoc2VsZi5PdGhlck1pbmlvbnMub2JqZWN0cylkbyBpZiBzLnRlYW1+PW15SGVyby50ZWFtIGFuZCBzZWxmOkNoZWNrQ29sKGwscyxuLG8sYSxyLGQsZSx0KXRoZW4gaWYgbm90IHQgdGhlbiByZXR1cm4gdHJ1ZSBlbHNlIGk9dHJ1ZSBlbmQgZW5kIGVuZCBlbmQgaWYgc2VsZi5DaGFtcGlvbkNvbGxpc2lvbiB0aGVuIGZvciBjLHMgaW4gaXBhaXJzKEdldEVuZW15SGVyb2VzKCkpZG8gaWYgc2VsZjpDaGVja0NvbChsLHMsbixvLGEscixkLGUsdCl0aGVuIGlmIG5vdCB0IHRoZW4gcmV0dXJuIHRydWUgZWxzZSBpPXRydWUgZW5kIGVuZCBlbmQgZW5kIGlmIHQgdGhlbiBsb2NhbCB0PVZlY3RvcihuLWUpOnBlcnBlbmRpY3VsYXIoKTpub3JtYWxpemVkKClsb2NhbCByPWkgYW5kIEFSR0IoMjU1LDI1NSwwLDApb3IgQVJHQigyNTUsMCwyNTUsMClsb2NhbCBvPVZlY3RvcihlKSthKlZlY3Rvcih0KWxvY2FsIGQ9VmVjdG9yKGUpLWEqVmVjdG9yKHQpbG9jYWwgbD1WZWN0b3IoZSkrYSp0LVZlY3Rvcih0KTpwZXJwZW5kaWN1bGFyKCkqR2V0RGlzdGFuY2UoZSxuKWxvY2FsIGU9VmVjdG9yKGUpLWEqdC1WZWN0b3IodCk6cGVycGVuZGljdWxhcigpKkdldERpc3RhbmNlKGUsbilzZWxmOkRMaW5lKG8sZCxyKXNlbGY6RExpbmUobyxsLHIpc2VsZjpETGluZShkLGUscilzZWxmOkRMaW5lKGwsZSxyKWlmIG5vdCBpIGFuZCBJc0tleURvd24oc3RyaW5nLmJ5dGUoIlQiKSl0aGVuIENhc3RTcGVsbChfUSxuLngsbi56KWVuZCBlbmQgcmV0dXJuIGZhbHNlIGVuZCBmdW5jdGlvbiBWUHJlZGljdGlvbjpHZXRDaXJjdWxhckNhc3RQb3NpdGlvbihhLHQsZSxuLHIsbyxpKXJldHVybiBzZWxmOkdldEJlc3RDYXN0UG9zaXRpb24oYSx0LGUsbixyLG8saSwiY2lyY3VsYXIiKWVuZCBmdW5jdGlvbiBWUHJlZGljdGlvbjpHZXRMaW5lQ2FzdFBvc2l0aW9uKGEsZSxuLHQsaSxyLG8pcmV0dXJuIHNlbGY6R2V0QmVzdENhc3RQb3NpdGlvbihhLGUsbix0LGkscixvLCJsaW5lIillbmQgZnVuY3Rpb24gVlByZWRpY3Rpb246R2V0UHJlZGljdGVkUG9zKHIsYSx0LGUsbilyZXR1cm4gc2VsZjpHZXRCZXN0Q2FzdFBvc2l0aW9uKHIsYSwxLG1hdGguaHVnZSx0LGUsbiwiY2lyY3VsYXIiKWVuZCBmdW5jdGlvbiBWUHJlZGljdGlvbjpHZXRDaXJjdWxhckFPRUNhc3RQb3NpdGlvbihvLGgsdCxhLHUscixpKWxvY2FsIGMsbCxuPXNlbGY6R2V0QmVzdENhc3RQb3NpdGlvbihvLGgsdCxhLHUscixpLCJjaXJjdWxhciIpbG9jYWwgZT17fWxvY2FsIFQscyxtPWMsbCxuIHRhYmxlLmluc2VydChlLG4pZm9yIHMsZCBpbiBpcGFpcnMoR2V0RW5lbXlIZXJvZXMoKSlkbyBpZiBkLm5ldHdvcmtJRH49by5uZXR3b3JrSUQgYW5kIFZhbGlkVGFyZ2V0KGQsYSoxLjUpdGhlbiBjLGwsbj1zZWxmOkdldEJlc3RDYXN0UG9zaXRpb24oZCxoLHQsYSx1LHIsaSwiY2lyY3VsYXIiKWlmIEdldERpc3RhbmNlKHIsbik8KGErdClhbmQoSGl0Y2hhbmNlfj0tMSBvciBub3QgaSl0aGVuIHRhYmxlLmluc2VydChlLG4pZW5kIGVuZCBlbmQgd2hpbGUjZT4xIGRvIGxvY2FsIG49TUVDKGUpbG9jYWwgbj1uOkNvbXB1dGUoKWlmIG4ucmFkaXVzPD10K3NlbGY6R2V0SGl0Qm94KG8pLTggdGhlbiByZXR1cm4gbi5jZW50ZXIscywjZSBlbmQgbG9jYWwgbj0tMSBsb2NhbCBhPTAgZm9yIHQ9MiwjZSBkbyBsb2NhbCBlPUdldERpc3RhbmNlU3FyKGVbdF0sZVsxXSlpZiBlPm4gb3Igbj09LTEgdGhlbiBhPXQgbj1lIGVuZCBlbmQgdGFibGUucmVtb3ZlKGUsYSllbmQgcmV0dXJuIFQscywjZSxtIGVuZCBmdW5jdGlvbiBWUHJlZGljdGlvbjpHZXRMaW5lQU9FQ2FzdFBvc2l0aW9uKGwsaCxuLHQsdSxlKWxvY2FsIGQsbyxpPXNlbGY6R2V0QmVzdENhc3RQb3NpdGlvbihsLGgsbix0LHUsZSxmYWxzZSwibGluZSIpbG9jYWwgcj17fWxvY2FsIGE9e31sb2NhbCBfLG09ZCxvIHRhYmxlLmluc2VydChhLHt1bml0PWwsSGl0Q2hhbmNlPW8sUG9zaXRpb249aSxDYXN0UG9zaXRpb249ZH0pdGFibGUuaW5zZXJ0KHIsaSl0PXQgYW5kIHQtNCBvciAyZTQgbj1uPT0wIGFuZCAxIG9yKG4rc2VsZjpHZXRIaXRCb3gobCkpLTQgZT1lIGFuZCBWZWN0b3IoZSlvciBWZWN0b3IobXlIZXJvKWxvY2FsIGZ1bmN0aW9uIHModCxyLGUsYSlsb2NhbCBuPUdldERpc3RhbmNlKHQscilsb2NhbCBuPShlKmUtYSphK24qbikvKDIqbilsb2NhbCBhPW1hdGguc3FydChlKmUtbipuKTtsb2NhbCBlPShWZWN0b3IociktVmVjdG9yKHQpKTpub3JtYWxpemVkKClsb2NhbCBuPVZlY3Rvcih0KStuKmUgbG9jYWwgdD1uK2EqZTpwZXJwZW5kaWN1bGFyKClsb2NhbCBlPW4tYSplOnBlcnBlbmRpY3VsYXIoKXJldHVybiB0LGUgZW5kIGxvY2FsIGZ1bmN0aW9uIFQoZSxuLHIsdClsb2NhbCBhPShlK24pLzIgbG9jYWwgYSxyPXMoZSxhLHIsR2V0RGlzdGFuY2UoYSxlKSlsb2NhbCBpPShhLWUpbG9jYWwgYT0oci1lKXJldHVybiBlK3QqKG4taS1lKTpub3JtYWxpemVkKCksZSt0KihuLWEtZSk6bm9ybWFsaXplZCgpZW5kIGxvY2FsIGZ1bmN0aW9uIGMocixvLGUsbilsb2NhbCB0PTAgbG9jYWwgYT17fWU9ZSsyIGZvciBpLG4gaW4gaXBhaXJzKG4pZG8gbG9jYWwgcixkLG89VmVjdG9yUG9pbnRQcm9qZWN0aW9uT25MaW5lU2VnbWVudChyLG8sbilpZiBvIGFuZCBHZXREaXN0YW5jZVNxcihyLG4pPD1lKmUgdGhlbiB0PXQrMSB0YWJsZS5pbnNlcnQoYSxuKWVsc2VpZiBpPT0xIHRoZW4gcmV0dXJuLTEgZW5kIGVuZCByZXR1cm4gdCxhIGVuZCBmb3IgYyxzIGluIGlwYWlycyhHZXRFbmVteUhlcm9lcygpKWRvIGlmIHMubmV0d29ya0lEfj1sLm5ldHdvcmtJRCBhbmQgVmFsaWRUYXJnZXQocyx0KjEuNSl0aGVuIGQsbyxpPXNlbGY6R2V0QmVzdENhc3RQb3NpdGlvbihzLGgsbix0LHUsZSxmYWxzZSwibGluZSIpaWYgR2V0RGlzdGFuY2UoZSxpKTwodCtuKXRoZW4gdGFibGUuaW5zZXJ0KHIsaSl0YWJsZS5pbnNlcnQoYSx7dW5pdD1zLEhpdENoYW5jZT1vLFBvc2l0aW9uPWksQ2FzdFBvc2l0aW9uPWR9KWVuZCBlbmQgZW5kIGxvY2FsIGk9MSBsb2NhbCBvIGlmI3I+MSB0aGVuIGZvciBhLGQgaW4gaXBhaXJzKHIpZG8gbG9jYWwgdCxkPVQoZSxyW2FdLG4tMjAsdClsb2NhbCBhLGw9YyhlLHQsbixyKWxvY2FsIGUsbj1jKGUsZCxuLHIpaWYgYT49aSB0aGVuIG89dCBpPWEgTWF4SGl0UG9pbnRzPWwgZW5kIGlmIGU+PWkgdGhlbiBvPWQgaT1lIE1heEhpdFBvaW50cz1uIGVuZCBlbmQgZW5kIGlmIGk+MSB0aGVuIGxvY2FsIGQ9LTEgbG9jYWwgciBsb2NhbCBvIGZvciB0LG4gaW4gaXBhaXJzKE1heEhpdFBvaW50cylkbyBmb3IgYSx0IGluIGlwYWlycyhNYXhIaXRQb2ludHMpZG8gbG9jYWwgYSxlPVZlY3RvcihlKSwoVmVjdG9yKG4pK1ZlY3Rvcih0KSkvMiBsb2NhbCBsLGksbD1WZWN0b3JQb2ludFByb2plY3Rpb25PbkxpbmVTZWdtZW50KGEsZSxuKWxvY2FsIGEsZSxhPVZlY3RvclBvaW50UHJvamVjdGlvbk9uTGluZVNlZ21lbnQoYSxlLHQpbG9jYWwgZT1HZXREaXN0YW5jZVNxcihuLGkpK0dldERpc3RhbmNlU3FyKHQsZSlpZiBlPj1kIHRoZW4gZD1lIHI9biBvPXQgZW5kIGVuZCBlbmQgaWYgc2VsZi5SZXR1cm5IaXRUYWJsZSB0aGVuIGZvciB0PSNhLDEsLTEgZG8gbG9jYWwgaSxlLHI9VmVjdG9yUG9pbnRQcm9qZWN0aW9uT25MaW5lU2VnbWVudChWZWN0b3IoZSksKHIrbykvMixhW3RdLlBvc2l0aW9uKWlmKG5vdCByKW9yKEdldERpc3RhbmNlU3FyKGUsYVt0XS5Qb3NpdGlvbik+KG4rNSleMil0aGVuIHRhYmxlLnJlbW92ZShhLHQpZW5kIGVuZCBlbmQgcmV0dXJuKHIrbykvMixtLGksYSBlbHNlIHJldHVybiBfLG0sMSxhIGVuZCBlbmQgZnVuY3Rpb24gVlByZWRpY3Rpb246R2V0Q29uZUFPRUNhc3RQb3NpdGlvbihpLGwsdCxuLG8sZSluPW4gYW5kIG4tNCBvciAyZTQgcmFkaXVzPTEgZT1lIGFuZCBWZWN0b3IoZSlvciBWZWN0b3IobXlIZXJvKXQ9KHQ8bWF0aC5waSoyKWFuZCB0IG9yKHQqbWF0aC5waS8xODApbG9jYWwgdSxjLHI9c2VsZjpHZXRCZXN0Q2FzdFBvc2l0aW9uKGksbCxyYWRpdXMsbixvLGUsZmFsc2UsImxpbmUiKWxvY2FsIGE9e31sb2NhbCBoLHM9dSxjIHRhYmxlLmluc2VydChhLFZlY3RvcihyKS1WZWN0b3IoZSkpbG9jYWwgZnVuY3Rpb24gbShhLHIsZSlsb2NhbCBuPTAgbG9jYWwgdD17fWZvciBpLGUgaW4gaXBhaXJzKGUpZG8gbG9jYWwgYT1WZWN0b3IoYSk6Y3Jvc3NQKGUpbG9jYWwgcj1WZWN0b3IoZSk6Y3Jvc3NQKHIpaWYgYS55Pj0wIGFuZCByLnk+PTAgdGhlbiBuPW4rMSB0YWJsZS5pbnNlcnQodCxlKWVsc2VpZiBpPT0xIHRoZW4gcmV0dXJuLTEgZW5kIGVuZCByZXR1cm4gbix0IGVuZCBsb2NhbCBmdW5jdGlvbiBkKGUsbix0KWxvY2FsIGE9VmVjdG9yKGUpOm5vcm1hbGl6ZWQoKWxvY2FsIGE9VmVjdG9yKGUpOnJvdGF0ZWQoMCwtbi8yLDApbG9jYWwgZT1WZWN0b3IoZSk6cm90YXRlZCgwLG4vMiwwKXJldHVybiBtKGEsZSx0KWVuZCBmb3IgZCx0IGluIGlwYWlycyhHZXRFbmVteUhlcm9lcygpKWRvIGlmIHQubmV0d29ya0lEfj1pLm5ldHdvcmtJRCBhbmQgVmFsaWRUYXJnZXQodCxuKjEuNSl0aGVuIHUsYyxyPXNlbGY6R2V0QmVzdENhc3RQb3NpdGlvbih0LGwscmFkaXVzLG4sbyxlLGZhbHNlLCJsaW5lIilpZiBHZXREaXN0YW5jZVNxcihlLHIpPG4qbiB0aGVuIHRhYmxlLmluc2VydChhLFZlY3RvcihyKS1WZWN0b3IoZSkpZW5kIGVuZCBlbmQgbG9jYWwgbyBsb2NhbCByPTEgbG9jYWwgaT17fWlmI2E+MSB0aGVuIGZvciBuLGUgaW4gaXBhaXJzKGEpZG8gbG9jYWwgbj1WZWN0b3IoZSk6cm90YXRlZCgwLHQvMiwwKWxvY2FsIHM9VmVjdG9yKGUpOnJvdGF0ZWQoMCwtdC8yLDApbG9jYWwgZSxsPWQobix0LGEpbG9jYWwgbix0PWQocyx0LGEpaWYgZT49ciB0aGVuIG89QzEgcj1lIGk9bCBlbmQgaWYgbj49ciB0aGVuIG89QzIgcj1uIGk9dCBlbmQgZW5kIGVuZCBpZiByPjEgdGhlbiBsb2NhbCBvPS0xIGxvY2FsIHQgbG9jYWwgYSBmb3IgbixlIGluIGlwYWlycyhpKWRvIGZvciByLG4gaW4gaXBhaXJzKGkpZG8gbG9jYWwgcj1WZWN0b3IoKTphbmdsZUJldHdlZW4obixlKWlmIHI+byB0aGVuIG89ciB0PWUgYT1uIGVuZCBlbmQgZW5kIHJldHVybiBWZWN0b3IoZSkrbiooKCh0K2EpLzIpKTpub3JtYWxpemVkKCkscyxyIGVsc2UgcmV0dXJuIGgscywxIGVuZCBlbmQgZnVuY3Rpb24gVlByZWRpY3Rpb246T25UaWNrKClpZiBzZWxmLmxhc3RpY2s9PW5pbCBvciBzZWxmOkdldFRpbWUoKS1zZWxmLmxhc3RpY2s+LjIgdGhlbiBzZWxmLmxhc3RpY2s9c2VsZjpHZXRUaW1lKClmb3IgbixlIGluIHBhaXJzKHNlbGYuVGFyZ2V0c1dheXBvaW50cylkbyBsb2NhbCBlPTEgd2hpbGUgZTw9I3NlbGYuVGFyZ2V0c1dheXBvaW50c1tuXWRvIGlmIHNlbGYuVGFyZ2V0c1dheXBvaW50c1tuXVtlXVsidGltZSJdK3NlbGYuV2F5cG9pbnRzVGltZTxzZWxmOkdldFRpbWUoKXRoZW4gdGFibGUucmVtb3ZlKHNlbGYuVGFyZ2V0c1dheXBvaW50c1tuXSxlKWVsc2UgZT1lKzEgZW5kIGVuZCBlbmQgZm9yIG4sZSBpbiBpcGFpcnMoR2V0RW5lbXlIZXJvZXMoKSlkbyBmb3Igbj0xLGUuYnVmZkNvdW50IGRvIGxvY2FsIG49ZTpnZXRCdWZmKG4paWYgbi52YWxpZCBhbmQgbi5uYW1lPT0iU3R1biJ0aGVuIGlmIHNlbGYuVGFyZ2V0c0ltbW9iaWxlW2UubmV0d29ya0lEXWFuZCBzZWxmLlRhcmdldHNJbW1vYmlsZVtlLm5ldHdvcmtJRF08c2VsZjpHZXRUaW1lKCl0aGVuIHNlbGYuVGFyZ2V0c0ltbW9iaWxlW2UubmV0d29ya0lEXT1zZWxmOkdldFRpbWUoKSsobi5lbmRULW4uc3RhcnRUKWVuZCBlbmQgZW5kIGVuZCBlbmQgZW5kIGZ1bmN0aW9uIFZQcmVkaWN0aW9uOkRyYXdTYXZlZFdheXBvaW50cyhuLGUpbG9jYWwgZT1zZWxmOkdldFdheXBvaW50cyhuLm5ldHdvcmtJRCxzZWxmOkdldFRpbWUoKS1lKWZvciBuLGUgaW4gaXBhaXJzKGUpZG8gRHJhd0NpcmNsZTNEKGUud2F5cG9pbnQueCxteUhlcm8ueSxlLndheXBvaW50LnksMTAwLDIsQVJHQigyNTUsMjU1LDI1NSwyNTUpKURyYXdUZXh0M0QodG9zdHJpbmcobiksZS53YXlwb2ludC54LG15SGVyby55LGUud2F5cG9pbnQueSwxMyxBUkdCKDI1NSwyNTUsMjU1LDI1NSksdHJ1ZSlEcmF3Q2lyY2xlM0QoZS51bml0cG9zLngsbXlIZXJvLnksZS51bml0cG9zLnksMTAwLDIsQVJHQigyNTUsMjU1LDAsMCkpZW5kIGVuZCBmdW5jdGlvbiBWUHJlZGljdGlvbjpEcmF3SGl0Qm94KGUpRHJhd0NpcmNsZTNEKGUueCxlLnksZS56LHNlbGY6R2V0SGl0Qm94KGUpLDEsQVJHQigyNTUsMjU1LDI1NSwyNTUpKWlmIGUgdGhlbiBEcmF3Q2lyY2xlM0QoZS54LGUueSxlLnosc2VsZjpHZXRIaXRCb3goZSksMSxBUkdCKDI1NSwwLDI1NSwwKSllbmQgZW5kIGZ1bmN0aW9uIFZQcmVkaWN0aW9uOkRMaW5lKG4sZSx0KURyYXdMaW5lM0Qobi54LG4ueSxuLnosZS54LGUueSxlLnosMSx0KWVuZCBmdW5jdGlvbiBWUHJlZGljdGlvbjpPbkRyYXcoKWlmIHNlbGYuc2hvd2Rldm1vZGUgYW5kIF9HLlZQcmVkaWN0aW9uTWVudS5EZXZlbG9wZXJzLkRlYnVnIHRoZW4gTGFzdEdldFRhcmdldD1MYXN0R2V0VGFyZ2V0IG9yIG15SGVybyBsb2NhbCBlPUdldFRhcmdldCgpb3IgTGFzdEdldFRhcmdldCBMYXN0R2V0VGFyZ2V0PWUgZm9yIG4sZSBpbiBpcGFpcnMoR2V0RW5lbXlIZXJvZXMoKSlkbyBzZWxmOkRyYXdIaXRCb3goZSllbmQgaWYgX0cuVlByZWRpY3Rpb25NZW51LkRldmVsb3BlcnMuU0MgdGhlbiBzZWxmLkVuZW15TWluaW9uczp1cGRhdGUoKXNlbGYuSnVuZ2xlTWluaW9uczp1cGRhdGUoKXNlbGYuT3RoZXJNaW5pb25zOnVwZGF0ZSgpc2VsZjpDaGVja01pbmlvbkNvbGxpc2lvbihWZWN0b3IobXlIZXJvKSsxMDUwKihWZWN0b3IobW91c2VQb3MpLVZlY3RvcihteUhlcm8pKTpub3JtYWxpemVkKCksLjI1LDcwLDEwNTAsMTgwMCxteUhlcm8sdHJ1ZSllbmQgaWYgZSB0aGVuIHNlbGY6RHJhd0hpdEJveChlKWxvY2FsIG4sYSx0PXNlbGY6R2V0Q2lyY3VsYXJDYXN0UG9zaXRpb24oZSwuNiw3MCw5MDAsbWF0aC5odWdlKWlmIGE+PS0xIHRoZW4gRHJhd1RleHQzRCh0b3N0cmluZyhhKSxuLngsbXlIZXJvLnksbi56LDQwLEFSR0IoMjU1LDI1NSwyNTUsMjU1KSx0cnVlKURyYXdDaXJjbGUzRCh0LngsbXlIZXJvLnksdC56LDcwK3NlbGY6R2V0SGl0Qm94KGUpLDEsQVJHQigyNTUsMCwyNTUsMCkpRHJhd0NpcmNsZTNEKG4ueCxteUhlcm8ueSxuLnosNzArc2VsZjpHZXRIaXRCb3goZSksMSxBUkdCKDI1NSwyNTUsMCwwKSllbmQgbG9jYWwgZT1zZWxmOkdldEN1cnJlbnRXYXlQb2ludHMoZSlmb3Igbj0xLCNlLTEgZG8gc2VsZjpETGluZShWZWN0b3IoZVtuXS54LG15SGVyby55LGVbbl0ueSksVmVjdG9yKGVbbisxXS54LG15SGVyby55LGVbbisxXS55KSxBUkdCKDI1NSwyNTUsMjU1LDI1NSkpZW5kIGVuZCBlbmQgZW5kIGZ1bmN0aW9uIFZQcmVkaWN0aW9uOkdldEhpdEJveChlKWlmIHNlbGYubm9oaXRib3htb2RlIGFuZCBlLnR5cGUgYW5kIGUudHlwZT09bXlIZXJvLnR5cGUgdGhlbiByZXR1cm4gMCBlbmQgcmV0dXJuKHNlbGYuaGl0Ym94ZXNbZS5jaGFyTmFtZV1+PW5pbCBhbmQgc2VsZi5oaXRib3hlc1tlLmNoYXJOYW1lXX49MClhbmQgc2VsZi5oaXRib3hlc1tlLmNoYXJOYW1lXW9yIDY1IGVuZCBmdW5jdGlvbiBWUHJlZGljdGlvbjpHZXRQcm9qZWN0aWxlU3BlZWQoZSlyZXR1cm4gc2VsZi5wcm9qZWN0aWxlc3BlZWRzW2UuY2hhck5hbWVdYW5kIHNlbGYucHJvamVjdGlsZXNwZWVkc1tlLmNoYXJOYW1lXW9yIG1hdGguaHVnZSBlbmQgZnVuY3Rpb24gVlByZWRpY3Rpb246Q2FsY0RhbWFnZU9mQXR0YWNrKG4sdCxvLGUpbG9jYWwgYT1uLmFybW9yUGVuUGVyY2VudCBsb2NhbCByPW4uYXJtb3JQZW4gbG9jYWwgaT1uLnRvdGFsRGFtYWdlKyhlIG9yIDApbG9jYWwgZT1vLm5hbWU6ZmluZCgiQ3JpdEF0dGFjayIpYW5kIDIgb3IgMSBpZiBuLnR5cGU9PSJvYmpfQUlfTWluaW9uInRoZW4gYT0xIGVsc2VpZiBuLnR5cGU9PSJvYmpfQUlfVHVycmV0InRoZW4gYT0uNyBlbmQgaWYgdC50eXBlPT0ib2JqX0FJX1R1cnJldCJ0aGVuIGE9MSByPTAgZT0xIGVuZCBsb2NhbCBhPSh0LmFybW9yKmEpLXIgaWYgYTwwIHRoZW4gZT0xKmUgZWxzZSBlPTEwMC8oMTAwK2EpKmUgZW5kIGlmIG4udHlwZT09bXlIZXJvLnR5cGUgYW5kIHQudHlwZT09Im9ial9BSV9UdXJyZXQidGhlbiBpPW1hdGgubWF4KG4udG90YWxEYW1hZ2Usbi5kYW1hZ2UrLjQqbi5hcCllbmQgaWYgbi50eXBlPT0ib2JqX0FJX01pbmlvbiJhbmQgdC50eXBlPT1teUhlcm8udHlwZSBhbmQgbi50ZWFtfj1URUFNX05FVVRSQUwgdGhlbiBlPS42KmUgZW5kIGlmIG4udHlwZT09bXlIZXJvLnR5cGUgYW5kIHQudHlwZT09Im9ial9BSV9UdXJyZXQidGhlbiBlPS45NSplIGVuZCBpZiBuLnR5cGU9PSJvYmpfQUlfTWluaW9uImFuZCB0LnR5cGU9PSJvYmpfQUlfVHVycmV0InRoZW4gZT0uNDc1KmUgZW5kIGlmIG4udHlwZT09Im9ial9BSV9UdXJyZXQiYW5kKHQuY2hhck5hbWU9PSJSZWRfTWluaW9uX01lY2hDYW5ub24ib3IgdC5jaGFyTmFtZT09IkJsdWVfTWluaW9uX01lY2hDYW5ub24iKXRoZW4gZT0uOCplIGVuZCBpZiBuLnR5cGU9PSJvYmpfQUlfVHVycmV0ImFuZCh0LmNoYXJOYW1lPT0iUmVkX01pbmlvbl9XaXphcmQib3IgdC5jaGFyTmFtZT09IkJsdWVfTWluaW9uX1dpemFyZCJvciB0LmNoYXJOYW1lPT0iUmVkX01pbmlvbl9CYXNpYyJvciB0LmNoYXJOYW1lPT0iQmx1ZV9NaW5pb25fQmFzaWMiKXRoZW4gZT0oMS8uODc1KSplIGVuZCBpZiBuLnR5cGU9PSJvYmpfQUlfVHVycmV0InRoZW4gZT0xLjA1KmUgZW5kIHJldHVybiBlKmkgZW5k"), nil, "bt", _ENV))()

-- Copy
