
function OnLoad()ScriptUpdate(1.31,'/b1nk/boL/master/version/VPrediction.version','/b1nk/boL/master/common/VPrediction.lua',LIB_PATH..'VPrediction.lua','<font color="#6699ff"><b>VPrediction TEMP FIX:</b></font> <font color="#FFFFFF">You have got the latest version</font>','<font color="#6699ff"><b>VPrediction TEMP FIX:</b></font> <font color="#FFFFFF">New version available, updating...</font>','<font color="#6699ff"><b>VPrediction TEMP FIX:</b></font> <font color="#FFFFFF">Successfully updated, press F9 twice to load the updated version</font>')end local m,e,c=1,2,3 class'VPrediction'function VPrediction:__init()self.version=tonumber(version)self.showdevmode=false self.hitboxes={['Braum']=80,['RecItemsCLASSIC']=65,['TeemoMushroom']=50,['TestCubeRender']=65,['Xerath']=65,['Kassadin']=65,['Rengar']=65,['Thresh']=55,['RecItemsTUTORIAL']=65,['Ziggs']=55,['ZyraPassive']=20,['ZyraThornPlant']=20,['KogMaw']=65,['HeimerTBlue']=35,['EliseSpider']=65,['Skarner']=80,['ChaosNexus']=65,['Katarina']=65,['Riven']=65,['SightWard']=1,['HeimerTYellow']=35,['Ashe']=65,['VisionWard']=1,['TT_NGolem2']=80,['ThreshLantern']=65,['RecItemsCLASSICMap10']=65,['RecItemsODIN']=65,['TT_Spiderboss']=200,['RecItemsARAM']=65,['OrderNexus']=65,['Soraka']=65,['Jinx']=65,['TestCubeRenderwCollision']=65,['Red_Minion_Wizard']=48,['JarvanIV']=65,['Blue_Minion_Wizard']=48,['TT_ChaosTurret2']=88.4,['TT_ChaosTurret3']=88.4,['TT_ChaosTurret1']=88.4,['ChaosTurretGiant']=88.4,['Dragon']=100,['LuluSnowman']=50,['Worm']=100,['ChaosTurretWorm']=88.4,['TT_ChaosInhibitor']=65,['ChaosTurretNormal']=88.4,['AncientGolem']=100,['ZyraGraspingPlant']=20,['HA_AP_OrderTurret3']=88.4,['HA_AP_OrderTurret2']=88.4,['Tryndamere']=65,['OrderTurretNormal2']=88.4,['Singed']=65,['OrderInhibitor']=65,['Diana']=65,['HA_FB_HealthRelic']=65,['TT_OrderInhibitor']=65,['GreatWraith']=80,['Yasuo']=65,['OrderTurretDragon']=88.4,['OrderTurretNormal']=88.4,['LizardElder']=65,['HA_AP_ChaosTurret']=88.4,['Ahri']=65,['Lulu']=65,['ChaosInhibitor']=65,['HA_AP_ChaosTurret3']=88.4,['HA_AP_ChaosTurret2']=88.4,['ChaosTurretWorm2']=88.4,['TT_OrderTurret1']=88.4,['TT_OrderTurret2']=88.4,['TT_OrderTurret3']=88.4,['LuluFaerie']=65,['HA_AP_OrderTurret']=88.4,['OrderTurretAngel']=88.4,['YellowTrinketUpgrade']=1,['MasterYi']=65,['Lissandra']=65,['ARAMOrderTurretNexus']=88.4,['Draven']=65,['FiddleSticks']=65,['SmallGolem']=80,['ARAMOrderTurretFront']=88.4,['ChaosTurretTutorial']=88.4,['NasusUlt']=80,['Maokai']=80,['Wraith']=50,['Wolf']=50,['Sivir']=65,['Corki']=65,['Janna']=65,['Nasus']=80,['Golem']=80,['ARAMChaosTurretFront']=88.4,['ARAMOrderTurretInhib']=88.4,['LeeSin']=65,['HA_AP_ChaosTurretTutorial']=88.4,['GiantWolf']=65,['HA_AP_OrderTurretTutorial']=88.4,['YoungLizard']=50,['Jax']=65,['LesserWraith']=50,['Blitzcrank']=80,['brush_D_SR']=65,['brush_E_SR']=65,['brush_F_SR']=65,['brush_C_SR']=65,['brush_A_SR']=65,['brush_B_SR']=65,['ARAMChaosTurretInhib']=88.4,['Shen']=65,['Nocturne']=65,['Sona']=65,['ARAMChaosTurretNexus']=88.4,['YellowTrinket']=1,['OrderTurretTutorial']=88.4,['Caitlyn']=65,['Trundle']=65,['Malphite']=80,['Mordekaiser']=80,['ZyraSeed']=65,['Vi']=50,['Tutorial_Red_Minion_Wizard']=48,['Renekton']=80,['Anivia']=65,['Fizz']=65,['Heimerdinger']=55,['Evelynn']=65,['Rumble']=80,['Leblanc']=65,['Darius']=80,['OlafAxe']=50,['Viktor']=65,['XinZhao']=65,['Orianna']=65,['Vladimir']=65,['Nidalee']=65,['Tutorial_Red_Minion_Basic']=48,['ZedShadow']=65,['Syndra']=65,['Zac']=80,['Olaf']=65,['Veigar']=55,['Twitch']=65,['Alistar']=80,['Akali']=65,['Urgot']=80,['Leona']=65,['Talon']=65,['Karma']=65,['Jayce']=65,['Galio']=80,['Shaco']=65,['Taric']=65,['TwistedFate']=65,['Varus']=65,['Garen']=65,['Swain']=65,['Vayne']=65,['Fiora']=65,['Quinn']=65,['Kayle']=65,['Blue_Minion_Basic']=48,['Brand']=65,['Teemo']=55,['Amumu']=55,['Annie']=55,['Odin_Blue_Minion_caster']=48,['Elise']=65,['Nami']=65,['Poppy']=55,['AniviaEgg']=65,['Tristana']=55,['Graves']=65,['Morgana']=65,['Gragas']=80,['MissFortune']=65,['Warwick']=65,['Cassiopeia']=65,['Tutorial_Blue_Minion_Wizard']=48,['DrMundo']=80,['Volibear']=80,['Irelia']=65,['Odin_Red_Minion_Caster']=48,['Lucian']=65,['Yorick']=80,['RammusPB']=65,['Red_Minion_Basic']=48,['Udyr']=65,['MonkeyKing']=65,['Tutorial_Blue_Minion_Basic']=48,['Kennen']=55,['Nunu']=65,['Ryze']=65,['Zed']=65,['Nautilus']=80,['Gangplank']=65,['shopevo']=65,['Lux']=65,['Sejuani']=80,['Ezreal']=65,['OdinNeutralGuardian']=65,['Khazix']=65,['Sion']=80,['Aatrox']=65,['Hecarim']=80,['Pantheon']=65,['Shyvana']=50,['Zyra']=65,['Karthus']=65,['Rammus']=65,['Zilean']=65,['Chogath']=80,['Malzahar']=65,['YorickRavenousGhoul']=1,['YorickSpectralGhoul']=1,['JinxMine']=65,['YorickDecayedGhoul']=1,['XerathArcaneBarrageLauncher']=65,['Odin_SOG_Order_Crystal']=65,['TestCube']=65,['ShyvanaDragon']=80,['FizzBait']=65,['ShopKeeper']=65,['Blue_Minion_MechMelee']=65,['OdinQuestBuff']=65,['TT_Buffplat_L']=65,['TT_Buffplat_R']=65,['KogMawDead']=65,['TempMovableChar']=48,['Lizard']=50,['GolemOdin']=80,['OdinOpeningBarrier']=65,['TT_ChaosTurret4']=88.4,['TT_Flytrap_A']=65,['TT_Chains_Order_Periph']=65,['TT_NWolf']=65,['ShopMale']=65,['OdinShieldRelic']=65,['TT_Chains_Xaos_Base']=65,['LuluSquill']=50,['TT_Shopkeeper']=65,['redDragon']=100,['MonkeyKingClone']=65,['Odin_skeleton']=65,['OdinChaosTurretShrine']=88.4,['Cassiopeia_Death']=65,['OdinCenterRelic']=48,['Ezreal_cyber_1']=65,['Ezreal_cyber_3']=65,['Ezreal_cyber_2']=65,['OdinRedSuperminion']=55,['TT_Speedshrine_Gears']=65,['JarvanIVWall']=65,['DestroyedNexus']=65,['ARAMOrderNexus']=65,['Red_Minion_MechCannon']=65,['OdinBlueSuperminion']=55,['SyndraOrbs']=65,['LuluKitty']=50,['SwainNoBird']=65,['LuluLadybug']=50,['CaitlynTrap']=65,['TT_Shroom_A']=65,['ARAMChaosTurretShrine']=88.4,['Odin_Windmill_Propellers']=65,['DestroyedInhibitor']=65,['TT_NWolf2']=50,['OdinMinionGraveyardPortal']=1,['SwainBeam']=65,['Summoner_Rider_Order']=65,['TT_Relic']=65,['odin_lifts_crystal']=65,['OdinOrderTurretShrine']=88.4,['SpellBook1']=65,['Blue_Minion_MechCannon']=65,['TT_ChaosInhibitor_D']=65,['Odin_SoG_Chaos']=65,['TrundleWall']=65,['HA_AP_HealthRelic']=65,['OrderTurretShrine']=88.4,['OriannaBall']=48,['ChaosTurretShrine']=88.4,['LuluCupcake']=50,['HA_AP_ChaosTurretShrine']=88.4,['TT_Chains_Bot_Lane']=65,['TT_NWraith2']=50,['TT_Tree_A']=65,['SummonerBeacon']=65,['Odin_Drill']=65,['TT_NGolem']=80,['Shop']=65,['AramSpeedShrine']=65,['DestroyedTower']=65,['OriannaNoBall']=65,['Odin_Minecart']=65,['Summoner_Rider_Chaos']=65,['OdinSpeedShrine']=65,['TT_Brazier']=65,['TT_SpeedShrine']=65,['odin_lifts_buckets']=65,['OdinRockSaw']=65,['OdinMinionSpawnPortal']=1,['SyndraSphere']=48,['TT_Nexus_Gears']=65,['Red_Minion_MechMelee']=65,['SwainRaven']=65,['crystal_platform']=65,['MaokaiSproutling']=48,['Urf']=65,['TestCubeRender10Vision']=65,['MalzaharVoidling']=10,['GhostWard']=1,['MonkeyKingFlying']=65,['LuluPig']=50,['AniviaIceBlock']=65,['TT_OrderInhibitor_D']=65,['yonkey']=65,['Odin_SoG_Order']=65,['RammusDBC']=65,['FizzShark']=65,['LuluDragon']=50,['OdinTestCubeRender']=65,['OdinCrane']=65,['TT_Tree1']=65,['ARAMOrderTurretShrine']=88.4,['TT_Chains_Order_Base']=65,['Odin_Windmill_Gears']=65,['ARAMChaosNexus']=65,['TT_NWraith']=50,['TT_OrderTurret4']=88.4,['Odin_SOG_Chaos_Crystal']=65,['TT_SpiderLayer_Web']=65,['OdinQuestIndicator']=1,['JarvanIVStandard']=65,['TT_DummyPusher']=65,['OdinClaw']=65,['EliseSpiderling']=1,['QuinnValor']=65,['UdyrTigerUlt']=65,['UdyrTurtleUlt']=65,['UdyrUlt']=65,['UdyrPhoenixUlt']=65,['ShacoBox']=10,['HA_AP_Poro']=65,['AnnieTibbers']=80,['UdyrPhoenix']=65,['UdyrTurtle']=65,['UdyrTiger']=65,['HA_AP_OrderShrineTurret']=88.4,['HA_AP_OrderTurretRubble']=65,['HA_AP_Chains_Long']=65,['HA_AP_OrderCloth']=65,['HA_AP_PeriphBridge']=65,['HA_AP_BridgeLaneStatue']=65,['HA_AP_ChaosTurretRubble']=88.4,['HA_AP_BannerMidBridge']=65,['HA_AP_PoroSpawner']=50,['HA_AP_Cutaway']=65,['HA_AP_Chains']=65,['HA_AP_ShpSouth']=65,['HA_AP_HeroTower']=65,['HA_AP_ShpNorth']=65,['ChaosInhibitor_D']=65,['ZacRebirthBloblet']=65,['OrderInhibitor_D']=65,['Nidalee_Spear']=65,['Nidalee_Cougar']=65,['TT_Buffplat_Chain']=65,['WriggleLantern']=1,['TwistedLizardElder']=65,['RabidWolf']=65,['HeimerTGreen']=50,['HeimerTRed']=50,['ViktorFF']=65,['TwistedGolem']=80,['TwistedSmallWolf']=50,['TwistedGiantWolf']=65,['TwistedTinyWraith']=50,['TwistedBlueWraith']=50,['TwistedYoungLizard']=50,['Red_Minion_Melee']=48,['Blue_Minion_Melee']=48,['Blue_Minion_Healer']=48,['Ghast']=60,['blueDragon']=100,['Red_Minion_MechRange']=65,['Test_CubeSphere']=65,}self.projectilespeeds={["Velkoz"]=2e3,["TeemoMushroom"]=math.huge,["TestCubeRender"]=math.huge,["Xerath"]=2e3,["Kassadin"]=math.huge,["Rengar"]=math.huge,["Thresh"]=1e3,["Ziggs"]=1500,["ZyraPassive"]=1500,["ZyraThornPlant"]=1500,["KogMaw"]=1800,["HeimerTBlue"]=1599.3999,["EliseSpider"]=500,["Skarner"]=500,["ChaosNexus"]=500,["Katarina"]=467,["Riven"]=347.79999,["SightWard"]=347.79999,["HeimerTYellow"]=1599.3999,["Ashe"]=2e3,["VisionWard"]=2e3,["TT_NGolem2"]=math.huge,["ThreshLantern"]=math.huge,["TT_Spiderboss"]=math.huge,["OrderNexus"]=math.huge,["Soraka"]=1e3,["Jinx"]=2750,["TestCubeRenderwCollision"]=2750,["Red_Minion_Wizard"]=650,["JarvanIV"]=20,["Blue_Minion_Wizard"]=650,["TT_ChaosTurret2"]=1200,["TT_ChaosTurret3"]=1200,["TT_ChaosTurret1"]=1200,["ChaosTurretGiant"]=1200,["Dragon"]=1200,["LuluSnowman"]=1200,["Worm"]=1200,["ChaosTurretWorm"]=1200,["TT_ChaosInhibitor"]=1200,["ChaosTurretNormal"]=1200,["AncientGolem"]=500,["ZyraGraspingPlant"]=500,["HA_AP_OrderTurret3"]=1200,["HA_AP_OrderTurret2"]=1200,["Tryndamere"]=347.79999,["OrderTurretNormal2"]=1200,["Singed"]=700,["OrderInhibitor"]=700,["Diana"]=347.79999,["HA_FB_HealthRelic"]=347.79999,["TT_OrderInhibitor"]=347.79999,["GreatWraith"]=750,["Yasuo"]=347.79999,["OrderTurretDragon"]=1200,["OrderTurretNormal"]=1200,["LizardElder"]=500,["HA_AP_ChaosTurret"]=1200,["Ahri"]=1750,["Lulu"]=1450,["ChaosInhibitor"]=1450,["HA_AP_ChaosTurret3"]=1200,["HA_AP_ChaosTurret2"]=1200,["ChaosTurretWorm2"]=1200,["TT_OrderTurret1"]=1200,["TT_OrderTurret2"]=1200,["TT_OrderTurret3"]=1200,["LuluFaerie"]=1200,["HA_AP_OrderTurret"]=1200,["OrderTurretAngel"]=1200,["YellowTrinketUpgrade"]=1200,["MasterYi"]=math.huge,["Lissandra"]=2e3,["ARAMOrderTurretNexus"]=1200,["Draven"]=1700,["FiddleSticks"]=1750,["SmallGolem"]=math.huge,["ARAMOrderTurretFront"]=1200,["ChaosTurretTutorial"]=1200,["NasusUlt"]=1200,["Maokai"]=math.huge,["Wraith"]=750,["Wolf"]=math.huge,["Sivir"]=1750,["Corki"]=2e3,["Janna"]=1200,["Nasus"]=math.huge,["Golem"]=math.huge,["ARAMChaosTurretFront"]=1200,["ARAMOrderTurretInhib"]=1200,["LeeSin"]=math.huge,["HA_AP_ChaosTurretTutorial"]=1200,["GiantWolf"]=math.huge,["HA_AP_OrderTurretTutorial"]=1200,["YoungLizard"]=750,["Jax"]=400,["LesserWraith"]=math.huge,["Blitzcrank"]=math.huge,["ARAMChaosTurretInhib"]=1200,["Shen"]=400,["Nocturne"]=math.huge,["Sona"]=1500,["ARAMChaosTurretNexus"]=1200,["YellowTrinket"]=1200,["OrderTurretTutorial"]=1200,["Caitlyn"]=2500,["Trundle"]=347.79999,["Malphite"]=1e3,["Mordekaiser"]=math.huge,["ZyraSeed"]=math.huge,["Vi"]=1e3,["Tutorial_Red_Minion_Wizard"]=650,["Renekton"]=math.huge,["Anivia"]=1400,["Fizz"]=math.huge,["Heimerdinger"]=1500,["Evelynn"]=467,["Rumble"]=347.79999,["Leblanc"]=1700,["Darius"]=math.huge,["OlafAxe"]=math.huge,["Viktor"]=2300,["XinZhao"]=20,["Orianna"]=1450,["Vladimir"]=1400,["Nidalee"]=1750,["Tutorial_Red_Minion_Basic"]=math.huge,["ZedShadow"]=467,["Syndra"]=1800,["Zac"]=1e3,["Olaf"]=347.79999,["Veigar"]=1100,["Twitch"]=2500,["Alistar"]=math.huge,["Akali"]=467,["Urgot"]=1300,["Leona"]=347.79999,["Talon"]=math.huge,["Karma"]=1500,["Jayce"]=347.79999,["Galio"]=1e3,["Shaco"]=math.huge,["Taric"]=math.huge,["TwistedFate"]=1500,["Varus"]=2e3,["Garen"]=347.79999,["Swain"]=1600,["Vayne"]=2e3,["Fiora"]=467,["Quinn"]=2e3,["Kayle"]=math.huge,["Blue_Minion_Basic"]=math.huge,["Brand"]=2e3,["Teemo"]=1300,["Amumu"]=500,["Annie"]=1200,["Odin_Blue_Minion_caster"]=1200,["Elise"]=1600,["Nami"]=1500,["Poppy"]=500,["AniviaEgg"]=500,["Tristana"]=2250,["Graves"]=3e3,["Morgana"]=1600,["Gragas"]=math.huge,["MissFortune"]=2e3,["Warwick"]=math.huge,["Cassiopeia"]=1200,["Tutorial_Blue_Minion_Wizard"]=650,["DrMundo"]=math.huge,["Volibear"]=467,["Irelia"]=467,["Odin_Red_Minion_Caster"]=650,["Lucian"]=2800,["Yorick"]=math.huge,["RammusPB"]=math.huge,["Red_Minion_Basic"]=math.huge,["Udyr"]=467,["MonkeyKing"]=20,["Tutorial_Blue_Minion_Basic"]=math.huge,["Kennen"]=1600,["Nunu"]=500,["Ryze"]=2400,["Zed"]=467,["Nautilus"]=1e3,["Gangplank"]=1e3,["Lux"]=1600,["Sejuani"]=500,["Ezreal"]=2e3,["OdinNeutralGuardian"]=1800,["Khazix"]=500,["Sion"]=math.huge,["Aatrox"]=347.79999,["Hecarim"]=500,["Pantheon"]=20,["Shyvana"]=467,["Zyra"]=1700,["Karthus"]=1200,["Rammus"]=math.huge,["Zilean"]=1200,["Chogath"]=500,["Malzahar"]=2e3,["YorickRavenousGhoul"]=347.79999,["YorickSpectralGhoul"]=347.79999,["JinxMine"]=347.79999,["YorickDecayedGhoul"]=347.79999,["XerathArcaneBarrageLauncher"]=347.79999,["Odin_SOG_Order_Crystal"]=347.79999,["TestCube"]=347.79999,["ShyvanaDragon"]=math.huge,["FizzBait"]=math.huge,["Blue_Minion_MechMelee"]=math.huge,["OdinQuestBuff"]=math.huge,["TT_Buffplat_L"]=math.huge,["TT_Buffplat_R"]=math.huge,["KogMawDead"]=math.huge,["TempMovableChar"]=math.huge,["Lizard"]=500,["GolemOdin"]=math.huge,["OdinOpeningBarrier"]=math.huge,["TT_ChaosTurret4"]=500,["TT_Flytrap_A"]=500,["TT_NWolf"]=math.huge,["OdinShieldRelic"]=math.huge,["LuluSquill"]=math.huge,["redDragon"]=math.huge,["MonkeyKingClone"]=math.huge,["Odin_skeleton"]=math.huge,["OdinChaosTurretShrine"]=500,["Cassiopeia_Death"]=500,["OdinCenterRelic"]=500,["OdinRedSuperminion"]=math.huge,["JarvanIVWall"]=math.huge,["ARAMOrderNexus"]=math.huge,["Red_Minion_MechCannon"]=1200,["OdinBlueSuperminion"]=math.huge,["SyndraOrbs"]=math.huge,["LuluKitty"]=math.huge,["SwainNoBird"]=math.huge,["LuluLadybug"]=math.huge,["CaitlynTrap"]=math.huge,["TT_Shroom_A"]=math.huge,["ARAMChaosTurretShrine"]=500,["Odin_Windmill_Propellers"]=500,["TT_NWolf2"]=math.huge,["OdinMinionGraveyardPortal"]=math.huge,["SwainBeam"]=math.huge,["Summoner_Rider_Order"]=math.huge,["TT_Relic"]=math.huge,["odin_lifts_crystal"]=math.huge,["OdinOrderTurretShrine"]=500,["SpellBook1"]=500,["Blue_Minion_MechCannon"]=1200,["TT_ChaosInhibitor_D"]=1200,["Odin_SoG_Chaos"]=1200,["TrundleWall"]=1200,["HA_AP_HealthRelic"]=1200,["OrderTurretShrine"]=500,["OriannaBall"]=500,["ChaosTurretShrine"]=500,["LuluCupcake"]=500,["HA_AP_ChaosTurretShrine"]=500,["TT_NWraith2"]=750,["TT_Tree_A"]=750,["SummonerBeacon"]=750,["Odin_Drill"]=750,["TT_NGolem"]=math.huge,["AramSpeedShrine"]=math.huge,["OriannaNoBall"]=math.huge,["Odin_Minecart"]=math.huge,["Summoner_Rider_Chaos"]=math.huge,["OdinSpeedShrine"]=math.huge,["TT_SpeedShrine"]=math.huge,["odin_lifts_buckets"]=math.huge,["OdinRockSaw"]=math.huge,["OdinMinionSpawnPortal"]=math.huge,["SyndraSphere"]=math.huge,["Red_Minion_MechMelee"]=math.huge,["SwainRaven"]=math.huge,["crystal_platform"]=math.huge,["MaokaiSproutling"]=math.huge,["Urf"]=math.huge,["TestCubeRender10Vision"]=math.huge,["MalzaharVoidling"]=500,["GhostWard"]=500,["MonkeyKingFlying"]=500,["LuluPig"]=500,["AniviaIceBlock"]=500,["TT_OrderInhibitor_D"]=500,["Odin_SoG_Order"]=500,["RammusDBC"]=500,["FizzShark"]=500,["LuluDragon"]=500,["OdinTestCubeRender"]=500,["TT_Tree1"]=500,["ARAMOrderTurretShrine"]=500,["Odin_Windmill_Gears"]=500,["ARAMChaosNexus"]=500,["TT_NWraith"]=750,["TT_OrderTurret4"]=500,["Odin_SOG_Chaos_Crystal"]=500,["OdinQuestIndicator"]=500,["JarvanIVStandard"]=500,["TT_DummyPusher"]=500,["OdinClaw"]=500,["EliseSpiderling"]=2e3,["QuinnValor"]=math.huge,["UdyrTigerUlt"]=math.huge,["UdyrTurtleUlt"]=math.huge,["UdyrUlt"]=math.huge,["UdyrPhoenixUlt"]=math.huge,["ShacoBox"]=1500,["HA_AP_Poro"]=1500,["AnnieTibbers"]=math.huge,["UdyrPhoenix"]=math.huge,["UdyrTurtle"]=math.huge,["UdyrTiger"]=math.huge,["HA_AP_OrderShrineTurret"]=500,["HA_AP_Chains_Long"]=500,["HA_AP_BridgeLaneStatue"]=500,["HA_AP_ChaosTurretRubble"]=500,["HA_AP_PoroSpawner"]=500,["HA_AP_Cutaway"]=500,["HA_AP_Chains"]=500,["ChaosInhibitor_D"]=500,["ZacRebirthBloblet"]=500,["OrderInhibitor_D"]=500,["Nidalee_Spear"]=500,["Nidalee_Cougar"]=500,["TT_Buffplat_Chain"]=500,["WriggleLantern"]=500,["TwistedLizardElder"]=500,["RabidWolf"]=math.huge,["HeimerTGreen"]=1599.3999,["HeimerTRed"]=1599.3999,["ViktorFF"]=1599.3999,["TwistedGolem"]=math.huge,["TwistedSmallWolf"]=math.huge,["TwistedGiantWolf"]=math.huge,["TwistedTinyWraith"]=750,["TwistedBlueWraith"]=750,["TwistedYoungLizard"]=750,["Red_Minion_Melee"]=math.huge,["Blue_Minion_Melee"]=math.huge,["Blue_Minion_Healer"]=1e3,["Ghast"]=750,["blueDragon"]=800,["Red_Minion_MechRange"]=3e3,}self.ActiveAttacks={}self.MinionsAttacks={}if not _G.VPredictionMenu then _G.VPredictionMenu=scriptConfig("[ VP预判修复汉化版 ]by B1nk","VPrediction")_G.VPredictionMenu:addParam("Mode"," │  释放模式  │ ",SCRIPT_PARAM_LIST,1,{"快","中","慢"})_G.VPredictionMenu:addSubMenu(" ☆☆━━━━━╮ ","info")_G.VPredictionMenu:addSubMenu(" │  碰撞选项  │ ","Collision")_G.VPredictionMenu.Collision:addParam("Buffer","--> │碰撞缓冲 ",SCRIPT_PARAM_SLICE,30,0,100)_G.VPredictionMenu.Collision:addParam("Minions","--> │正常小兵 ",SCRIPT_PARAM_ONOFF,true)_G.VPredictionMenu.Collision:addParam("Mobs","--> │野区小兵 ",SCRIPT_PARAM_ONOFF,true)_G.VPredictionMenu.Collision:addParam("Others","--> │其他 ",SCRIPT_PARAM_ONOFF,true)_G.VPredictionMenu.Collision:addParam("CHealth","--> │检测即将死去的小兵 (测试) ",SCRIPT_PARAM_ONOFF,false)_G.VPredictionMenu.Collision:addParam("info","--> │            会导致Fps下降 ",SCRIPT_PARAM_INFO,"")_G.VPredictionMenu.Collision:addParam("UnitPos","--> │检查单位碰撞 ",SCRIPT_PARAM_ONOFF,true)_G.VPredictionMenu.Collision:addParam("CastPos","--> │检查释放碰撞 ",SCRIPT_PARAM_ONOFF,true)_G.VPredictionMenu.Collision:addParam("PredictPos","--> │检查预判碰撞 ",SCRIPT_PARAM_ONOFF,false)_G.VPredictionMenu:addSubMenu(" │  其他选项  │ ","Developers")_G.VPredictionMenu.Developers:addParam("Debug","--> │启用调试 ",SCRIPT_PARAM_ONOFF,false)_G.VPredictionMenu.Developers:addParam("SC","--> │碰撞调试 ",SCRIPT_PARAM_ONOFF,false)_G.VPredictionMenu:addParam("Version"," │  脚本信息  │ ",SCRIPT_PARAM_INFO,tostring(self.version))_G.VPredictionMenu:addParam("about1"," │  脚本汉化  ☆ B1nk ",SCRIPT_PARAM_INFO,"")_G.VPredictionMenu:addParam("about2"," ╰━━━━━☆☆ ",SCRIPT_PARAM_INFO,"")end self.WaypointsTime=10 self.EnemyMinions=minionManager(MINION_ENEMY,2e3,myHero,MINION_SORT_HEALTH_ASC)self.JungleMinions=minionManager(MINION_JUNGLE,2e3,myHero,MINION_SORT_HEALTH_ASC)self.OtherMinions=minionManager(MINION_OTHER,2e3,myHero,MINION_SORT_HEALTH_ASC)self.TargetsVisible={}self.TargetsWaypoints={}self.TargetsImmobile={}self.TargetsDashing={}self.TargetsSlowed={}self.DontShoot={}self.DontShoot2={}self.DontShootUntilNewWaypoints={}if VIP_USER then WayPointManager.AddCallback(function(e)self:OnNewWayPoints(e)end)AdvancedCallback:bind("OnGainVision",function(e)self:OnGainVision(e)end)AdvancedCallback:bind("OnGainBuff",function(n,e)self:OnGainBuff(n,e)end)AdvancedCallback:bind("OnDash",function(e,n)self:OnDash(e,n)end)end AddProcessSpellCallback(function(e,n)self:OnProcessSpell(e,n)end)AddTickCallback(function()self:OnTick()end)AddDrawCallback(function()self:OnDraw()end)AddProcessSpellCallback(function(n,e)self:CollisionProcessSpell(n,e)end)self.BlackList={{name="aatroxq",duration=.75},}self.dashAboutToHappend={{name="ahritumble",duration=.25},{name="akalishadowdance",duration=.25},{name="headbutt",duration=.25},{name="caitlynentrapment",duration=.25},{name="carpetbomb",duration=.25},{name="dianateleport",duration=.25},{name="fizzpiercingstrike",duration=.25},{name="fizzjump",duration=.25},{name="gragasbodyslam",duration=.25},{name="gravesmove",duration=.25},{name="ireliagatotsu",duration=.25},{name="jarvanivdragonstrike",duration=.25},{name="jaxleapstrike",duration=.25},{name="khazixe",duration=.25},{name="leblancslide",duration=.25},{name="leblancslidem",duration=.25},{name="blindmonkqtwo",duration=.25},{name="blindmonkwone",duration=.25},{name="luciane",duration=.25},{name="maokaiunstablegrowth",duration=.25},{name="nocturneparanoia2",duration=.25},{name="pantheon_leapbash",duration=.25},{name="renektonsliceanddice",duration=.25},{name="riventricleave",duration=.25},{name="rivenfeint",duration=.25},{name="sejuaniarcticassault",duration=.25},{name="shenshadowdash",duration=.25},{name="shyvanatransformcast",duration=.25},{name="rocketjump",duration=.25},{name="slashcast",duration=.25},{name="vaynetumble",duration=.25},{name="viq",duration=.25},{name="monkeykingnimbus",duration=.25},{name="xenzhaosweep",duration=.25},{name="yasuodashwrapper",duration=.25},}self.spells={{name="katarinar",duration=1},{name="drain",duration=1},{name="crowstorm",duration=1},{name="consume",duration=.5},{name="absolutezero",duration=1},{name="rocketgrab",duration=.5},{name="staticfield",duration=.5},{name="cassiopeiapetrifyinggaze",duration=.5},{name="ezrealtrueshotbarrage",duration=1},{name="galioidolofdurand",duration=1},{name="luxmalicecannon",duration=1},{name="reapthewhirlwind",duration=1},{name="jinxw",duration=.6},{name="jinxr",duration=.6},{name="missfortunebullettime",duration=1},{name="shenstandunited",duration=1},{name="threshe",duration=.4},{name="threshrpenta",duration=.75},{name="infiniteduress",duration=1},{name="meditate",duration=1}}self.blinks={{name="ezrealarcaneshift",range=475,delay=.25,delay2=.8},{name="deceive",range=400,delay=.25,delay2=.8},{name="riftwalk",range=700,delay=.25,delay2=.8},{name="gate",range=5500,delay=1.5,delay2=1.5},{name="katarinae",range=math.huge,delay=.25,delay2=.8},{name="elisespideredescent",range=math.huge,delay=.25,delay2=.8},{name="elisespidere",range=math.huge,delay=.25,delay2=.8},}return self end function VPrediction:GetTime()return os.clock()end function VPrediction:GetVersion()return self.version end function VPrediction:OnGainVision(e)if e.type==myHero.type then self.TargetsVisible[e.networkID]=self:GetTime()end end function VPrediction:OnLoseVision(e)if e.type==myHero.type then self.TargetsVisible[e.networkID]=math.huge end end function VPrediction:OnGainBuff(n,e)if n.type==myHero.type and(e.type==BUFF_STUN or e.type==BUFF_ROOT or e.type==BUFF_KNOCKUP or e.type==BUFF_SUPPRESS)then self.TargetsImmobile[n.networkID]=self:GetTime()+e.duration elseif n.type==myHero.type and(e.type==BUFF_SLOW or e.type==BUFF_CHARM or e.type==BUFF_FEAR or e.type==BUFF_TAUNT)then self.TargetsSlowed[n.networkID]=self:GetTime()+e.duration end if n.type==myHero.type and(e.type==BUFF_KNOCKBACK)then self.DontShoot[n.networkID]=self:GetTime()+1 end end function VPrediction:OnDash(n,e)if n.type==myHero.type then e.endPos=e.target and e.target or e.endPos e.startT=self:GetTime()-GetLatency()/2e3 e.endT=e.startT+e.duration self.TargetsDashing[n.networkID]=e self.DontShootUntilNewWaypoints[n.networkID]=true end end function VPrediction:OnProcessSpell(e,n)if e and e.type==myHero.type then for i,t in ipairs(self.spells)do if n.name:lower()==t.name then self.TargetsImmobile[e.networkID]=self:GetTime()+t.duration return end end for i,t in ipairs(self.blinks)do local i=GetDistance(e,Vector(n.endPos))<t.range and Vector(n.endPos)or Vector(e)+t.range*(Vector(n.endPos)-Vector(e)):normalized()if n.name:lower()==t.name and not IsWall(D3DXVECTOR3(n.endPos.x,n.endPos.y,n.endPos.z))then self.TargetsDashing[e.networkID]={isblink=true,duration=t.delay,endT=self:GetTime()+t.delay,endT2=self:GetTime()+t.delay2,startPos=Vector(e),endPos=i}return end end for i,t in ipairs(self.BlackList)do if n.name:lower()==t.name then self.DontShoot[e.networkID]=self:GetTime()+t.duration return end end for i,t in ipairs(self.dashAboutToHappend)do if n.name:lower()==t.name then self.DontShoot2[e.networkID]=self:GetTime()+t.duration return end end end end function VPrediction:OnNewWayPoints(t)local n=objManager:GetObjectByNetworkId(t)if n and n.valid and n.networkID and n.type==myHero.type then self.DontShootUntilNewWaypoints[t]=false if self.TargetsWaypoints[t]==nil then self.TargetsWaypoints[t]={}end local e=WayPointManager:GetWayPoints(n)if e and#e>=1 then table.insert(self.TargetsWaypoints[t],{unitpos=Vector(n),waypoint=e[#e],time=self:GetTime(),n=#e})end elseif n and n.valid and n.type~=myHero.type then local e=1 while e<=#self.ActiveAttacks do if(self.ActiveAttacks[e].Attacker and self.ActiveAttacks[e].Attacker.valid and self.ActiveAttacks[e].Attacker.networkID==t and(self.ActiveAttacks[e].starttime+self.ActiveAttacks[e].windUpTime-GetLatency()/2e3)>self:GetTime())then local n=WayPointManager:GetWayPoints(n)if#n>1 then table.remove(self.ActiveAttacks,e)else e=e+1 end else e=e+1 end end end end function VPrediction:IsImmobile(e,a,i,n,t,r)if self.TargetsImmobile[e.networkID]then local n=n==math.huge and 0 or(GetDistance(t,e)/n)if(self.TargetsImmobile[e.networkID]>(self:GetTime()+a+n)and r=="circular")then return true,Vector(e),Vector(e)+(i/3)*(Vector(t)-Vector(e)):normalized()elseif(self.TargetsImmobile[e.networkID]+(i/e.ms))>(self:GetTime()+a+n)then return true,Vector(e),Vector(e)end end return false,Vector(e),Vector(e)end function VPrediction:isSlowed(e,n,i,t)if self.TargetsSlowed[e.networkID]then if self.TargetsSlowed[e.networkID]>(self:GetTime()+n+GetDistance(e,t)/i)then return true end end return false end function VPrediction:IsDashing(l,i,s,o,d)local c=false local a=false local r if self.TargetsDashing[l.networkID]then local e=self.TargetsDashing[l.networkID]if e.endT>=self:GetTime()then c=true if e.isblink then if(e.endT-self:GetTime())<=(i+GetDistance(d,e.endPos)/o)then r=Vector(e.endPos.x,0,e.endPos.z)a=(l.ms*(i+GetDistance(d,e.endPos)/o-(e.endT2-self:GetTime())))<s end if((e.endT-self:GetTime())>=(i+GetDistance(d,e.startPos)/o))and not a then r=Vector(e.startPos.x,0,e.startPos.z)a=true end else local n,c,t,u,h=VectorMovementCollision(e.startPos,e.endPos,e.speed,d,o,(self:GetTime()-e.startT)+i)n,t=(n and 0<=n and n<=(e.endT-self:GetTime()-i))and n or nil,(t and 0<=t and t<=(e.endT-self:GetTime()-i))and t or nil local t=n and t and math.min(n,t)or n or t if t then r=t==n and Vector(c.x,0,c.y)or Vector(u.x,0,u.y)a=true else r=Vector(e.endPos.x,0,e.endPos.z)a=(l.ms*(i+GetDistance(d,r)/o-(e.endT-self:GetTime())))<s end end end end return c,a,r end function VPrediction:GetWaypoints(n,i,e)local t={}e=e and e or self:GetTime()if self.TargetsWaypoints[n]then for a,n in ipairs(self.TargetsWaypoints[n])do if i<=n.time and e>=n.time then table.insert(t,n)end end end return t,#t end function VPrediction:CountWaypoints(n,e,t)local n,e=self:GetWaypoints(n,e,t)return e end function VPrediction:GetWaypointsLength(e)local n=0 for t=1,#e-1 do n=n+GetDistance(e[t],e[t+1])end return n end function VPrediction:CutWaypoints(e,a)local n={}local t=a if a>0 then for i=1,#e-1 do local a,o=e[i],e[i+1]local r=GetDistance(a,o)if r>=t then n[1]=Vector(a)+t*(Vector(o)-Vector(a)):normalized()for a=i+1,#e do n[a-i+1]=e[a]end t=0 break else t=t-r end end else local t,i=e[1],e[2]n=e n[1]=Vector(t)-a*(Vector(i)-Vector(t)):normalized()end return n end function VPrediction:GetCurrentWayPoints(e)local n={}if not VIP_USER then if e.hasMovePath then table.insert(n,Vector(e.x,e.z))for t=e.pathIndex,e.pathCount do path=e:GetPath(t)table.insert(n,Vector(path.x,path.z))end else table.insert(n,e and Vector(e.x,e.z)or Vector(e.x,e.z))end return n else local n,r,i,a=WayPointManager:GetRawWayPoints(e),0,math.huge,nil if not n and not e then return{{x=e.x,y=e.z}}elseif not n and e then return{{x=e.x,y=e.z}}end for t=1,#n-1 do local n,o,o=VectorPointProjectionOnLineSegment(n[t],n[t+1],Vector(e))local e=GetDistanceSqr(n,e)if e<=i then a=n r=t i=e else break end end local e={a or{x=e.x,y=e.z}}for t=r+1,#n do e[#e+1]=n[t]end if#e==2 and GetDistanceSqr(e[1],e[2])<400 then e[2]=nil end return e end end function VPrediction:CalculateTargetPosition(e,a,n,r,n,n)if ValidTarget(e)and e.endPath or e==myHero then local n=(e.ms*((GetDistance(myHero.pos,e.pos)/r)+a))if e.pathCount<3 then local n=Vector(e)+(Vector(e.endPath)-Vector(e)):normalized()*(n)if GetDistance(e,n)>GetDistance(e,e.endPath)then return n,0,n elseif GetDistance(e,n)>1 then if GetDistance(e.endPath,e)>GetDistance(e,n)then return n,2,n else return n,0,n end end return Vector(e),2,Vector(e)else for t=e.pathIndex,e.pathCount do if e:GetPath(t)and e:GetPath(t-1)then local i,a=e:GetPath(t-1),e:GetPath(t)local t=GetDistance(i,a)if e:GetPath(e.pathIndex-1)then if n>t then n=n-t elseif(n+GetDistance(e,e:GetPath(e.pathIndex-1)))>t then n=(n+GetDistance(e,e:GetPath(e.pathIndex-1)))-t else if n<t then local e=Vector(i)+(Vector(a)-Vector(i)):normalized()*(n+GetDistance(e,e:GetPath(e.pathIndex-1)))return e,2,e else return v,0,v end end end end end n=(e.ms*((GetDistance(myHero.pos,e.pos)/r)+a))local e=Vector(e)+(Vector(e.endPath)-Vector(e)):normalized()*(n)return e,0,e end end end function VPrediction:MaxAngle(t,e,n)local i,n=self:GetWaypoints(t.networkID,n)local n=0 local t=(Vector(e.x,0,e.y)-Vector(t))for i,e in ipairs(i)do local e=Vector(0,0,0):angleBetween(t,Vector(e.waypoint.x,0,e.waypoint.y)-Vector(e.unitpos.x,0,e.unitpos.y))if e>n then n=e end end return n end function VPrediction:WayPointAnalysis(e,d,l,n,o,r,u)local i,t,n local T=self.TargetsWaypoints[e.networkID]and self.TargetsWaypoints[e.networkID]or{}local a=self:GetCurrentWayPoints(e)local h=self.TargetsVisible[e.networkID]and self.TargetsVisible[e.networkID]or self:GetTime()n=1 i,t=self:CalculateTargetPosition(e,d,l,o,r,u)if self:CountWaypoints(e.networkID,self:GetTime()-.1)>=1 or self:CountWaypoints(e.networkID,self:GetTime()-1)==1 then n=2 end local s=(_G.VPredictionMenu.Mode==c)and 3 or 2 local _=(_G.VPredictionMenu.Mode==c)and 1 or .5 if self:CountWaypoints(e.networkID,self:GetTime()-.75)>=s then local t=self:MaxAngle(e,a[#a],self:GetTime()-_)if t>90 then n=1 elseif t<30 and self:CountWaypoints(e.networkID,self:GetTime()-.1)>=1 then n=2 end end s=(_G.VPredictionMenu.Mode==c)and 2 or 1 if self:CountWaypoints(e.networkID,self:GetTime()-s)==0 then n=2 end if _G.VPredictionMenu.Mode==m then n=2 end if#a<=1 and self:GetTime()-h>1 then n=2 end if self:isSlowed(e,d,o,r)then n=2 end if i and t and((l/e.ms>=d+GetDistance(r,t)/o)or(l/e.ms>=d+GetDistance(r,i)/o))then n=3 end if Vector(r):angleBetween(Vector(e),Vector(t))>60 then n=1 end if not i or not t then n=0 t=Vector(a[#a].x,0,a[#a].y)i=t end if GetDistance(myHero,e)<250 then n=2 i,t=self:CalculateTargetPosition(e,d*.5,l,o*2,r,u)i=t end if#T==0 and(self:GetTime()-h)>3 then n=2 end if self.DontShootUntilNewWaypoints[e.networkID]then n=0 t=Vector(e.x,0,e.z)i=t end return t,n,i end function VPrediction:GetBestCastPosition(e,l,a,t,d,n,c,s)assert(e,"VPrediction: Target can't be nil")t=t and t-4 or math.huge a=a==0 and 1 or(a+self:GetHitBox(e))-4 d=d and d or math.huge n=n and n or Vector(myHero)if n.networkID and n.networkID==myHero.networkID then n=Vector(myHero)end local f=GetDistanceSqr(n,myHero)<50*50 and true or false l=l+(.07+GetLatency()/2e3)local r,o,i=Vector(e),Vector(e),0 local g,_,u=self:IsDashing(e,l,a,d,n)local T,h,m=self:IsImmobile(e,l,a,d,n,s)local p=self.TargetsVisible[e.networkID]and self.TargetsVisible[e.networkID]or self:GetTime()if e.type~=myHero.type then r,i,o=self:CalculateTargetPosition(e,l,a,d,n,s)else if self.DontShoot[e.networkID]and self.DontShoot[e.networkID]>self:GetTime()then r,o=Vector(e.x,e.y,e.z),Vector(e.x,e.y,e.z)i=0 elseif g then if _ then i=5 else i=0 end r,o=u,u elseif self.DontShoot2[e.networkID]and self.DontShoot2[e.networkID]>self:GetTime()then r,o=Vector(e.x,e.y,e.z),Vector(e.x,e.y,e.z)i=7 elseif T then r,o=h,m i=4 elseif not self.DontUseWayPoints then o,i,r=self:CalculateTargetPosition(e,l,a,d,n,s)end end if f then if(s=="line"and GetDistanceSqr(n,r)>=t*t)then i=0 end if(s=="circular"and(GetDistanceSqr(n,r)>=(t+a)^2))then i=0 end if self.ShotAtMaxRange and i~=0 and s=="circular"and(GetDistanceSqr(n,o)>t^2)then if GetDistanceSqr(n,r)<=(t+a/1.4)^2 then if GetDistanceSqr(n,r)<=t*t then o=r else o=Vector(n)+t*(Vector(r)-Vector(n)):normalized()end end elseif(GetDistanceSqr(n,o)>t^2)then i=0 end end a=a-self:GetHitBox(e)+4 if c and i>0 then self.EnemyMinions.range=t+500*(l+t/d)self.JungleMinions.range=self.EnemyMinions.range self.OtherMinions.range=self.EnemyMinions.range self.EnemyMinions:update()self.JungleMinions:update()self.OtherMinions:update()if c and _G.VPredictionMenu.Collision.UnitPos and self:CheckMinionCollision(e,e,l,a,t,d,n)then i=-1 elseif _G.VPredictionMenu.Collision.PredictPos and self:CheckMinionCollision(e,r,l,a,t,d,n)then i=-1 elseif _G.VPredictionMenu.Collision.CastPos and self:CheckMinionCollision(e,o,l,a,t,d,n)then i=-1 end end return o,i,r end function VPrediction:GetPredictedHealth(r,o,n)local i=0 local e=1 local t=0 local a=0 n=n and n or .07 while e<=#self.ActiveAttacks do if self.ActiveAttacks[e].Attacker and not self.ActiveAttacks[e].Attacker.dead and self.ActiveAttacks[e].Target and self.ActiveAttacks[e].Target.networkID==r.networkID then local r=self.ActiveAttacks[e].starttime+self.ActiveAttacks[e].windUpTime+(GetDistance(self.ActiveAttacks[e].pos,r))/self.ActiveAttacks[e].projectilespeed+n if self:GetTime()<r-n and r<self:GetTime()+o then i=i+self.ActiveAttacks[e].damage a=a+1 if self.ActiveAttacks[e].damage>t then t=self.ActiveAttacks[e].damage end end end e=e+1 end return r.health-i,t,a end function VPrediction:GetPredictedHealth2(a,r)local i=0 local e=1 while e<=#self.ActiveAttacks do local t=0 if(self:GetTime()-.1)<=self.ActiveAttacks[e].starttime+self.ActiveAttacks[e].animationTime and self.ActiveAttacks[e].Target and self.ActiveAttacks[e].Target.valid and self.ActiveAttacks[e].Target.networkID==a.networkID and self.ActiveAttacks[e].Attacker and self.ActiveAttacks[e].Attacker.valid and not self.ActiveAttacks[e].Attacker.dead then local n=self.ActiveAttacks[e].starttime local i=r+self:GetTime()while n<i do if n>=self:GetTime()and(n+(self.ActiveAttacks[e].windUpTime+GetDistance(a,self.ActiveAttacks[e].pos)/self.ActiveAttacks[e].projectilespeed))<i then t=t+1 end n=n+self.ActiveAttacks[e].animationTime end end i=i+t*self.ActiveAttacks[e].damage e=e+1 end return a.health-i end function VPrediction:CollisionProcessSpell(n,e)if n and n.valid and e.target and n.type~=myHero.type and e.target.type=='obj_AI_Minion'and n.team==myHero.team and e and e.name and(e.name:lower():find("attack")or(e.name=="frostarrow"))and e.windUpTime and e.target then if GetDistanceSqr(n)<4e6 then local i=self:GetTime()+e.windUpTime+GetDistance(e.target,n)/self:GetProjectileSpeed(n)-GetLatency()/2e3 local t=1 while t<=#self.ActiveAttacks do if(self.ActiveAttacks[t].Attacker and self.ActiveAttacks[t].Attacker.valid and self.ActiveAttacks[t].Attacker.networkID==n.networkID)or((self.ActiveAttacks[t].hittime+3)<self:GetTime())then table.remove(self.ActiveAttacks,t)else t=t+1 end end table.insert(self.ActiveAttacks,{Attacker=n,pos=Vector(n),Target=e.target,animationTime=e.animationTime,damage=self:CalcDamageOfAttack(n,e.target,e,0),hittime=i,starttime=self:GetTime()-GetLatency()/2e3,windUpTime=e.windUpTime,projectilespeed=self:GetProjectileSpeed(n)})end end end function VPrediction:CheckCol(d,e,o,n,a,t,r,i,l)if d.networkID==e.networkID then return false end if e.type~=myHero.type and _G.VPredictionMenu.Collision.CHealth and self:GetPredictedHealth(e,n+GetDistance(i,e)/r-GetLatency()/1e3)<0 then return false end local d=self:GetCurrentWayPoints(e)local n,r=e.pathCount==1 and Vector(e)or self:CalculateTargetPosition(e,n,a,r,i,"line")if GetDistanceSqr(i,n)<=(t)^2 and GetDistanceSqr(i,e)<=(t+100)^2 then local t=(e.pathCount>1)and _G.VPredictionMenu.Collision.Buffer or 8 if e.type==myHero.type then t=t+self:GetHitBox(e)end if l then DrawCircle3D(e.x,myHero.y,e.z,self:GetHitBox(e)+t,1,ARGB(255,255,255,255))DrawCircle3D(n.x,myHero.y,n.z,self:GetHitBox(e)+t,1,ARGB(255,255,255,255))self:DLine(n,e,Color)end if e.pathCount>1 then local r,o,i=VectorPointProjectionOnLineSegment(i,o,Vector(n))if i and(GetDistanceSqr(n,r)<=(self:GetHitBox(e)+a+t)^2)then return true end end local n,r,i=VectorPointProjectionOnLineSegment(i,o,Vector(e))if i and(GetDistanceSqr(e,n)<=(self:GetHitBox(e)+a+t)^2)then return true end end return false end function VPrediction:CheckMinionCollision(l,n,o,i,a,d,e,t,r)n=Vector(n)e=e and Vector(e)or myHero if r then self.EnemyMinions.range=a+500*(o+a/d)self.JungleMinions.range=self.EnemyMinions.range self.OtherMinions.range=self.EnemyMinions.range self.EnemyMinions:update()self.JungleMinions:update()self.OtherMinions:update()end local r=false if _G.VPredictionMenu.Collision.Minions then for c,s in ipairs(self.EnemyMinions.objects)do if self:CheckCol(l,s,n,o,i,a,d,e,t)then if not t then return true else r=true end end end end if _G.VPredictionMenu.Collision.Mobs then for c,s in ipairs(self.JungleMinions.objects)do if self:CheckCol(l,s,n,o,i,a,d,e,t)then if not t then return true else r=true end end end end if _G.VPredictionMenu.Collision.Others then for c,s in ipairs(self.OtherMinions.objects)do if s.team~=myHero.team and self:CheckCol(l,s,n,o,i,a,d,e,t)then if not t then return true else r=true end end end end if self.ChampionCollision then for c,s in ipairs(GetEnemyHeroes())do if self:CheckCol(l,s,n,o,i,a,d,e,t)then if not t then return true else r=true end end end end if t then local t=Vector(n-e):perpendicular():normalized()local a=r and ARGB(255,255,0,0)or ARGB(255,0,255,0)local d=Vector(e)+i*Vector(t)local o=Vector(e)-i*Vector(t)local l=Vector(e)+i*t-Vector(t):perpendicular()*GetDistance(e,n)local e=Vector(e)-i*t-Vector(t):perpendicular()*GetDistance(e,n)self:DLine(d,o,a)self:DLine(d,l,a)self:DLine(o,e,a)self:DLine(l,e,a)if not r and IsKeyDown(string.byte("T"))then CastSpell(_Q,n.x,n.z)end end return false end function VPrediction:GetCircularCastPosition(e,t,n,o,r,i,a)return self:GetBestCastPosition(e,t,n,o,r,i,a,"circular")end function VPrediction:GetLineCastPosition(a,i,e,n,t,r,o)return self:GetBestCastPosition(a,i,e,n,t,r,o,"line")end function VPrediction:GetPredictedPos(a,t,i,n,e)return self:GetBestCastPosition(a,t,1,math.huge,i,n,e,"circular")end function VPrediction:GetCircularAOECastPosition(r,u,i,t,s,o,d)local l,c,n=self:GetBestCastPosition(r,u,i,t,s,o,d,"circular")local e={}local T,h,m=l,c,n table.insert(e,n)for h,a in ipairs(GetEnemyHeroes())do if a.networkID~=r.networkID and ValidTarget(a,t*1.5)then l,c,n=self:GetBestCastPosition(a,u,i,t,s,o,d,"circular")if GetDistance(o,n)<(t+i)and(Hitchance~=-1 or not d)then table.insert(e,n)end end end while#e>1 do local n=MEC(e)local n=n:Compute()if n.radius<=i+self:GetHitBox(r)-8 then return n.center,h,#e end local n=-1 local t=0 for i=2,#e do local e=GetDistanceSqr(e[i],e[1])if e>n or n==-1 then t=i n=e end end table.remove(e,t)end return T,h,#e,m end function VPrediction:GetLineAOECastPosition(l,h,n,t,m,e)local s,d,r=self:GetBestCastPosition(l,h,n,t,m,e,false,"line")local a={}local i={}local T,u=s,d table.insert(i,{unit=l,HitChance=d,Position=r,CastPosition=s})table.insert(a,r)t=t and t-4 or 2e4 n=n==0 and 1 or(n+self:GetHitBox(l))-4 e=e and Vector(e)or Vector(myHero)local function o(t,a,e,i)local n=GetDistance(t,a)local n=(e*e-i*i+n*n)/(2*n)local i=math.sqrt(e*e-n*n);local e=(Vector(a)-Vector(t)):normalized()local n=Vector(t)+n*e local t=n+i*e:perpendicular()local e=n-i*e:perpendicular()return t,e end local function _(e,n,a,i)local t=(e+n)/2 local a,t=o(e,t,a,GetDistance(t,e))local a=(a-e)local t=(t-e)return e+i*(n-a-e):normalized(),e+i*(n-t-e):normalized()end local function c(r,a,e,n)local t=0 local i={}e=e+2 for o,n in ipairs(n)do local a,d,r=VectorPointProjectionOnLineSegment(r,a,n)if r and GetDistanceSqr(a,n)<=e*e then t=t+1 table.insert(i,n)elseif o==1 then return-1 end end return t,i end for c,o in ipairs(GetEnemyHeroes())do if o.networkID~=l.networkID and ValidTarget(o,t*1.5)then s,d,r=self:GetBestCastPosition(o,h,n,t,m,e,false,"line")if GetDistance(e,r)<(t+n)then table.insert(a,r)table.insert(i,{unit=o,HitChance=d,Position=r,CastPosition=s})end end end local r=1 local o if#a>1 then for i,d in ipairs(a)do local t,d=_(e,a[i],n-20,t)local i,l=c(e,t,n,a)local e,n=c(e,d,n,a)if i>=r then o=t r=i MaxHitPoints=l end if e>=r then o=d r=e MaxHitPoints=n end end end if r>1 then local d=-1 local a local o for n,t in ipairs(MaxHitPoints)do for i,n in ipairs(MaxHitPoints)do local i,e=Vector(e),(Vector(t)+Vector(n))/2 local l,r,l=VectorPointProjectionOnLineSegment(i,e,t)local i,e,i=VectorPointProjectionOnLineSegment(i,e,n)local e=GetDistanceSqr(t,r)+GetDistanceSqr(n,e)if e>=d then d=e a=t o=n end end end if self.ReturnHitTable then for t=#i,1,-1 do local r,a,e=VectorPointProjectionOnLineSegment(Vector(e),(a+o)/2,i[t].Position)if(not e)or(GetDistanceSqr(a,i[t].Position)>(n+5)^2)then table.remove(i,t)end end end return(a+o)/2,u,r,i else return T,u,1,i end end function VPrediction:GetConeAOECastPosition(o,d,t,e,r,n)e=e and e-4 or 2e4 radius=1 n=n and Vector(n)or Vector(myHero)t=(t<math.pi*2)and t or(t*math.pi/180)local l,s,a=self:GetBestCastPosition(o,d,radius,e,r,n,false,"line")local i={}local m,c=l,s table.insert(i,Vector(a)-Vector(n))local function h(i,a,e)local n=0 local t={}for r,e in ipairs(e)do local o=Vector(i):crossP(e)local i=Vector(e):crossP(a)if o.y>=0 and i.y>=0 then n=n+1 table.insert(t,e)elseif r==1 then return-1 end end return n,t end local function u(e,n,t)local i=Vector(e):normalized()local i=Vector(e):rotated(0,-n/2,0)local e=Vector(e):rotated(0,n/2,0)return h(i,e,t)end for c,t in ipairs(GetEnemyHeroes())do if t.networkID~=o.networkID and ValidTarget(t,e*1.5)then l,s,a=self:GetBestCastPosition(t,d,radius,e,r,n,false,"line")if GetDistanceSqr(n,a)<e*e then table.insert(i,Vector(a)-Vector(n))end end end local o local a=1 local r={}if#i>1 then for n,e in ipairs(i)do local n=Vector(e):rotated(0,t/2,0)local d=Vector(e):rotated(0,-t/2,0)local e,l=u(n,t,i)local n,t=u(d,t,i)if e>=a then o=C1 a=e r=l end if n>=a then o=C2 a=n r=t end end end if a>1 then local o=-1 local d local t for e,i in ipairs(r)do for e,n in ipairs(r)do local e=Vector():angleBetween(n,i)if e>o then o=e d=i t=n end end end return Vector(n)+e*(((d+t)/2)):normalized(),c,a else return m,c,1 end end function VPrediction:OnTick()if self.lastick==nil or self:GetTime()-self.lastick>.2 then self.lastick=self:GetTime()for n,e in pairs(self.TargetsWaypoints)do local e=1 while e<=#self.TargetsWaypoints[n]do if self.TargetsWaypoints[n][e]["time"]+self.WaypointsTime<self:GetTime()then table.remove(self.TargetsWaypoints[n],e)else e=e+1 end end end for n,e in ipairs(GetEnemyHeroes())do for n=1,e.buffCount do local n=e:getBuff(n)if n.valid and n.name=="Stun"then if self.TargetsImmobile[e.networkID]and self.TargetsImmobile[e.networkID]<self:GetTime()then self.TargetsImmobile[e.networkID]=self:GetTime()+(n.endT-n.startT)end end end end end end function VPrediction:DrawSavedWaypoints(n,e)local e=self:GetWaypoints(n.networkID,self:GetTime()-e)for n,e in ipairs(e)do DrawCircle3D(e.waypoint.x,myHero.y,e.waypoint.y,100,2,ARGB(255,255,255,255))DrawText3D(tostring(n),e.waypoint.x,myHero.y,e.waypoint.y,13,ARGB(255,255,255,255),true)DrawCircle3D(e.unitpos.x,myHero.y,e.unitpos.y,100,2,ARGB(255,255,0,0))end end function VPrediction:DrawHitBox(e)DrawCircle3D(e.x,e.y,e.z,self:GetHitBox(e),1,ARGB(255,255,255,255))if e then DrawCircle3D(e.x,e.y,e.z,self:GetHitBox(e),1,ARGB(255,0,255,0))end end function VPrediction:DLine(n,e,t)DrawLine3D(n.x,n.y,n.z,e.x,e.y,e.z,1,t)end function VPrediction:OnDraw()if self.showdevmode and _G.VPredictionMenu.Developers.Debug then LastGetTarget=LastGetTarget or myHero local e=GetTarget()or LastGetTarget LastGetTarget=e for n,e in ipairs(GetEnemyHeroes())do self:DrawHitBox(e)end if _G.VPredictionMenu.Developers.SC then self.EnemyMinions:update()self.JungleMinions:update()self.OtherMinions:update()self:CheckMinionCollision(Vector(myHero)+1050*(Vector(mousePos)-Vector(myHero)):normalized(),.25,70,1050,1800,myHero,true)end if e then self:DrawHitBox(e)local n,t,i=self:GetCircularCastPosition(e,.6,70,900,math.huge)if t>=-1 then DrawText3D(tostring(t),n.x,myHero.y,n.z,40,ARGB(255,255,255,255),true)DrawCircle3D(i.x,myHero.y,i.z,70+self:GetHitBox(e),1,ARGB(255,0,255,0))DrawCircle3D(n.x,myHero.y,n.z,70+self:GetHitBox(e),1,ARGB(255,255,0,0))end local e=self:GetCurrentWayPoints(e)for n=1,#e-1 do self:DLine(Vector(e[n].x,myHero.y,e[n].y),Vector(e[n+1].x,myHero.y,e[n+1].y),ARGB(255,255,255,255))end end end end function VPrediction:GetHitBox(e)if self.nohitboxmode and e.type and e.type==myHero.type then return 0 end return(self.hitboxes[e.charName]~=nil and self.hitboxes[e.charName]~=0)and self.hitboxes[e.charName]or 65 end function VPrediction:GetProjectileSpeed(e)return self.projectilespeeds[e.charName]and self.projectilespeeds[e.charName]or math.huge end function VPrediction:CalcDamageOfAttack(n,t,o,e)local i=n.armorPenPercent local a=n.armorPen local r=n.totalDamage+(e or 0)local e=o.name:find("CritAttack")and 2 or 1 if n.type=="obj_AI_Minion"then i=1 elseif n.type=="obj_AI_Turret"then i=.7 end if t.type=="obj_AI_Turret"then i=1 a=0 e=1 end local i=(t.armor*i)-a if i<0 then e=1*e else e=100/(100+i)*e end if n.type==myHero.type and t.type=="obj_AI_Turret"then r=math.max(n.totalDamage,n.damage+.4*n.ap)end if n.type=="obj_AI_Minion"and t.type==myHero.type and n.team~=TEAM_NEUTRAL then e=.6*e end if n.type==myHero.type and t.type=="obj_AI_Turret"then e=.95*e end if n.type=="obj_AI_Minion"and t.type=="obj_AI_Turret"then e=.475*e end if n.type=="obj_AI_Turret"and(t.charName=="Red_Minion_MechCannon"or t.charName=="Blue_Minion_MechCannon")then e=.8*e end if n.type=="obj_AI_Turret"and(t.charName=="Red_Minion_Wizard"or t.charName=="Blue_Minion_Wizard"or t.charName=="Red_Minion_Basic"or t.charName=="Blue_Minion_Basic")then e=(1/.875)*e end if n.type=="obj_AI_Turret"then e=1.05*e end return e*r end class"ScriptUpdate"function ScriptUpdate:__init(r,a,o,t,i,n,e)self.NewVer=n self.NoNewVer=i self.UpdateDone=e self.LocalVersion=r self.VersionPath=a self.ScriptPath=o self.SavePath=t self.LuaSocket=require("socket")self.VersionSocket=self.LuaSocket.connect("cdn.rawgit.com",80)self.VersionSocket:send("GET "..self.VersionPath.."?rand="..math.random(99999999).." HTTP/1.0\r\nHost: cdn.rawgit.com\r\n\r\n")self.VersionSocket:settimeout(0,'b')self.VersionSocket:settimeout(99999999,'t')self.LastPrint=""self.File=""AddTickCallback(function()self:GetOnlineVersion()end)end function ScriptUpdate:GetOnlineVersion()if self.VersionStatus=='closed'then return end self.VersionReceive,self.VersionStatus,self.Snipped=self.VersionSocket:receive(1024)if self.VersionReceive then if self.LastPrint~=self.VersionReceive then self.LastPrint=self.VersionReceive self.File=self.File..self.VersionReceive end end if self.Snipped~=""and self.Snipped then self.File=self.File..self.Snipped end if self.VersionStatus=='closed'then local e=string.find(self.File,'X-Cache: HIT')self.OnlineVersion=tonumber(string.sub(self.File,e+14))if self.OnlineVersion>self.LocalVersion then self.ScriptSocket=self.LuaSocket.connect("cdn.rawgit.com",80)self.ScriptSocket:send("GET "..self.ScriptPath.."?rand="..math.random(99999999).." HTTP/1.0\r\nHost: cdn.rawgit.com\r\n\r\n")self.ScriptSocket:settimeout(0,'b')self.ScriptSocket:settimeout(99999999,'t')self.LastPrint=""self.File=""if self.NewVer then print(self.NewVer)end AddTickCallback(function()self:DownloadUpdate()end)else if self.NoNewVer then print(self.NoNewVer)end end end end function ScriptUpdate:DownloadUpdate()if self.ScriptStatus=='closed'then return end self.ScriptReceive,self.ScriptStatus,self.Snipped=self.ScriptSocket:receive(1024)if self.ScriptReceive then if self.LastPrint~=self.ScriptReceive then self.LastPrint=self.ScriptReceive self.File=self.File..self.ScriptReceive end end if self.Snipped~=""and self.Snipped then self.File=self.File..self.Snipped end if self.ScriptStatus=='closed'then local e=string.find(self.File,'X-Cache: HIT')self.ScriptFile=string.sub(self.File,e+14)local e=io.open(self.SavePath,"w+")e:write(self.ScriptFile)e:flush()e:close()if self.UpdateDone then print(self.UpdateDone)end end end
